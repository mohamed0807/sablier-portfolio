{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "initialAdmin",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "initialNFTDescriptor",
          "type": "address",
          "internalType": "contract IFlowNFTDescriptor"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "MAX_FEE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "UD60x18" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "adjustRatePerSecond",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        {
          "name": "newRatePerSecond",
          "type": "uint128",
          "internalType": "UD21x18"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "admin",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "aggregateBalance",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "contract IERC20"
        }
      ],
      "outputs": [
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "batch",
      "inputs": [
        { "name": "calls", "type": "bytes[]", "internalType": "bytes[]" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "collectProtocolRevenue",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "contract IERC20"
        },
        { "name": "to", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "coveredDebtOf",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "coveredDebt", "type": "uint128", "internalType": "uint128" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "create",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        { "name": "recipient", "type": "address", "internalType": "address" },
        {
          "name": "ratePerSecond",
          "type": "uint128",
          "internalType": "UD21x18"
        },
        {
          "name": "token",
          "type": "address",
          "internalType": "contract IERC20"
        },
        { "name": "transferable", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createAndDeposit",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        { "name": "recipient", "type": "address", "internalType": "address" },
        {
          "name": "ratePerSecond",
          "type": "uint128",
          "internalType": "UD21x18"
        },
        {
          "name": "token",
          "type": "address",
          "internalType": "contract IERC20"
        },
        { "name": "transferable", "type": "bool", "internalType": "bool" },
        { "name": "amount", "type": "uint128", "internalType": "uint128" }
      ],
      "outputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "depletionTimeOf",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "depletionTime",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deposit",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "amount", "type": "uint128", "internalType": "uint128" },
        { "name": "sender", "type": "address", "internalType": "address" },
        { "name": "recipient", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "depositAndPause",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "amount", "type": "uint128", "internalType": "uint128" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "depositViaBroker",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "totalAmount", "type": "uint128", "internalType": "uint128" },
        { "name": "sender", "type": "address", "internalType": "address" },
        { "name": "recipient", "type": "address", "internalType": "address" },
        {
          "name": "broker",
          "type": "tuple",
          "internalType": "struct Broker",
          "components": [
            { "name": "account", "type": "address", "internalType": "address" },
            { "name": "fee", "type": "uint256", "internalType": "UD60x18" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getApproved",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getBalance",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "balance", "type": "uint128", "internalType": "uint128" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRatePerSecond",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "ratePerSecond",
          "type": "uint128",
          "internalType": "UD21x18"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRecipient",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "recipient", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSender",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "sender", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSnapshotDebtScaled",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "snapshotDebtScaled",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSnapshotTime",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "snapshotTime", "type": "uint40", "internalType": "uint40" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStream",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "stream",
          "type": "tuple",
          "internalType": "struct Flow.Stream",
          "components": [
            { "name": "balance", "type": "uint128", "internalType": "uint128" },
            {
              "name": "ratePerSecond",
              "type": "uint128",
              "internalType": "UD21x18"
            },
            { "name": "sender", "type": "address", "internalType": "address" },
            {
              "name": "snapshotTime",
              "type": "uint40",
              "internalType": "uint40"
            },
            { "name": "isStream", "type": "bool", "internalType": "bool" },
            {
              "name": "isTransferable",
              "type": "bool",
              "internalType": "bool"
            },
            { "name": "isVoided", "type": "bool", "internalType": "bool" },
            {
              "name": "token",
              "type": "address",
              "internalType": "contract IERC20"
            },
            {
              "name": "tokenDecimals",
              "type": "uint8",
              "internalType": "uint8"
            },
            {
              "name": "snapshotDebtScaled",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getStreamsBySender",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "streamIds",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getToken",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "contract IERC20"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTokenDecimals",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "tokenDecimals", "type": "uint8", "internalType": "uint8" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isApprovedForAll",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "operator", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isPaused",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isStream",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isTransferable",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isVoided",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "result", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "nextStreamId",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "nftDescriptor",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IFlowNFTDescriptor"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ongoingDebtScaledOf",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "ongoingDebtScaled",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ownerOf",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "protocolFee",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "contract IERC20"
        }
      ],
      "outputs": [
        { "name": "fee", "type": "uint256", "internalType": "UD60x18" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "protocolRevenue",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "contract IERC20"
        }
      ],
      "outputs": [
        { "name": "revenue", "type": "uint128", "internalType": "uint128" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "recover",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "contract IERC20"
        },
        { "name": "to", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "refund",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "amount", "type": "uint128", "internalType": "uint128" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "refundAndPause",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "amount", "type": "uint128", "internalType": "uint128" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "refundableAmountOf",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "refundableAmount",
          "type": "uint128",
          "internalType": "uint128"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "restart",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        {
          "name": "ratePerSecond",
          "type": "uint128",
          "internalType": "UD21x18"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "restartAndDeposit",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        {
          "name": "ratePerSecond",
          "type": "uint128",
          "internalType": "UD21x18"
        },
        { "name": "amount", "type": "uint128", "internalType": "uint128" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "safeTransferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "safeTransferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "senderToStreamId",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "streamIds", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setApprovalForAll",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "approved", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setNFTDescriptor",
      "inputs": [
        {
          "name": "newNFTDescriptor",
          "type": "address",
          "internalType": "contract IFlowNFTDescriptor"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setProtocolFee",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "internalType": "contract IERC20"
        },
        {
          "name": "newProtocolFee",
          "type": "uint256",
          "internalType": "UD60x18"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "statusOf",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "status",
          "type": "uint8",
          "internalType": "enum Flow.Status"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        { "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "symbol",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "tokenURI",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "uri", "type": "string", "internalType": "string" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalDebtOf",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        { "name": "totalDebt", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferAdmin",
      "inputs": [
        { "name": "newAdmin", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "uncoveredDebtOf",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "uncoveredDebt",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "void",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdraw",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint128", "internalType": "uint128" }
      ],
      "outputs": [
        {
          "name": "withdrawnAmount",
          "type": "uint128",
          "internalType": "uint128"
        },
        {
          "name": "protocolFeeAmount",
          "type": "uint128",
          "internalType": "uint128"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdrawMax",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "to", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "withdrawnAmount",
          "type": "uint128",
          "internalType": "uint128"
        },
        {
          "name": "protocolFeeAmount",
          "type": "uint128",
          "internalType": "uint128"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdrawableAmountOf",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [
        {
          "name": "withdrawableAmount",
          "type": "uint128",
          "internalType": "uint128"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "AdjustFlowStream",
      "inputs": [
        {
          "name": "streamId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "totalDebt",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "oldRatePerSecond",
          "type": "uint128",
          "indexed": false,
          "internalType": "UD21x18"
        },
        {
          "name": "newRatePerSecond",
          "type": "uint128",
          "indexed": false,
          "internalType": "UD21x18"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "approved",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ApprovalForAll",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "approved",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "BatchMetadataUpdate",
      "inputs": [
        {
          "name": "_fromTokenId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "_toTokenId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CollectProtocolRevenue",
      "inputs": [
        {
          "name": "admin",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "token",
          "type": "address",
          "indexed": true,
          "internalType": "contract IERC20"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "revenue",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CreateFlowStream",
      "inputs": [
        {
          "name": "streamId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "recipient",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "ratePerSecond",
          "type": "uint128",
          "indexed": false,
          "internalType": "UD21x18"
        },
        {
          "name": "token",
          "type": "address",
          "indexed": true,
          "internalType": "contract IERC20"
        },
        {
          "name": "transferable",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "DepositFlowStream",
      "inputs": [
        {
          "name": "streamId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "funder",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "MetadataUpdate",
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PauseFlowStream",
      "inputs": [
        {
          "name": "streamId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "recipient",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "totalDebt",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Recover",
      "inputs": [
        {
          "name": "admin",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "token",
          "type": "address",
          "indexed": true,
          "internalType": "contract IERC20"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "surplus",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RefundFromFlowStream",
      "inputs": [
        {
          "name": "streamId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RestartFlowStream",
      "inputs": [
        {
          "name": "streamId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "ratePerSecond",
          "type": "uint128",
          "indexed": false,
          "internalType": "UD21x18"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SetNFTDescriptor",
      "inputs": [
        {
          "name": "admin",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "oldNFTDescriptor",
          "type": "address",
          "indexed": false,
          "internalType": "contract IFlowNFTDescriptor"
        },
        {
          "name": "newNFTDescriptor",
          "type": "address",
          "indexed": false,
          "internalType": "contract IFlowNFTDescriptor"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SetProtocolFee",
      "inputs": [
        {
          "name": "admin",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "token",
          "type": "address",
          "indexed": true,
          "internalType": "contract IERC20"
        },
        {
          "name": "oldProtocolFee",
          "type": "uint256",
          "indexed": false,
          "internalType": "UD60x18"
        },
        {
          "name": "newProtocolFee",
          "type": "uint256",
          "indexed": false,
          "internalType": "UD60x18"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TransferAdmin",
      "inputs": [
        {
          "name": "oldAdmin",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newAdmin",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "VoidFlowStream",
      "inputs": [
        {
          "name": "streamId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "recipient",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "caller",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "newTotalDebt",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "writtenOffDebt",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "WithdrawFromFlowStream",
      "inputs": [
        {
          "name": "streamId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "token",
          "type": "address",
          "indexed": true,
          "internalType": "contract IERC20"
        },
        {
          "name": "caller",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "withdrawAmount",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        },
        {
          "name": "protocolFeeAmount",
          "type": "uint128",
          "indexed": false,
          "internalType": "uint128"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [
        { "name": "target", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "AddressInsufficientBalance",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "BatchError",
      "inputs": [
        { "name": "errorData", "type": "bytes", "internalType": "bytes" }
      ]
    },
    {
      "type": "error",
      "name": "CallerNotAdmin",
      "inputs": [
        { "name": "admin", "type": "address", "internalType": "address" },
        { "name": "caller", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "DebtStreamBase_NoProtocolRevenue",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "DebtStreamBase_NotTransferable",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "DebtStreamBase_ProtocolFeeTooHigh",
      "inputs": [
        {
          "name": "newProtocolFee",
          "type": "uint256",
          "internalType": "UD60x18"
        },
        { "name": "maxFee", "type": "uint256", "internalType": "UD60x18" }
      ]
    },
    {
      "type": "error",
      "name": "DebtStreamBase_SurplusZero",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "DebtStream_BrokerAddressZero", "inputs": [] },
    {
      "type": "error",
      "name": "DebtStream_BrokerFeeTooHigh",
      "inputs": [
        { "name": "brokerFee", "type": "uint256", "internalType": "UD60x18" },
        { "name": "maxFee", "type": "uint256", "internalType": "UD60x18" }
      ]
    },
    {
      "type": "error",
      "name": "DebtStream_DepositAmountZero",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "DebtStream_InvalidCalculation",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        {
          "name": "availableAmount",
          "type": "uint128",
          "internalType": "uint128"
        },
        { "name": "amount", "type": "uint128", "internalType": "uint128" }
      ]
    },
    {
      "type": "error",
      "name": "DebtStream_InvalidTokenDecimals",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "DebtStream_NotStreamRecipient",
      "inputs": [
        { "name": "recipient", "type": "address", "internalType": "address" },
        {
          "name": "streamRecipient",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "DebtStream_NotStreamSender",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        { "name": "streamSender", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "DebtStream_Null",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "DebtStream_Overdraw",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "amount", "type": "uint128", "internalType": "uint128" },
        {
          "name": "withdrawableAmount",
          "type": "uint128",
          "internalType": "uint128"
        }
      ]
    },
    {
      "type": "error",
      "name": "DebtStream_RatePerSecondNotDifferent",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        {
          "name": "ratePerSecond",
          "type": "uint128",
          "internalType": "UD21x18"
        }
      ]
    },
    {
      "type": "error",
      "name": "DebtStream_RefundAmountZero",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "DebtStream_RefundOverflow",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        {
          "name": "refundAmount",
          "type": "uint128",
          "internalType": "uint128"
        },
        {
          "name": "refundableAmount",
          "type": "uint128",
          "internalType": "uint128"
        }
      ]
    },
    { "type": "error", "name": "DebtStream_SenderZeroAddress", "inputs": [] },
    {
      "type": "error",
      "name": "DebtStream_StreamNotPaused",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "DebtStream_StreamPaused",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "DebtStream_StreamVoided",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "DebtStream_Unauthorized",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "caller", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "DebtStream_WithdrawAmountZero",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "DebtStream_WithdrawToZeroAddress",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "DebtStream_WithdrawalAddressNotRecipient",
      "inputs": [
        { "name": "streamId", "type": "uint256", "internalType": "uint256" },
        { "name": "caller", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "DelegateCall", "inputs": [] },
    {
      "type": "error",
      "name": "ERC721IncorrectOwner",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" },
        { "name": "owner", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InsufficientApproval",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidApprover",
      "inputs": [
        { "name": "approver", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidOperator",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidOwner",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidReceiver",
      "inputs": [
        { "name": "receiver", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidSender",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC721NonexistentToken",
      "inputs": [
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ]
    },
    { "type": "error", "name": "FailedInnerCall", "inputs": [] },
    {
      "type": "error",
      "name": "PRBMath_MulDiv18_Overflow",
      "inputs": [
        { "name": "x", "type": "uint256", "internalType": "uint256" },
        { "name": "y", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "PRBMath_UD60x18_IntoUint128_Overflow",
      "inputs": [{ "name": "x", "type": "uint256", "internalType": "UD60x18" }]
    },
    {
      "type": "error",
      "name": "SafeCastOverflowedUintDowncast",
      "inputs": [
        { "name": "bits", "type": "uint8", "internalType": "uint8" },
        { "name": "value", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" }
      ]
    }
  ],
  "bytecode": {
    "object": "0x60a0604052346103ab57614c996040813803918261001c816103af565b9384928339810103126103ab5780516001600160a01b03811691908290036103ab57602001516001600160a01b038116908190036103ab5761005e60406103af565b91600f83526e1119589d0814dd1c99585b48139195608a1b602084015261008560406103af565b600b81526a444542542d53545245414d60a81b60208201523060805283519092906001600160401b0381116102bc57600154600181811c911680156103a1575b602082101461029e57601f811161033e575b50602094601f82116001146102db579481929394955f926102d0575b50508160011b915f199060031b1c1916176001555b82516001600160401b0381116102bc57600254600181811c911680156102b2575b602082101461029e57601f811161023b575b506020601f82116001146101d857819293945f926101cd575b50508160011b915f199060031b1c1916176002555b60016008555f80546001600160a01b031990811684178255600980549091169290921790915560405191907fbdd36143ee09de60bdefca70680e0f71189b2ed7acee364b53917ad433fdaf808180a36148c490816103d582396080518161324d0152f35b015190505f80610154565b601f1982169060025f52805f20915f5b8181106102235750958360019596971061020b575b505050811b01600255610169565b01515f1960f88460031b161c191690555f80806101fd565b9192602060018192868b0151815501940192016101e8565b60025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace601f830160051c81019160208410610294575b601f0160051c01905b818110610289575061013b565b5f815560010161027c565b9091508190610273565b634e487b7160e01b5f52602260045260245ffd5b90607f1690610129565b634e487b7160e01b5f52604160045260245ffd5b015190505f806100f3565b601f1982169560015f52805f20915f5b8881106103265750836001959697981061030e575b505050811b01600155610108565b01515f1960f88460031b161c191690555f8080610300565b919260206001819286850151815501940192016102eb565b60015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6601f830160051c81019160208410610397575b601f0160051c01905b81811061038c57506100d7565b5f815560010161037f565b9091508190610376565b90607f16906100c5565b5f80fd5b6040519190601f01601f191682016001600160401b038111838210176102bc5760405256fe6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a7146128405750806306fdde0314612785578063081812fc1461276757806308b879231461272d578063095ea7b3146126105780630c5fd195146125c6578063136439dd1461252e5780631400ecec146124f45780631e0104391461249d5780631e897afb146123745780631e99d569146123575780631f0cce581461224857806323b872dd1461223157806324903ac4146121dc578063379d871a1461213b57806342842e0e1461211257806342e3e23d1461087157806344267570146120ec578063450ac908146120a4578063569f4c5914612054578063597150fa1461200c5780635ea2145b14611d395780635f55315214611d015780636352211e14611cd2578063648bf77414611b795780636d0cee7514611b2b57806370a0823114611ac157806375829def14611a3b5780637c7e10af146118f85780637cad6cd1146118195780637ddf9228146117df57806380448da31461179757806381632a861461170b578063894e9a0d1461155e57806395d89b411461141f578063a22cb4651461134d578063a7de07cd146112ff578063a8a482a6146111f4578063ad35efd41461117c578063b25645691461112c578063b5b3ca2c14610ff0578063b61f758314610f4d578063b62b31e414610f15578063b88d4fde14610e8b578063b8a3be6614610e56578063b971302a14610e05578063bc063e1a14610de3578063bc7a2d6c14610da9578063bcbd019e14610cd3578063bdf2a43c14610c8a578063c2f8e75014610a35578063c87b56dd14610923578063d4b80884146108a9578063d975dfed14610871578063e4b50cb814610820578063e985e9c5146107c7578063ea5ead1914610750578063eb5710d8146106d3578063ebb6f79a1461059c578063f851a44014610577578063fbf2777e146104f7578063fdd46d60146104205763ffe3d9f8146102d1575f80fd5b3461041c57604060031936011261041c576102ea612973565b6102f2612989565b6001600160a01b035f54163381036103ed57506001600160a01b03821691825f52600b6020526fffffffffffffffffffffffffffffffff60405f2054169081156103c157818361038592865f52600b60205260405f207fffffffffffffffffffffffffffffffff000000000000000000000000000000008154169055865f52600760205260405f20838154039055613de4565b6001600160a01b036040519216825260208201527fc9a4a66b97fd7e52e69c5be7b10bdc5341bded817201b9b7136a75068d4e4e0560403392a3005b837fc2c03612000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7fc6cce6a4000000000000000000000000000000000000000000000000000000005f526004523360245260445ffd5b5f80fd5b3461041c57606060031936011261041c5760043561043c612989565b6104446129ea565b9061044d613243565b825f52600c60205260ff600160405f20015460c81c16156104cb5761049783927ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce792602095614106565b939092604051908152a1604080516fffffffffffffffffffffffffffffffff928316815292909116602083015290f35b0390f35b827f92d01c0c000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b3461041c5760c060031936011261041c57610510612973565b610518612989565b906105216129ea565b9161052a6129b5565b91610533612a85565b60a435936fffffffffffffffffffffffffffffffff8516850361041c5760209561056f9461056894610563613243565b6137df565b91826134be565b604051908152f35b3461041c575f60031936011261041c5760206001600160a01b035f5416604051908152f35b3461041c57604060031936011261041c576004356105b86129cb565b6105c0613243565b815f52600c60205260ff600160405f20015460c81c16156106a757815f52600c60205260ff600160405f20015460d81c1661067b57815f52600c6020526001600160a01b03600160405f20015416330361064b57816106426020927ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce794613435565b604051908152a1005b507f1df35ae4000000000000000000000000000000000000000000000000000000005f526004523360245260445ffd5b507f96cb8556000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b507f92d01c0c000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c1615610725575f52600c602052602064ffffffffff600160405f20015460a01c16604051908152f35b7f92d01c0c000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b3461041c57604060031936011261041c5760043561076c612989565b610774613243565b815f52600c60205260ff600160405f20015460c81c16156106a757907ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce76104976020936107c08461379b565b9084614106565b3461041c57604060031936011261041c576107e0612973565b6001600160a01b036107f0612989565b91165f5260066020526001600160a01b0360405f2091165f52602052602060ff60405f2054166040519015158152f35b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c1615610725575f52600c60205260206001600160a01b03600260405f20015416604051908152f35b3461041c57602060031936011261041c57602061088f600435612e41565b6fffffffffffffffffffffffffffffffff60405191168152f35b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c161561072557805f52600c60205260405f205460801c156108f85761056f6020916130bc565b7f5158888e000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b3461041c57602060031936011261041c57600435610940816131b5565b505f6001600160a01b0360095416916044604051809481937fe9dc637500000000000000000000000000000000000000000000000000000000835230600484015260248301525afa8015610a2a575f906109ad575b6104c790604051918291602083526020830190612930565b503d805f833e6109bd8183612ab1565b81019060208183031261041c5780519067ffffffffffffffff821161041c57019080601f8301121561041c578151916109f583612af2565b91610a036040519384612ab1565b8383526020848301011161041c576104c792610a25916020808501910161290f565b610995565b6040513d5f823e3d90fd5b3461041c5760c060031936011261041c57600435610a516129cb565b610a5961299f565b610a616129b5565b60407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7c36011261041c57610a93613243565b835f52600c60205260ff600160405f20015460c81c1615610c5e57835f52600c60205260ff600160405f20015460d81c16610c3257610ad29184613ffb565b604051916040830183811067ffffffffffffffff821117610c05576040526084356001600160a01b038116810361041c57835260a435602084019080825267016345785d8a00008111610bce57506001600160a01b0384511615610ba6577ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce793610b6f610b66602095610642945190614700565b859291926134be565b835f52600c85526fffffffffffffffffffffffffffffffff6001600160a01b0380600260405f20015416935116911691339061454a565b7f06136175000000000000000000000000000000000000000000000000000000005f5260045ffd5b7f40964ebd000000000000000000000000000000000000000000000000000000005f5260045267016345785d8a000060245260445ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b837f96cb8556000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b837f92d01c0c000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c1615610725575f52600c602052602060405f205460801c15604051908152f35b3461041c57604060031936011261041c57600435610cef6129cb565b610cf7613243565b815f52600c60205260ff600160405f20015460c81c16156106a757815f52600c60205260405f205460801c15610d7d57815f52600c6020526001600160a01b03600160405f20015416330361064b5781610d746020927ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7946134be565b6106428161329d565b507f5158888e000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c16156107255761056f602091613fc1565b3461041c575f60031936011261041c57602060405167016345785d8a00008152f35b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c1615610725575f52600c60205260206001600160a01b03600160405f20015416604051908152f35b3461041c57602060031936011261041c576004355f52600c602052602060ff600160405f20015460c81c166040519015158152f35b3461041c57608060031936011261041c57610ea4612973565b610eac612989565b6064359167ffffffffffffffff831161041c573660238401121561041c57826004013591610ed983612af2565b92610ee76040519485612ab1565b808452366024828701011161041c576020815f926024610f139801838801378501015260443591612ed0565b005b3461041c57602060031936011261041c576001600160a01b03610f36612973565b165f52600a602052602060405f2054604051908152f35b3461041c57608060031936011261041c57600435610f696129cb565b610f7161299f565b610f796129b5565b90610f82613243565b835f52600c60205260ff600160405f20015460c81c1615610c5e57835f52600c60205260ff600160405f20015460d81c16610c3257602092610fea8593610642937ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce797613ffb565b826134be565b3461041c57604060031936011261041c57611009612973565b602435906001600160a01b035f54163381036103ed575067016345785d8a000082116110f4576001600160a01b031690815f52600a60205260405f205490825f52600a6020528060405f205560405191825260208201527f371789a3d97098f3070492613273a065a7e8a19e009fd1ae92a4b4d4c71ed62d60403392a36008545f1981019081116110c75760407f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c91815190600182526020820152a1005b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b507f5ef18d1b000000000000000000000000000000000000000000000000000000005f5260045267016345785d8a000060245260445ffd5b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c1615610725575f52600c602052602060ff600160405f20015460d01c166040519015158152f35b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c1615610725576111b490612e75565b60405160058210156111c7576020918152f35b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b3461041c57604060031936011261041c576004356112106129cb565b611218613243565b815f52600c60205260ff600160405f20015460c81c16156106a757815f52600c60205260405f205460801c15610d7d57815f52600c6020526001600160a01b03600160405f20015416330361064b5781807ffddf01d0842635e80929251f6862b3baf136a29f2b2fb148968e8b236d5785fe60606020947ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7965f52600c86526fffffffffffffffffffffffffffffffff60405f205460801c916112db8187613e90565b6112e486613201565b9260405193845288840152166040820152a2604051908152a1005b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c1615610725575f52600c602052602060ff600260405f20015460a01c16604051908152f35b3461041c57604060031936011261041c57611366612973565b6024359081151580920361041c576001600160a01b03169081156113f357335f52600660205260405f20825f5260205260405f207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b507f5b08ba18000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b3461041c575f60031936011261041c576040515f6002548060011c90600181168015611554575b602083108114611527578285529081156114e55750600114611487575b6104c78361147381850382612ab1565b604051918291602083526020830190612930565b91905060025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace915f905b8082106114cb57509091508101602001611473611463565b9192600181602092548385880101520191019092916114b3565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660208086019190915291151560051b840190910191506114739050611463565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f1691611446565b3461041c57602060031936011261041c576004355f61012060405161158281612a94565b8281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e0820152826101008201520152805f52600c60205260ff600160405f20015460c81c1615610725575f52600c60205260405f206040516115ea81612a94565b81546fffffffffffffffffffffffffffffffff811692838352602083019160801c82526001810154604084016001600160a01b0382168152606085018260a01c64ffffffffff16815260808601908360c81c60ff161515825260a08701928460d01c60ff161515845260c088019460d81c60ff161515855260028601549660e08901966001600160a01b03891688526101008a019860a01c60ff168952600301549861012001988952604051998a52516fffffffffffffffffffffffffffffffff1660208a0152516001600160a01b031660408901525164ffffffffff166060880152511515608087015251151560a086015251151560c0850152516001600160a01b031660e08401525160ff166101008301525161012082015261014090f35b3461041c57604060031936011261041c576004356117276129cb565b61172f613243565b815f52600c60205260ff600160405f20015460c81c16156106a757815f52600c6020526001600160a01b03600160405f20015416330361064b57816106426020927ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7946135c6565b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c1615610725575f52600c602052602060405f205460801c604051908152f35b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c16156107255761056f602091613e40565b3461041c57602060031936011261041c576004356001600160a01b03811680910361041c576001600160a01b035f54163381036103ed575060095490807fffffffffffffffffffffffff00000000000000000000000000000000000000008316176009556001600160a01b036040519216825260208201527fa2548bd4b805e907c1558a47b5858324fe8bb4a2e1ddfca647eecbf65610eebc60403392a26008545f1981019081116110c75760407f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c91815190600182526020820152a1005b3461041c57602060031936011261041c576001600160a01b03611919612973565b165f52600d60205260405f2060405190818260208354928381520180935f5260205f20925f5b818110611a2257505061195492500383612ab1565b81511561199e5790604051918291602083019060208452518091526040830191905f5b818110611985575050500390f35b8251845285945060209384019390920191600101611977565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f53747265616d20646f6573206e6f7420657869737420666f722074686973207360448201527f656e6465720000000000000000000000000000000000000000000000000000006064820152fd5b845483526001948501948794506020909301920161193f565b3461041c57602060031936011261041c57611a54612973565b5f546001600160a01b0381163381036103ed57506001600160a01b037fffffffffffffffffffffffff0000000000000000000000000000000000000000921691829116175f55337fbdd36143ee09de60bdefca70680e0f71189b2ed7acee364b53917ad433fdaf805f80a3005b3461041c57602060031936011261041c576001600160a01b03611ae2612973565b168015611aff575f526004602052602060405f2054604051908152f35b7f89c62b64000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c1615610725575f52600360205260206001600160a01b0360405f205416604051908152f35b3461041c57604060031936011261041c57611b92612973565b611b9a612989565b6001600160a01b035f54163381036103ed57506001600160a01b038216916040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152602081602481875afa8015610a2a575f90611c9e575b611c129150845f52600760205260405f205490612e68565b908115611c725781611c497f21252411d5a999da4bc6a490f7143b61ba690edceb4577a2800eab8dfbb1e92c9385611c6d94613de4565b604051918291339583602090939291936001600160a01b0360408201951681520152565b0390a3005b837fba8272c1000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b506020813d602011611cca575b81611cb860209383612ab1565b8101031261041c57611c129051611bfa565b3d9150611cab565b3461041c57602060031936011261041c576020611cf06004356131b5565b6001600160a01b0360405191168152f35b3461041c57602060031936011261041c576001600160a01b03611d22612973565b165f526007602052602060405f2054604051908152f35b3461041c57602060031936011261041c57600435611d55613243565b805f52600c60205260ff600160405f20015460c81c161561072557805f52600c60205260ff600160405f20015460d81c16611fe157805f52600c6020526001600160a01b03600160405f2001541633141580611fd1575b611fa257602081611ddd7ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce793613fc1565b80611f5257611deb82613e40565b80611f31575b505b5f828152600c84526040902060010180547fffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffff164260a01b78ffffffffff000000000000000000000000000000000000000016179055815f52600c835260405f206fffffffffffffffffffffffffffffffff8154169055815f52600c8352600160405f20017b010000000000000000000000000000000000000000000000000000007fffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffff825416179055815f52600c83526001600160a01b03600160405f20015416825f5260038452827fa8e3d71a6c0c719305004b430f6d17f12536f7b803db23a4d7016f5b52699a8c60606001600160a01b0360405f20541694611f1684613201565b9060405191338352898301526040820152a4604051908152a1005b825f52600c8452611f4a600360405f2001918254613078565b905584611df1565b815f52600c8352611f8e6fffffffffffffffffffffffffffffffff60405f205416835f52600c855260ff600260405f20015460a01c16906140ed565b825f52600c8452600360405f200155611df3565b7f1df35ae4000000000000000000000000000000000000000000000000000000005f526004523360245260445ffd5b50611fdb81614600565b15611dac565b7f96cb8556000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b3461041c5760a060031936011261041c57602061056f61202a612973565b612032612989565b61203a6129ea565b6120426129b5565b9161204b612a85565b93610563613243565b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c1615610725575f52600c602052602060ff600160405f20015460d81c166040519015158152f35b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c1615610725575f52600c6020526020600360405f200154604051908152f35b3461041c575f60031936011261041c5760206001600160a01b0360095416604051908152f35b3461041c57610f1361212336612a09565b9060405192612133602085612ab1565b5f8452612ed0565b3461041c57604060031936011261041c576004356121576129cb565b61215f613243565b815f52600c60205260ff600160405f20015460c81c16156106a757815f52600c60205260405f205460801c15610d7d57815f52600c6020526001600160a01b03600160405f20015416330361064b5781610d746020927ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7946135c6565b3461041c57604060031936011261041c576121f5612973565b6001600160a01b0360243591165f52600d60205260405f20805482101561041c5760209161222291612a43565b90549060031b1c604051908152f35b3461041c57610f1361224236612a09565b91612b7d565b3461041c57606060031936011261041c576004356122646129cb565b61226c6129ea565b90612275613243565b825f52600c60205260ff600160405f20015460c81c16156104cb57825f52600c60205260ff600160405f20015460d81c1661232b57825f52600c6020526001600160a01b03600160405f2001541633036122fb5791610642602092610fea7ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79584613435565b827f1df35ae4000000000000000000000000000000000000000000000000000000005f526004523360245260445ffd5b827f96cb8556000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b3461041c575f60031936011261041c576020600854604051908152f35b3461041c57602060031936011261041c5760043567ffffffffffffffff811161041c573660238201121561041c57806004013567ffffffffffffffff811161041c573660248260051b8401011161041c57905f907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbd81360301915b83811015610f135760248160051b830101358381121561041c57820160248101359067ffffffffffffffff821161041c57604401813603811361041c57815f92918392604051928392833781018381520390305af461244c612b4e565b901561245b57506001016123ef565b612499906040519182917fd9354485000000000000000000000000000000000000000000000000000000008352602060048401526024830190612930565b0390fd5b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c1615610725575f52600c60205260206fffffffffffffffffffffffffffffffff60405f205416604051908152f35b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c16156107255761088f602091613403565b3461041c57602060031936011261041c5760043561254a613243565b805f52600c60205260ff600160405f20015460c81c161561072557805f52600c60205260405f205460801c156108f857805f52600c6020526001600160a01b03600160405f200154163303611fa2576020816106427ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79361329d565b3461041c57602060031936011261041c576001600160a01b036125e7612973565b165f52600b60205260206fffffffffffffffffffffffffffffffff60405f205416604051908152f35b3461041c57604060031936011261041c57612629612973565b602435612635816131b5565b3315158061271a575b806126e7575b6126bb5781906001600160a01b0380851691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9255f80a45f5260056020526001600160a01b0360405f2091167fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790555f80f35b7fa9fbf51f000000000000000000000000000000000000000000000000000000005f523360045260245ffd5b506001600160a01b0381165f52600660205260405f206001600160a01b0333165f5260205260ff60405f20541615612644565b50336001600160a01b038216141561263e565b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c16156107255761056f602091613201565b3461041c57602060031936011261041c576020611cf0600435612b2c565b3461041c575f60031936011261041c576040515f6001548060011c90600181168015612836575b602083108114611527578285529081156114e557506001146127d8576104c78361147381850382612ab1565b91905060015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6915f905b80821061281c57509091508101602001611473611463565b919260018160209254838588010152019101909291612804565b91607f16916127ac565b3461041c57602060031936011261041c57600435907fffffffff00000000000000000000000000000000000000000000000000000000821680920361041c57817f80ac58cd00000000000000000000000000000000000000000000000000000000602093149081156128e5575b81156128bb575b5015158152f35b7f01ffc9a700000000000000000000000000000000000000000000000000000000915014836128b4565b7f5b5e139f00000000000000000000000000000000000000000000000000000000811491506128ad565b5f5b8381106129205750505f910152565b8181015183820152602001612911565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209361296c8151809281875287808801910161290f565b0116010190565b600435906001600160a01b038216820361041c57565b602435906001600160a01b038216820361041c57565b604435906001600160a01b038216820361041c57565b606435906001600160a01b038216820361041c57565b602435906fffffffffffffffffffffffffffffffff8216820361041c57565b604435906fffffffffffffffffffffffffffffffff8216820361041c57565b600319606091011261041c576004356001600160a01b038116810361041c57906024356001600160a01b038116810361041c579060443590565b8054821015612a58575f5260205f2001905f90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b60843590811515820361041c57565b610140810190811067ffffffffffffffff821117610c0557604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610c0557604052565b67ffffffffffffffff8111610c0557601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b612b35816131b5565b505f5260056020526001600160a01b0360405f20541690565b3d15612b78573d90612b5f82612af2565b91612b6d6040519384612ab1565b82523d5f602084013e565b606090565b91906001600160a01b0316918215612e1557815f5260036020526001600160a01b0360405f205416151580612df8575b612dcc57815f5260036020526001600160a01b0360405f2054169233151580612d04575b50907ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce760206001600160a01b039386612cb6575b805f526004825260405f2060018154019055855f526003825260405f20817fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790558560405191887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a4858152a116808303612c8557505050565b7f64283d7b000000000000000000000000000000000000000000000000000000005f5260045260245260445260645ffd5b612ced865f52600560205260405f207fffffffffffffffffffffffff00000000000000000000000000000000000000008154169055565b865f526004825260405f205f198154019055612c05565b80612d75575b15612d15575f612bd1565b8284612d46577f7e273289000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7f177e802f000000000000000000000000000000000000000000000000000000005f523360045260245260445ffd5b503384148015612da3575b80612d0a5750825f526005602052336001600160a01b0360405f20541614612d0a565b50835f52600660205260405f206001600160a01b0333165f5260205260ff60405f205416612d80565b507f123f349c000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b50815f52600c60205260ff600160405f20015460d01c1615612bad565b7f64a0ae92000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b805f52600c60205260ff600160405f20015460c81c161561072557612e659061379b565b90565b919082039182116110c757565b805f52600c60205260ff600160405f20015460d81c16612eca57612e9881613fc1565b1515905f52600c60205260405f205460801c15612ebc57612eb7575f90565b600190565b612ec557600290565b600390565b50600490565b90612edc838284612b7d565b803b612ee9575b50505050565b602091612f486001600160a01b038093169560405195869485947f150b7a020000000000000000000000000000000000000000000000000000000086523360048701521660248501526044840152608060648401526084830190612930565b03815f865af15f918161301b575b50612f9d5750612f64612b4e565b80519081612f9857827f64a0ae92000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b602001fd5b7fffffffff000000000000000000000000000000000000000000000000000000007f150b7a0200000000000000000000000000000000000000000000000000000000911603612ff057505f808080612ee3565b7f64a0ae92000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b9091506020813d602011613070575b8161303760209383612ab1565b8101031261041c57517fffffffff000000000000000000000000000000000000000000000000000000008116810361041c57905f612f56565b3d915061302a565b919082018092116110c757565b811561308f570490565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b805f52600c6020526fffffffffffffffffffffffffffffffff60405f2054169081156131af57805f52600c60205261310260ff600260405f20015460a01c1680936140ed565b91815f52600c60205261311c600360405f200154916140d0565b9061312f61312984613e40565b82613078565b6131398386613078565b11156131a757825f52600c60205260405f205460801c9303019161315d8184613085565b92811561308f5706613186575f52600c60205264ffffffffff600160405f20015460a01c160190565b906001915f52600c60205264ffffffffff8260405f20015460a01c16010190565b505050505f90565b50505f90565b805f5260036020526001600160a01b0360405f2054169081156131d6575090565b7f7e273289000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b612e659061322761321182613e40565b825f52600c602052600360405f20015490613078565b905f52600c60205260ff600260405f20015460a01c169061452a565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361327557565b7fa1c0d6e5000000000000000000000000000000000000000000000000000000005f5260045ffd5b805f52600c60205260405f205460801c156133a2576132bb81613e40565b80613380575b505f818152600c6020908152604080832060018101805478ffffffffff00000000000000000000000000000000000000004260a01b167fffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffff82161790915581546fffffffffffffffffffffffffffffffff16909155600383529220546001600160a01b0390811693921691907fda83bf669c651406e02062769e01d14cccb5625ea685fd95e0e56d29597dac479061337783613201565b604051908152a4565b815f52600c60205261339a600360405f2001918254613078565b90555f6132c1565b7f72ee449a000000000000000000000000000000000000000000000000000000005f526004525f60245260445ffd5b906fffffffffffffffffffffffffffffffff809116911603906fffffffffffffffffffffffffffffffff82116110c757565b612e6590805f52600c60205261342f6fffffffffffffffffffffffffffffffff60405f2054169161379b565b906133d1565b805f52600c60205260405f205460801c613493576134538282613e90565b6fffffffffffffffffffffffffffffffff604051921682527fc2a543cfadbf862642247e28711aaa30e3460384be5712be6557fee3384454fd60203393a3565b7ffe535094000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b906fffffffffffffffffffffffffffffffff1690811561359b575f818152600c60205260409020600281015481546fffffffffffffffffffffffffffffffff9081168501916001600160a01b03169082116110c75761356d926fffffffffffffffffffffffffffffffff8693167fffffffffffffffffffffffffffffffff00000000000000000000000000000000825416179055805f52600760205260405f208281540190553090339061454a565b6040519182527fa06c1466b3c9751408a5ac337a2e8808e5ee0ceed1fd70635d041b21174eb6b460203393a3565b7fe01053fe000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b6fffffffffffffffffffffffffffffffff8216801561376f576fffffffffffffffffffffffffffffffff6135f983613403565b1680821161373d57825f52600c6020526fffffffffffffffffffffffffffffffff60405f205416106136eb5760207fe31f2d40d5780915b1e656a67e11bdf09b0a4a925ec42bbeae220c8ca937ab4991835f52600c82526136e2816001600160a01b03600160405f200154168097875f52600c86526001600160a01b03600260405f2001541690885f52600c87526fffffffffffffffffffffffffffffffff8060405f2092818454160316167fffffffffffffffffffffffffffffffff00000000000000000000000000000000825416179055805f526007865260405f20838154039055613de4565b604051908152a3565b90805f52600c6020526fffffffffffffffffffffffffffffffff60405f205416907f38dcd410000000000000000000000000000000000000000000000000000000005f5260045260245260445260645ffd5b917fd8ffee82000000000000000000000000000000000000000000000000000000005f5260045260245260445260645ffd5b507f0ad01274000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b805f52600c6020526fffffffffffffffffffffffffffffffff60405f2054169081156131af576137ca90613201565b8082106137db57612e6591506145a4565b5090565b6001600160a01b039095949293919516908115613dbc576001600160a01b0316926040517f313ce567000000000000000000000000000000000000000000000000000000008152602081600481885afa8015610a2a575f90613d7f575b60ff9150169560128711613d53576008549687866040519261385d84612a94565b5f845260208401956fffffffffffffffffffffffffffffffff1695868152604085019088825260608601994264ffffffffff168b52608087016001815260a088019115159b8c835260c08901935f855260e08a019788526101008a019687526101208a01985f8a525f52600c60205260405f2099516fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168a547fffffffffffffffffffffffffffffffff0000000000000000000000000000000016178a55516fffffffffffffffffffffffffffffffff16613976908a906fffffffffffffffffffffffffffffffff7fffffffffffffffffffffffffffffffff0000000000000000000000000000000083549260801b169116179055565b9351600189018054955178ffffffffff000000000000000000000000000000000000000060a09190911b166001600160a01b039092167fffffffffffffff00000000000000000000000000000000000000000000000000909616959095171784555115159083549051151560d01b7aff0000000000000000000000000000000000000000000000000000169160c81b79ff0000000000000000000000000000000000000000000000000016907fffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffff161717825551151581549060d81b7bff00000000000000000000000000000000000000000000000000000016907fffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffff161790556002840191516001600160a01b03166001600160a01b031682547fffffffffffffffffffffffff0000000000000000000000000000000000000000161782555181549060a01b74ff000000000000000000000000000000000000000016907fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16179055519060030155825f52600d60205260405f209081549168010000000000000000831015610c055782613b579160016001600160a01b0395018155612a43565b81549060031b905f198b831b921b19161790556001880160085516928315612e1557865f5260036020526001600160a01b0360405f205416151580613d36575b613d0a57865f5260036020526001600160a01b0360405f2054167ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce760208215159283613cbc575b875f526004825260405f20600181540190558a5f526003825260405f20887fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055604051908b89827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a4508a8152a1613c90577f2262fa211f8507786a60fefb231f7898b8145fe16350f281c91f121bd2ee118d916060916040519189835260208301526040820152a4565b7f73c6ac6e000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b613cf38b5f52600560205260405f207fffffffffffffffffffffffff00000000000000000000000000000000000000008154169055565b805f526004825260405f205f198154019055613bde565b867f123f349c000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b50865f52600c60205260ff600160405f20015460d01c1615613b97565b847fa05b0f3a000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b506020813d602011613db4575b81613d9960209383612ab1565b8101031261041c575160ff8116810361041c5760ff9061383c565b3d9150613d8c565b7ff54bb717000000000000000000000000000000000000000000000000000000005f5260045ffd5b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000060208201526001600160a01b03929092166024830152604480830193909352918152613e3e91613e39606483612ab1565b614672565b565b5f908152600c602052604090206001810154905460801c9060a01c64ffffffffff1681158015613e86575b6131af57804203918083029283041490421417156110c75790565b5080421115613e6b565b91906fffffffffffffffffffffffffffffffff811692805f52600c60205260405f205460801c8414613f9157613e3e929350613ecb81613e40565b80613f6f575b505f908152600c6020526040902060018101805478ffffffffff00000000000000000000000000000000000000004260a01b167fffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffff90911617905580546fffffffffffffffffffffffffffffffff1660809290921b7fffffffffffffffffffffffffffffffff0000000000000000000000000000000016919091179055565b815f52600c602052613f89600360405f2001918254613078565b90555f613ed1565b83907f72ee449a000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b805f52600c602052613fe96fffffffffffffffffffffffffffffffff60405f20541691613201565b90818110156131af57612e6591612e68565b90815f52600c6020526001600160a01b0380600160405f2001541691169081036140885750805f5260036020526001600160a01b038060405f2054169216918203614044575050565b5f5260036020526001600160a01b0360405f205416907f09b10ee1000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b905f52600c6020526001600160a01b03600160405f20015416907fed7f943d000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b601260ff8216146140e75760120360ff16600a0a90565b50600190565b90601260ff8216146137db5760120360ff16600a0a0290565b5f9392916fffffffffffffffffffffffffffffffff83169182156144ff576001600160a01b0382169182156144d357815f5260036020526001600160a01b0360405f205416831415806144c3575b61449057815f52600c60205260ff600260405f20015460a01c169361419161417b84613e40565b845f52600c602052600360405f20015490613078565b61419b868261452a565b95845f52600c6020526fffffffffffffffffffffffffffffffff60405f205416928784105f14614471576fffffffffffffffffffffffffffffffff845b1680821161443e5750906141eb916140ed565b90845f52600c602052600360405f2001548211155f146143db5750835f52600c602052600360405f20019081540390555b5f838152600c6020908152604080832080546fffffffffffffffffffffffffffffffff8082168c9003167fffffffffffffffffffffffffffffffff00000000000000000000000000000000909116178155600201546001600160a01b0316808452600a909252909120549095908061436d575b506142ed6142d76fffffffffffffffffffffffffffffffff926142c8848b1680978b5f52600760205260405f208281540390558b613de4565b6142d187613201565b90612e68565b92855f52600c6020528260405f205416906133d1565b16036143405760607f1a7b0d6c8f96b874563b711cf97793fe3be5dc42dbd1e0720ce40f326918e817916040519033825260208201526fffffffffffffffffffffffffffffffff89166040820152a49190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52600160045260245ffd5b6142d799506143916142ed916fffffffffffffffffffffffffffffffff9399614700565b9a909a988b895f52600b602052848060405f2092818454160116167fffffffffffffffffffffffffffffffff0000000000000000000000000000000082541617905592505061428f565b5f858152600c60205260409020919003600382015560010180547fffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffff164260a01b78ffffffffff00000000000000000000000000000000000000001617905561421c565b90867f15d272a1000000000000000000000000000000000000000000000000000000005f5260045260245260445260645ffd5b6fffffffffffffffffffffffffffffffff61448b896145a4565b6141d8565b507fe5959101000000000000000000000000000000000000000000000000000000005f526004523360245260445260645ffd5b506144cd82614600565b15614154565b507fcf1fa0b8000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7fe925abc7000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b90601260ff8216146137db579060ff612e659260120316600a0a90613085565b9091926001600160a01b03613e3e9481604051957f23b872dd000000000000000000000000000000000000000000000000000000006020880152166024860152166044840152606483015260648252613e39608483612ab1565b6fffffffffffffffffffffffffffffffff81116145d0576fffffffffffffffffffffffffffffffff1690565b7f6dfcc650000000000000000000000000000000000000000000000000000000005f52608060045260245260445ffd5b805f5260036020526001600160a01b0360405f20541690813314918215614646575b50811561462d575090565b90506001600160a01b036146413392612b2c565b161490565b9091505f52600660205260405f206001600160a01b0333165f5260205260ff60405f205416905f614622565b5f806001600160a01b0361469b93169360208151910182865af1614694612b4e565b908361482b565b80519081151591826146dc575b50506146b15750565b7f5274afe7000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b819250906020918101031261041c576020015180159081150361041c575f806146a8565b919061471e906fffffffffffffffffffffffffffffffff841661477d565b6fffffffffffffffffffffffffffffffff8111614752576fffffffffffffffffffffffffffffffff612e65911680936133d1565b7f4916adce000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b9190915f198382098382029182808310920391808303921461481a57670de0b6b3a76400008210156147ea577faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106699394670de0b6b3a7640000910990828211900360ee1b910360121c170290565b84907f5173648d000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b5050670de0b6b3a764000090049150565b90614868575080511561484057805190602001fd5b7f1425ea42000000000000000000000000000000000000000000000000000000005f5260045ffd5b815115806148ae575b614879575090565b6001600160a01b03907f9996b315000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b50803b1561487156fea164736f6c634300081a000a",
    "sourceMap": "1134:30501:75:-:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;1134:30501:75;;;;;;;;;;;;-1:-1:-1;;;;;1134:30501:75;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;1134:30501:75;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1134:30501:75;;;;460:4:80;441:24;;1134:30501:75;;;;;-1:-1:-1;;;;;1134:30501:75;;;;1447:13:8;1134:30501:75;1447:13:8;1134:30501:75;;;;;;;;;-1:-1:-1;1134:30501:75;;;;;;;;;;;-1:-1:-1;1134:30501:75;;;;;;;;;;;;;;;;-1:-1:-1;1134:30501:75;;;;;;;1447:13:8;1134:30501:75;;;;;;;;;;;1447:13:8;1134:30501:75;;;;-1:-1:-1;;;;;1134:30501:75;;;;1470:17:8;1134:30501:75;1447:13:8;1134:30501:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1134:30501:75;;;;;;;1447:13:8;1134:30501:75;;;;;;;;;;;1470:17:8;1134:30501:75;;1447:13:8;2671:16:79;1134:30501:75;-1:-1:-1;1134:30501:75;;-1:-1:-1;;;;;;1134:30501:75;;;;;;;2727:36:79;1134:30501:75;;;;;;;;;;;;;;;;2778:63:79;-1:-1:-1;;2778:63:79;1134:30501:75;;;;;;441:24:80;1134:30501:75;;;;;;;;;;-1:-1:-1;1134:30501:75;;;;;;;;;;1470:17:8;-1:-1:-1;1134:30501:75;;-1:-1:-1;1134:30501:75;;-1:-1:-1;1134:30501:75;;;;;;;;;1447:13:8;1134:30501:75;;;;;;;;;;;;;1470:17:8;1134:30501:75;;;;;;;;;;;;;;;;;;;;;;;;;;;1447:13:8;1134:30501:75;;;;;;;;;;;;;;;;1470:17:8;-1:-1:-1;1134:30501:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1134:30501:75;;1447:13:8;1134:30501:75;;;;;;-1:-1:-1;1134:30501:75;;;;;;;;-1:-1:-1;1134:30501:75;;;;;-1:-1:-1;1134:30501:75;;;;;;;;;;;;-1:-1:-1;1134:30501:75;;;;;-1:-1:-1;1134:30501:75;;;;;-1:-1:-1;1134:30501:75;;;;;;;;;;1447:13:8;-1:-1:-1;1134:30501:75;;-1:-1:-1;1134:30501:75;;-1:-1:-1;1134:30501:75;;;;;;;;1447:13:8;1134:30501:75;;;;;;;;;;;;;;1447:13:8;1134:30501:75;;;;;;;;;;;;;;;;;;;;;;;;;;;1447:13:8;1134:30501:75;;;;;;;;;;;;;;;;1447:13:8;-1:-1:-1;1134:30501:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1134:30501:75;;1447:13:8;1134:30501:75;;;;;;-1:-1:-1;1134:30501:75;;;;;;;;;;;;-1:-1:-1;1134:30501:75;;;;;;;;;-1:-1:-1;;1134:30501:75;;;-1:-1:-1;;;;;1134:30501:75;;;;;;;;;;:::o",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a7146128405750806306fdde0314612785578063081812fc1461276757806308b879231461272d578063095ea7b3146126105780630c5fd195146125c6578063136439dd1461252e5780631400ecec146124f45780631e0104391461249d5780631e897afb146123745780631e99d569146123575780631f0cce581461224857806323b872dd1461223157806324903ac4146121dc578063379d871a1461213b57806342842e0e1461211257806342e3e23d1461087157806344267570146120ec578063450ac908146120a4578063569f4c5914612054578063597150fa1461200c5780635ea2145b14611d395780635f55315214611d015780636352211e14611cd2578063648bf77414611b795780636d0cee7514611b2b57806370a0823114611ac157806375829def14611a3b5780637c7e10af146118f85780637cad6cd1146118195780637ddf9228146117df57806380448da31461179757806381632a861461170b578063894e9a0d1461155e57806395d89b411461141f578063a22cb4651461134d578063a7de07cd146112ff578063a8a482a6146111f4578063ad35efd41461117c578063b25645691461112c578063b5b3ca2c14610ff0578063b61f758314610f4d578063b62b31e414610f15578063b88d4fde14610e8b578063b8a3be6614610e56578063b971302a14610e05578063bc063e1a14610de3578063bc7a2d6c14610da9578063bcbd019e14610cd3578063bdf2a43c14610c8a578063c2f8e75014610a35578063c87b56dd14610923578063d4b80884146108a9578063d975dfed14610871578063e4b50cb814610820578063e985e9c5146107c7578063ea5ead1914610750578063eb5710d8146106d3578063ebb6f79a1461059c578063f851a44014610577578063fbf2777e146104f7578063fdd46d60146104205763ffe3d9f8146102d1575f80fd5b3461041c57604060031936011261041c576102ea612973565b6102f2612989565b6001600160a01b035f54163381036103ed57506001600160a01b03821691825f52600b6020526fffffffffffffffffffffffffffffffff60405f2054169081156103c157818361038592865f52600b60205260405f207fffffffffffffffffffffffffffffffff000000000000000000000000000000008154169055865f52600760205260405f20838154039055613de4565b6001600160a01b036040519216825260208201527fc9a4a66b97fd7e52e69c5be7b10bdc5341bded817201b9b7136a75068d4e4e0560403392a3005b837fc2c03612000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7fc6cce6a4000000000000000000000000000000000000000000000000000000005f526004523360245260445ffd5b5f80fd5b3461041c57606060031936011261041c5760043561043c612989565b6104446129ea565b9061044d613243565b825f52600c60205260ff600160405f20015460c81c16156104cb5761049783927ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce792602095614106565b939092604051908152a1604080516fffffffffffffffffffffffffffffffff928316815292909116602083015290f35b0390f35b827f92d01c0c000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b3461041c5760c060031936011261041c57610510612973565b610518612989565b906105216129ea565b9161052a6129b5565b91610533612a85565b60a435936fffffffffffffffffffffffffffffffff8516850361041c5760209561056f9461056894610563613243565b6137df565b91826134be565b604051908152f35b3461041c575f60031936011261041c5760206001600160a01b035f5416604051908152f35b3461041c57604060031936011261041c576004356105b86129cb565b6105c0613243565b815f52600c60205260ff600160405f20015460c81c16156106a757815f52600c60205260ff600160405f20015460d81c1661067b57815f52600c6020526001600160a01b03600160405f20015416330361064b57816106426020927ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce794613435565b604051908152a1005b507f1df35ae4000000000000000000000000000000000000000000000000000000005f526004523360245260445ffd5b507f96cb8556000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b507f92d01c0c000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c1615610725575f52600c602052602064ffffffffff600160405f20015460a01c16604051908152f35b7f92d01c0c000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b3461041c57604060031936011261041c5760043561076c612989565b610774613243565b815f52600c60205260ff600160405f20015460c81c16156106a757907ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce76104976020936107c08461379b565b9084614106565b3461041c57604060031936011261041c576107e0612973565b6001600160a01b036107f0612989565b91165f5260066020526001600160a01b0360405f2091165f52602052602060ff60405f2054166040519015158152f35b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c1615610725575f52600c60205260206001600160a01b03600260405f20015416604051908152f35b3461041c57602060031936011261041c57602061088f600435612e41565b6fffffffffffffffffffffffffffffffff60405191168152f35b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c161561072557805f52600c60205260405f205460801c156108f85761056f6020916130bc565b7f5158888e000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b3461041c57602060031936011261041c57600435610940816131b5565b505f6001600160a01b0360095416916044604051809481937fe9dc637500000000000000000000000000000000000000000000000000000000835230600484015260248301525afa8015610a2a575f906109ad575b6104c790604051918291602083526020830190612930565b503d805f833e6109bd8183612ab1565b81019060208183031261041c5780519067ffffffffffffffff821161041c57019080601f8301121561041c578151916109f583612af2565b91610a036040519384612ab1565b8383526020848301011161041c576104c792610a25916020808501910161290f565b610995565b6040513d5f823e3d90fd5b3461041c5760c060031936011261041c57600435610a516129cb565b610a5961299f565b610a616129b5565b60407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7c36011261041c57610a93613243565b835f52600c60205260ff600160405f20015460c81c1615610c5e57835f52600c60205260ff600160405f20015460d81c16610c3257610ad29184613ffb565b604051916040830183811067ffffffffffffffff821117610c05576040526084356001600160a01b038116810361041c57835260a435602084019080825267016345785d8a00008111610bce57506001600160a01b0384511615610ba6577ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce793610b6f610b66602095610642945190614700565b859291926134be565b835f52600c85526fffffffffffffffffffffffffffffffff6001600160a01b0380600260405f20015416935116911691339061454a565b7f06136175000000000000000000000000000000000000000000000000000000005f5260045ffd5b7f40964ebd000000000000000000000000000000000000000000000000000000005f5260045267016345785d8a000060245260445ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b837f96cb8556000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b837f92d01c0c000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c1615610725575f52600c602052602060405f205460801c15604051908152f35b3461041c57604060031936011261041c57600435610cef6129cb565b610cf7613243565b815f52600c60205260ff600160405f20015460c81c16156106a757815f52600c60205260405f205460801c15610d7d57815f52600c6020526001600160a01b03600160405f20015416330361064b5781610d746020927ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7946134be565b6106428161329d565b507f5158888e000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c16156107255761056f602091613fc1565b3461041c575f60031936011261041c57602060405167016345785d8a00008152f35b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c1615610725575f52600c60205260206001600160a01b03600160405f20015416604051908152f35b3461041c57602060031936011261041c576004355f52600c602052602060ff600160405f20015460c81c166040519015158152f35b3461041c57608060031936011261041c57610ea4612973565b610eac612989565b6064359167ffffffffffffffff831161041c573660238401121561041c57826004013591610ed983612af2565b92610ee76040519485612ab1565b808452366024828701011161041c576020815f926024610f139801838801378501015260443591612ed0565b005b3461041c57602060031936011261041c576001600160a01b03610f36612973565b165f52600a602052602060405f2054604051908152f35b3461041c57608060031936011261041c57600435610f696129cb565b610f7161299f565b610f796129b5565b90610f82613243565b835f52600c60205260ff600160405f20015460c81c1615610c5e57835f52600c60205260ff600160405f20015460d81c16610c3257602092610fea8593610642937ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce797613ffb565b826134be565b3461041c57604060031936011261041c57611009612973565b602435906001600160a01b035f54163381036103ed575067016345785d8a000082116110f4576001600160a01b031690815f52600a60205260405f205490825f52600a6020528060405f205560405191825260208201527f371789a3d97098f3070492613273a065a7e8a19e009fd1ae92a4b4d4c71ed62d60403392a36008545f1981019081116110c75760407f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c91815190600182526020820152a1005b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b507f5ef18d1b000000000000000000000000000000000000000000000000000000005f5260045267016345785d8a000060245260445ffd5b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c1615610725575f52600c602052602060ff600160405f20015460d01c166040519015158152f35b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c1615610725576111b490612e75565b60405160058210156111c7576020918152f35b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b3461041c57604060031936011261041c576004356112106129cb565b611218613243565b815f52600c60205260ff600160405f20015460c81c16156106a757815f52600c60205260405f205460801c15610d7d57815f52600c6020526001600160a01b03600160405f20015416330361064b5781807ffddf01d0842635e80929251f6862b3baf136a29f2b2fb148968e8b236d5785fe60606020947ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7965f52600c86526fffffffffffffffffffffffffffffffff60405f205460801c916112db8187613e90565b6112e486613201565b9260405193845288840152166040820152a2604051908152a1005b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c1615610725575f52600c602052602060ff600260405f20015460a01c16604051908152f35b3461041c57604060031936011261041c57611366612973565b6024359081151580920361041c576001600160a01b03169081156113f357335f52600660205260405f20825f5260205260405f207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b507f5b08ba18000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b3461041c575f60031936011261041c576040515f6002548060011c90600181168015611554575b602083108114611527578285529081156114e55750600114611487575b6104c78361147381850382612ab1565b604051918291602083526020830190612930565b91905060025f527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace915f905b8082106114cb57509091508101602001611473611463565b9192600181602092548385880101520191019092916114b3565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660208086019190915291151560051b840190910191506114739050611463565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f1691611446565b3461041c57602060031936011261041c576004355f61012060405161158281612a94565b8281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e0820152826101008201520152805f52600c60205260ff600160405f20015460c81c1615610725575f52600c60205260405f206040516115ea81612a94565b81546fffffffffffffffffffffffffffffffff811692838352602083019160801c82526001810154604084016001600160a01b0382168152606085018260a01c64ffffffffff16815260808601908360c81c60ff161515825260a08701928460d01c60ff161515845260c088019460d81c60ff161515855260028601549660e08901966001600160a01b03891688526101008a019860a01c60ff168952600301549861012001988952604051998a52516fffffffffffffffffffffffffffffffff1660208a0152516001600160a01b031660408901525164ffffffffff166060880152511515608087015251151560a086015251151560c0850152516001600160a01b031660e08401525160ff166101008301525161012082015261014090f35b3461041c57604060031936011261041c576004356117276129cb565b61172f613243565b815f52600c60205260ff600160405f20015460c81c16156106a757815f52600c6020526001600160a01b03600160405f20015416330361064b57816106426020927ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7946135c6565b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c1615610725575f52600c602052602060405f205460801c604051908152f35b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c16156107255761056f602091613e40565b3461041c57602060031936011261041c576004356001600160a01b03811680910361041c576001600160a01b035f54163381036103ed575060095490807fffffffffffffffffffffffff00000000000000000000000000000000000000008316176009556001600160a01b036040519216825260208201527fa2548bd4b805e907c1558a47b5858324fe8bb4a2e1ddfca647eecbf65610eebc60403392a26008545f1981019081116110c75760407f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c91815190600182526020820152a1005b3461041c57602060031936011261041c576001600160a01b03611919612973565b165f52600d60205260405f2060405190818260208354928381520180935f5260205f20925f5b818110611a2257505061195492500383612ab1565b81511561199e5790604051918291602083019060208452518091526040830191905f5b818110611985575050500390f35b8251845285945060209384019390920191600101611977565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f53747265616d20646f6573206e6f7420657869737420666f722074686973207360448201527f656e6465720000000000000000000000000000000000000000000000000000006064820152fd5b845483526001948501948794506020909301920161193f565b3461041c57602060031936011261041c57611a54612973565b5f546001600160a01b0381163381036103ed57506001600160a01b037fffffffffffffffffffffffff0000000000000000000000000000000000000000921691829116175f55337fbdd36143ee09de60bdefca70680e0f71189b2ed7acee364b53917ad433fdaf805f80a3005b3461041c57602060031936011261041c576001600160a01b03611ae2612973565b168015611aff575f526004602052602060405f2054604051908152f35b7f89c62b64000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c1615610725575f52600360205260206001600160a01b0360405f205416604051908152f35b3461041c57604060031936011261041c57611b92612973565b611b9a612989565b6001600160a01b035f54163381036103ed57506001600160a01b038216916040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152602081602481875afa8015610a2a575f90611c9e575b611c129150845f52600760205260405f205490612e68565b908115611c725781611c497f21252411d5a999da4bc6a490f7143b61ba690edceb4577a2800eab8dfbb1e92c9385611c6d94613de4565b604051918291339583602090939291936001600160a01b0360408201951681520152565b0390a3005b837fba8272c1000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b506020813d602011611cca575b81611cb860209383612ab1565b8101031261041c57611c129051611bfa565b3d9150611cab565b3461041c57602060031936011261041c576020611cf06004356131b5565b6001600160a01b0360405191168152f35b3461041c57602060031936011261041c576001600160a01b03611d22612973565b165f526007602052602060405f2054604051908152f35b3461041c57602060031936011261041c57600435611d55613243565b805f52600c60205260ff600160405f20015460c81c161561072557805f52600c60205260ff600160405f20015460d81c16611fe157805f52600c6020526001600160a01b03600160405f2001541633141580611fd1575b611fa257602081611ddd7ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce793613fc1565b80611f5257611deb82613e40565b80611f31575b505b5f828152600c84526040902060010180547fffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffff164260a01b78ffffffffff000000000000000000000000000000000000000016179055815f52600c835260405f206fffffffffffffffffffffffffffffffff8154169055815f52600c8352600160405f20017b010000000000000000000000000000000000000000000000000000007fffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffff825416179055815f52600c83526001600160a01b03600160405f20015416825f5260038452827fa8e3d71a6c0c719305004b430f6d17f12536f7b803db23a4d7016f5b52699a8c60606001600160a01b0360405f20541694611f1684613201565b9060405191338352898301526040820152a4604051908152a1005b825f52600c8452611f4a600360405f2001918254613078565b905584611df1565b815f52600c8352611f8e6fffffffffffffffffffffffffffffffff60405f205416835f52600c855260ff600260405f20015460a01c16906140ed565b825f52600c8452600360405f200155611df3565b7f1df35ae4000000000000000000000000000000000000000000000000000000005f526004523360245260445ffd5b50611fdb81614600565b15611dac565b7f96cb8556000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b3461041c5760a060031936011261041c57602061056f61202a612973565b612032612989565b61203a6129ea565b6120426129b5565b9161204b612a85565b93610563613243565b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c1615610725575f52600c602052602060ff600160405f20015460d81c166040519015158152f35b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c1615610725575f52600c6020526020600360405f200154604051908152f35b3461041c575f60031936011261041c5760206001600160a01b0360095416604051908152f35b3461041c57610f1361212336612a09565b9060405192612133602085612ab1565b5f8452612ed0565b3461041c57604060031936011261041c576004356121576129cb565b61215f613243565b815f52600c60205260ff600160405f20015460c81c16156106a757815f52600c60205260405f205460801c15610d7d57815f52600c6020526001600160a01b03600160405f20015416330361064b5781610d746020927ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7946135c6565b3461041c57604060031936011261041c576121f5612973565b6001600160a01b0360243591165f52600d60205260405f20805482101561041c5760209161222291612a43565b90549060031b1c604051908152f35b3461041c57610f1361224236612a09565b91612b7d565b3461041c57606060031936011261041c576004356122646129cb565b61226c6129ea565b90612275613243565b825f52600c60205260ff600160405f20015460c81c16156104cb57825f52600c60205260ff600160405f20015460d81c1661232b57825f52600c6020526001600160a01b03600160405f2001541633036122fb5791610642602092610fea7ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79584613435565b827f1df35ae4000000000000000000000000000000000000000000000000000000005f526004523360245260445ffd5b827f96cb8556000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b3461041c575f60031936011261041c576020600854604051908152f35b3461041c57602060031936011261041c5760043567ffffffffffffffff811161041c573660238201121561041c57806004013567ffffffffffffffff811161041c573660248260051b8401011161041c57905f907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbd81360301915b83811015610f135760248160051b830101358381121561041c57820160248101359067ffffffffffffffff821161041c57604401813603811361041c57815f92918392604051928392833781018381520390305af461244c612b4e565b901561245b57506001016123ef565b612499906040519182917fd9354485000000000000000000000000000000000000000000000000000000008352602060048401526024830190612930565b0390fd5b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c1615610725575f52600c60205260206fffffffffffffffffffffffffffffffff60405f205416604051908152f35b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c16156107255761088f602091613403565b3461041c57602060031936011261041c5760043561254a613243565b805f52600c60205260ff600160405f20015460c81c161561072557805f52600c60205260405f205460801c156108f857805f52600c6020526001600160a01b03600160405f200154163303611fa2576020816106427ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79361329d565b3461041c57602060031936011261041c576001600160a01b036125e7612973565b165f52600b60205260206fffffffffffffffffffffffffffffffff60405f205416604051908152f35b3461041c57604060031936011261041c57612629612973565b602435612635816131b5565b3315158061271a575b806126e7575b6126bb5781906001600160a01b0380851691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9255f80a45f5260056020526001600160a01b0360405f2091167fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790555f80f35b7fa9fbf51f000000000000000000000000000000000000000000000000000000005f523360045260245ffd5b506001600160a01b0381165f52600660205260405f206001600160a01b0333165f5260205260ff60405f20541615612644565b50336001600160a01b038216141561263e565b3461041c57602060031936011261041c57600435805f52600c60205260ff600160405f20015460c81c16156107255761056f602091613201565b3461041c57602060031936011261041c576020611cf0600435612b2c565b3461041c575f60031936011261041c576040515f6001548060011c90600181168015612836575b602083108114611527578285529081156114e557506001146127d8576104c78361147381850382612ab1565b91905060015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6915f905b80821061281c57509091508101602001611473611463565b919260018160209254838588010152019101909291612804565b91607f16916127ac565b3461041c57602060031936011261041c57600435907fffffffff00000000000000000000000000000000000000000000000000000000821680920361041c57817f80ac58cd00000000000000000000000000000000000000000000000000000000602093149081156128e5575b81156128bb575b5015158152f35b7f01ffc9a700000000000000000000000000000000000000000000000000000000915014836128b4565b7f5b5e139f00000000000000000000000000000000000000000000000000000000811491506128ad565b5f5b8381106129205750505f910152565b8181015183820152602001612911565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209361296c8151809281875287808801910161290f565b0116010190565b600435906001600160a01b038216820361041c57565b602435906001600160a01b038216820361041c57565b604435906001600160a01b038216820361041c57565b606435906001600160a01b038216820361041c57565b602435906fffffffffffffffffffffffffffffffff8216820361041c57565b604435906fffffffffffffffffffffffffffffffff8216820361041c57565b600319606091011261041c576004356001600160a01b038116810361041c57906024356001600160a01b038116810361041c579060443590565b8054821015612a58575f5260205f2001905f90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b60843590811515820361041c57565b610140810190811067ffffffffffffffff821117610c0557604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610c0557604052565b67ffffffffffffffff8111610c0557601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b612b35816131b5565b505f5260056020526001600160a01b0360405f20541690565b3d15612b78573d90612b5f82612af2565b91612b6d6040519384612ab1565b82523d5f602084013e565b606090565b91906001600160a01b0316918215612e1557815f5260036020526001600160a01b0360405f205416151580612df8575b612dcc57815f5260036020526001600160a01b0360405f2054169233151580612d04575b50907ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce760206001600160a01b039386612cb6575b805f526004825260405f2060018154019055855f526003825260405f20817fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790558560405191887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a4858152a116808303612c8557505050565b7f64283d7b000000000000000000000000000000000000000000000000000000005f5260045260245260445260645ffd5b612ced865f52600560205260405f207fffffffffffffffffffffffff00000000000000000000000000000000000000008154169055565b865f526004825260405f205f198154019055612c05565b80612d75575b15612d15575f612bd1565b8284612d46577f7e273289000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7f177e802f000000000000000000000000000000000000000000000000000000005f523360045260245260445ffd5b503384148015612da3575b80612d0a5750825f526005602052336001600160a01b0360405f20541614612d0a565b50835f52600660205260405f206001600160a01b0333165f5260205260ff60405f205416612d80565b507f123f349c000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b50815f52600c60205260ff600160405f20015460d01c1615612bad565b7f64a0ae92000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b805f52600c60205260ff600160405f20015460c81c161561072557612e659061379b565b90565b919082039182116110c757565b805f52600c60205260ff600160405f20015460d81c16612eca57612e9881613fc1565b1515905f52600c60205260405f205460801c15612ebc57612eb7575f90565b600190565b612ec557600290565b600390565b50600490565b90612edc838284612b7d565b803b612ee9575b50505050565b602091612f486001600160a01b038093169560405195869485947f150b7a020000000000000000000000000000000000000000000000000000000086523360048701521660248501526044840152608060648401526084830190612930565b03815f865af15f918161301b575b50612f9d5750612f64612b4e565b80519081612f9857827f64a0ae92000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b602001fd5b7fffffffff000000000000000000000000000000000000000000000000000000007f150b7a0200000000000000000000000000000000000000000000000000000000911603612ff057505f808080612ee3565b7f64a0ae92000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b9091506020813d602011613070575b8161303760209383612ab1565b8101031261041c57517fffffffff000000000000000000000000000000000000000000000000000000008116810361041c57905f612f56565b3d915061302a565b919082018092116110c757565b811561308f570490565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b805f52600c6020526fffffffffffffffffffffffffffffffff60405f2054169081156131af57805f52600c60205261310260ff600260405f20015460a01c1680936140ed565b91815f52600c60205261311c600360405f200154916140d0565b9061312f61312984613e40565b82613078565b6131398386613078565b11156131a757825f52600c60205260405f205460801c9303019161315d8184613085565b92811561308f5706613186575f52600c60205264ffffffffff600160405f20015460a01c160190565b906001915f52600c60205264ffffffffff8260405f20015460a01c16010190565b505050505f90565b50505f90565b805f5260036020526001600160a01b0360405f2054169081156131d6575090565b7f7e273289000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b612e659061322761321182613e40565b825f52600c602052600360405f20015490613078565b905f52600c60205260ff600260405f20015460a01c169061452a565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361327557565b7fa1c0d6e5000000000000000000000000000000000000000000000000000000005f5260045ffd5b805f52600c60205260405f205460801c156133a2576132bb81613e40565b80613380575b505f818152600c6020908152604080832060018101805478ffffffffff00000000000000000000000000000000000000004260a01b167fffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffff82161790915581546fffffffffffffffffffffffffffffffff16909155600383529220546001600160a01b0390811693921691907fda83bf669c651406e02062769e01d14cccb5625ea685fd95e0e56d29597dac479061337783613201565b604051908152a4565b815f52600c60205261339a600360405f2001918254613078565b90555f6132c1565b7f72ee449a000000000000000000000000000000000000000000000000000000005f526004525f60245260445ffd5b906fffffffffffffffffffffffffffffffff809116911603906fffffffffffffffffffffffffffffffff82116110c757565b612e6590805f52600c60205261342f6fffffffffffffffffffffffffffffffff60405f2054169161379b565b906133d1565b805f52600c60205260405f205460801c613493576134538282613e90565b6fffffffffffffffffffffffffffffffff604051921682527fc2a543cfadbf862642247e28711aaa30e3460384be5712be6557fee3384454fd60203393a3565b7ffe535094000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b906fffffffffffffffffffffffffffffffff1690811561359b575f818152600c60205260409020600281015481546fffffffffffffffffffffffffffffffff9081168501916001600160a01b03169082116110c75761356d926fffffffffffffffffffffffffffffffff8693167fffffffffffffffffffffffffffffffff00000000000000000000000000000000825416179055805f52600760205260405f208281540190553090339061454a565b6040519182527fa06c1466b3c9751408a5ac337a2e8808e5ee0ceed1fd70635d041b21174eb6b460203393a3565b7fe01053fe000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b6fffffffffffffffffffffffffffffffff8216801561376f576fffffffffffffffffffffffffffffffff6135f983613403565b1680821161373d57825f52600c6020526fffffffffffffffffffffffffffffffff60405f205416106136eb5760207fe31f2d40d5780915b1e656a67e11bdf09b0a4a925ec42bbeae220c8ca937ab4991835f52600c82526136e2816001600160a01b03600160405f200154168097875f52600c86526001600160a01b03600260405f2001541690885f52600c87526fffffffffffffffffffffffffffffffff8060405f2092818454160316167fffffffffffffffffffffffffffffffff00000000000000000000000000000000825416179055805f526007865260405f20838154039055613de4565b604051908152a3565b90805f52600c6020526fffffffffffffffffffffffffffffffff60405f205416907f38dcd410000000000000000000000000000000000000000000000000000000005f5260045260245260445260645ffd5b917fd8ffee82000000000000000000000000000000000000000000000000000000005f5260045260245260445260645ffd5b507f0ad01274000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b805f52600c6020526fffffffffffffffffffffffffffffffff60405f2054169081156131af576137ca90613201565b8082106137db57612e6591506145a4565b5090565b6001600160a01b039095949293919516908115613dbc576001600160a01b0316926040517f313ce567000000000000000000000000000000000000000000000000000000008152602081600481885afa8015610a2a575f90613d7f575b60ff9150169560128711613d53576008549687866040519261385d84612a94565b5f845260208401956fffffffffffffffffffffffffffffffff1695868152604085019088825260608601994264ffffffffff168b52608087016001815260a088019115159b8c835260c08901935f855260e08a019788526101008a019687526101208a01985f8a525f52600c60205260405f2099516fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff168a547fffffffffffffffffffffffffffffffff0000000000000000000000000000000016178a55516fffffffffffffffffffffffffffffffff16613976908a906fffffffffffffffffffffffffffffffff7fffffffffffffffffffffffffffffffff0000000000000000000000000000000083549260801b169116179055565b9351600189018054955178ffffffffff000000000000000000000000000000000000000060a09190911b166001600160a01b039092167fffffffffffffff00000000000000000000000000000000000000000000000000909616959095171784555115159083549051151560d01b7aff0000000000000000000000000000000000000000000000000000169160c81b79ff0000000000000000000000000000000000000000000000000016907fffffffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffff161717825551151581549060d81b7bff00000000000000000000000000000000000000000000000000000016907fffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffff161790556002840191516001600160a01b03166001600160a01b031682547fffffffffffffffffffffffff0000000000000000000000000000000000000000161782555181549060a01b74ff000000000000000000000000000000000000000016907fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16179055519060030155825f52600d60205260405f209081549168010000000000000000831015610c055782613b579160016001600160a01b0395018155612a43565b81549060031b905f198b831b921b19161790556001880160085516928315612e1557865f5260036020526001600160a01b0360405f205416151580613d36575b613d0a57865f5260036020526001600160a01b0360405f2054167ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce760208215159283613cbc575b875f526004825260405f20600181540190558a5f526003825260405f20887fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055604051908b89827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a4508a8152a1613c90577f2262fa211f8507786a60fefb231f7898b8145fe16350f281c91f121bd2ee118d916060916040519189835260208301526040820152a4565b7f73c6ac6e000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b613cf38b5f52600560205260405f207fffffffffffffffffffffffff00000000000000000000000000000000000000008154169055565b805f526004825260405f205f198154019055613bde565b867f123f349c000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b50865f52600c60205260ff600160405f20015460d01c1615613b97565b847fa05b0f3a000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b506020813d602011613db4575b81613d9960209383612ab1565b8101031261041c575160ff8116810361041c5760ff9061383c565b3d9150613d8c565b7ff54bb717000000000000000000000000000000000000000000000000000000005f5260045ffd5b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000060208201526001600160a01b03929092166024830152604480830193909352918152613e3e91613e39606483612ab1565b614672565b565b5f908152600c602052604090206001810154905460801c9060a01c64ffffffffff1681158015613e86575b6131af57804203918083029283041490421417156110c75790565b5080421115613e6b565b91906fffffffffffffffffffffffffffffffff811692805f52600c60205260405f205460801c8414613f9157613e3e929350613ecb81613e40565b80613f6f575b505f908152600c6020526040902060018101805478ffffffffff00000000000000000000000000000000000000004260a01b167fffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffff90911617905580546fffffffffffffffffffffffffffffffff1660809290921b7fffffffffffffffffffffffffffffffff0000000000000000000000000000000016919091179055565b815f52600c602052613f89600360405f2001918254613078565b90555f613ed1565b83907f72ee449a000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b805f52600c602052613fe96fffffffffffffffffffffffffffffffff60405f20541691613201565b90818110156131af57612e6591612e68565b90815f52600c6020526001600160a01b0380600160405f2001541691169081036140885750805f5260036020526001600160a01b038060405f2054169216918203614044575050565b5f5260036020526001600160a01b0360405f205416907f09b10ee1000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b905f52600c6020526001600160a01b03600160405f20015416907fed7f943d000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b601260ff8216146140e75760120360ff16600a0a90565b50600190565b90601260ff8216146137db5760120360ff16600a0a0290565b5f9392916fffffffffffffffffffffffffffffffff83169182156144ff576001600160a01b0382169182156144d357815f5260036020526001600160a01b0360405f205416831415806144c3575b61449057815f52600c60205260ff600260405f20015460a01c169361419161417b84613e40565b845f52600c602052600360405f20015490613078565b61419b868261452a565b95845f52600c6020526fffffffffffffffffffffffffffffffff60405f205416928784105f14614471576fffffffffffffffffffffffffffffffff845b1680821161443e5750906141eb916140ed565b90845f52600c602052600360405f2001548211155f146143db5750835f52600c602052600360405f20019081540390555b5f838152600c6020908152604080832080546fffffffffffffffffffffffffffffffff8082168c9003167fffffffffffffffffffffffffffffffff00000000000000000000000000000000909116178155600201546001600160a01b0316808452600a909252909120549095908061436d575b506142ed6142d76fffffffffffffffffffffffffffffffff926142c8848b1680978b5f52600760205260405f208281540390558b613de4565b6142d187613201565b90612e68565b92855f52600c6020528260405f205416906133d1565b16036143405760607f1a7b0d6c8f96b874563b711cf97793fe3be5dc42dbd1e0720ce40f326918e817916040519033825260208201526fffffffffffffffffffffffffffffffff89166040820152a49190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52600160045260245ffd5b6142d799506143916142ed916fffffffffffffffffffffffffffffffff9399614700565b9a909a988b895f52600b602052848060405f2092818454160116167fffffffffffffffffffffffffffffffff0000000000000000000000000000000082541617905592505061428f565b5f858152600c60205260409020919003600382015560010180547fffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffff164260a01b78ffffffffff00000000000000000000000000000000000000001617905561421c565b90867f15d272a1000000000000000000000000000000000000000000000000000000005f5260045260245260445260645ffd5b6fffffffffffffffffffffffffffffffff61448b896145a4565b6141d8565b507fe5959101000000000000000000000000000000000000000000000000000000005f526004523360245260445260645ffd5b506144cd82614600565b15614154565b507fcf1fa0b8000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7fe925abc7000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b90601260ff8216146137db579060ff612e659260120316600a0a90613085565b9091926001600160a01b03613e3e9481604051957f23b872dd000000000000000000000000000000000000000000000000000000006020880152166024860152166044840152606483015260648252613e39608483612ab1565b6fffffffffffffffffffffffffffffffff81116145d0576fffffffffffffffffffffffffffffffff1690565b7f6dfcc650000000000000000000000000000000000000000000000000000000005f52608060045260245260445ffd5b805f5260036020526001600160a01b0360405f20541690813314918215614646575b50811561462d575090565b90506001600160a01b036146413392612b2c565b161490565b9091505f52600660205260405f206001600160a01b0333165f5260205260ff60405f205416905f614622565b5f806001600160a01b0361469b93169360208151910182865af1614694612b4e565b908361482b565b80519081151591826146dc575b50506146b15750565b7f5274afe7000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b819250906020918101031261041c576020015180159081150361041c575f806146a8565b919061471e906fffffffffffffffffffffffffffffffff841661477d565b6fffffffffffffffffffffffffffffffff8111614752576fffffffffffffffffffffffffffffffff612e65911680936133d1565b7f4916adce000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b9190915f198382098382029182808310920391808303921461481a57670de0b6b3a76400008210156147ea577faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac106699394670de0b6b3a7640000910990828211900360ee1b910360121c170290565b84907f5173648d000000000000000000000000000000000000000000000000000000005f5260045260245260445ffd5b5050670de0b6b3a764000090049150565b90614868575080511561484057805190602001fd5b7f1425ea42000000000000000000000000000000000000000000000000000000005f5260045ffd5b815115806148ae575b614879575090565b6001600160a01b03907f9996b315000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b50803b1561487156fea164736f6c634300081a000a",
    "sourceMap": "1134:30501:75:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1134:30501:75;;;908:10:77;899:19;;895:116;;1134:30501:75;-1:-1:-1;;;;;1134:30501:75;;;;;;8303:15:79;1134:30501:75;;;;;;;;8396:12:79;;;8392:105;;1134:30501:75;;8802:46:79;1134:30501:75;;;;8303:15:79;1134:30501:75;;;;;;;;;;;;;;8668:16:79;1134:30501:75;;;;;;;;;;;8802:46:79;:::i;:::-;-1:-1:-1;;;;;1134:30501:75;;;;;;;;;;8864:101:79;1134:30501:75;908:10:77;8864:101:79;;1134:30501:75;8392:105:79;8431:55;;1134:30501:75;8431:55:79;1134:30501:75;;;;8431:55:79;895:116:77;941:59;1134:30501:75;941:59:77;1134:30501:75;;908:10:77;1134:30501:75;;;;941:59:77;1134:30501:75;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;:::i;:::-;;;:::i;:::-;519:76:80;;;:::i;:::-;1134:30501:75;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;13687:31:75;;;4150:38:79;13687:31:75;1134:30501;13687:31;;:::i;:::-;1134:30501;;;;;;;;4150:38:79;1134:30501:75;;;;;;;;;;;;;;;;;;;;;;;3180:98:79;3235:32;;1134:30501:75;3235:32:79;1134:30501:75;;;;3235:32:79;1134:30501:75;;;;;-1:-1:-1;;1134:30501:75;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;519:76:80;9029:6:75;519:76:80;8872:62:75;519:76:80;;;:::i;:::-;8872:62:75;:::i;:::-;9029:6;;;:::i;:::-;1134:30501;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;-1:-1:-1;;;;;1134:30501:75;;;;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;:::i;:::-;519:76:80;;:::i;:::-;1134:30501:75;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;1134:30501:75;;;3185:8:79;1134:30501:75;;;;;;;3618:27:79;1134:30501:75;;;;3614:105:79;;1134:30501:75;;;3185:8:79;1134:30501:75;;-1:-1:-1;;;;;1134:30501:75;;;;3869:25:79;1134:30501:75;;3855:10:79;:39;3851:129;;12369:13:75;;1134:30501;12369:13;4150:38:79;12369:13:75;;:::i;:::-;1134:30501;;;;;4150:38:79;1134:30501:75;3851:129:79;3917:52;;1134:30501:75;3917:52:79;1134:30501:75;;3855:10:79;1134:30501:75;;;;3917:52:79;3614:105;3668:40;;1134:30501:75;3668:40:79;1134:30501:75;;;;3668:40:79;3180:98;3235:32;;1134:30501:75;3235:32:79;1134:30501:75;;;;3235:32:79;1134:30501:75;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;1134:30501:75;;3185:8:79;1134:30501:75;;;;;;;;6067:31:79;1134:30501:75;;;;;;;;;;3180:98:79;3235:32;1134:30501:75;3235:32:79;1134:30501:75;;;;3235:32:79;1134:30501:75;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;:::i;:::-;519:76:80;;:::i;:::-;1134:30501:75;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;14057:24:75;4150:38:79;14198:36:75;1134:30501;14057:24;;;;:::i;:::-;14198:36;;;:::i;1134:30501::-;;;;;-1:-1:-1;;1134:30501:75;;;;;;;:::i;:::-;-1:-1:-1;;;;;1134:30501:75;;:::i;:::-;;;;;4039:18:8;1134:30501:75;;-1:-1:-1;;;;;1134:30501:75;;;4039:35:8;1134:30501:75;-1:-1:-1;1134:30501:75;;;;;;-1:-1:-1;1134:30501:75;;;;;;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;1134:30501:75;;3185:8:79;1134:30501:75;;;-1:-1:-1;;;;;6465:24:79;1134:30501:75;;;6465:24:79;1134:30501:75;;;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;6934:26;1134:30501;;6934:26;:::i;:::-;1134:30501;;;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;1134:30501:75;;;3185:8:79;1134:30501:75;;;;;;;;3424:46:79;3420:124;;2472:2189:75;1134:30501;2472:2189;;:::i;3420:124:79:-;3493:40;1134:30501:75;3493:40:79;1134:30501:75;;;;3493:40:79;1134:30501:75;;;;;-1:-1:-1;;1134:30501:75;;;;;;;7745:36:79;;;:::i;:::-;;1134:30501:75;-1:-1:-1;;;;;7853:13:79;1134:30501:75;;;7853:64:79;1134:30501:75;;7853:64:79;;;;1134:30501:75;7853:64:79;;7890:4;1134:30501:75;7853:64:79;;1134:30501:75;;;;;7853:64:79;;;;;;1134:30501:75;7853:64:79;;;1134:30501:75;;;;;;;;;;;;;;;;:::i;7853:64:79:-;;;;1134:30501:75;7853:64:79;;;;;;:::i;:::-;;;1134:30501:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7853:64:79;;;1134:30501:75;;;;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;519:76:80;;:::i;:::-;1134:30501:75;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;1134:30501:75;;;3185:8:79;1134:30501:75;;;;;;;3618:27:79;1134:30501:75;;;;3614:105:79;;10623:9:75;;;;:::i;:::-;1134:30501;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1134:30501:75;;;;;;;;;;;;;;;;;1394:6:79;1033:23:50;;1332:113:86;;1134:30501:75;-1:-1:-1;;;;;1134:30501:75;;;1523:28:86;1519:103;;4150:38:79;1134:30501:75;22317:13;1767:48:86;1134:30501:75;;22396:107;1134:30501;;1767:48:86;;:::i;:::-;22317:13:75;;;;;:::i;:::-;1134:30501;;;3185:8:79;1134:30501:75;;;-1:-1:-1;;;;;1134:30501:75;22396:24;1134:30501;;;22396:24;1134:30501;;;;;;;22446:10;;22396:107;;:::i;1519:103:86:-;1574:37;1134:30501:75;1574:37:86;1134:30501:75;;1574:37:86;1332:113;1380:54;1134:30501:75;1380:54:86;1134:30501:75;;1394:6:79;1134:30501:75;;;;1380:54:86;1134:30501:75;;;;;;;;;;3614:105:79;3668:40;;1134:30501:75;3668:40:79;1134:30501:75;;;;3668:40:79;3180:98;3235:32;;1134:30501:75;3235:32:79;1134:30501:75;;;;3235:32:79;1134:30501:75;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;1134:30501:75;;3185:8:79;1134:30501:75;;;;;;;;;6922:46:79;1134:30501:75;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;:::i;:::-;519:76:80;;:::i;:::-;1134:30501:75;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;1134:30501:75;;;3185:8:79;1134:30501:75;;;;;;;;3424:46:79;3420:124;;1134:30501:75;;;3185:8:79;1134:30501:75;;-1:-1:-1;;;;;1134:30501:75;;;;3869:25:79;1134:30501:75;;3855:10:79;:39;3851:129;;10012:6:75;;1134:30501;10012:6;4150:38:79;10012:6:75;;:::i;:::-;10101:8;;;:::i;3420:124:79:-;3493:40;;1134:30501:75;3493:40:79;1134:30501:75;;;;3493:40:79;1134:30501:75;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;6725:26:75;1134:30501;6725:26;;:::i;1134:30501::-;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;1394:6:79;1134:30501:75;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;1134:30501:75;;3185:8:79;1134:30501:75;;;-1:-1:-1;;;;;1134:30501:75;;;;5566:25:79;1134:30501:75;;;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;7117:8:79;1134:30501:75;;;;;;;;7117:27:79;1134:30501:75;;;;;;;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;1134:30501:75;;;;;-1:-1:-1;;;;;1134:30501:75;;:::i;:::-;;;;1729:64:79;1134:30501:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;519:76:80;;;:::i;:::-;1134:30501:75;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;1134:30501:75;;;3185:8:79;1134:30501:75;;;;;;;3618:27:79;1134:30501:75;;;;3614:105:79;;1134:30501:75;9503:9;;;;9608:6;9503:9;4150:38:79;9503:9:75;;:::i;:::-;9608:6;;:::i;1134:30501::-;;;;;-1:-1:-1;;1134:30501:75;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1134:30501:75;;;908:10:77;899:19;;895:116;;1033:23:50;1394:6:79;1033:23:50;;10384:127:79;;-1:-1:-1;;;;;1134:30501:75;;;;;10546:11:79;1134:30501:75;;;;;;;;;;10546:11:79;1134:30501:75;;;;;;;;;;;;;;;;10719:187:79;1134:30501:75;908:10:77;10719:187:79;;11026:12;1134:30501:75;-1:-1:-1;;1134:30501:75;;;;;;;;10975:70:79;1134:30501:75;;;;;;;;;;;10975:70:79;1134:30501:75;;;;;;;;;;;10384:127:79;10435:65;;1134:30501:75;10435:65:79;1134:30501:75;;1394:6:79;1134:30501:75;;;;10435:65:79;1134:30501:75;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;1134:30501:75;;3185:8:79;1134:30501:75;;;;;;;;7317:33:79;1134:30501:75;;;;;;;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;5241:1063:75;;;:::i;:::-;1134:30501;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;:::i;:::-;519:76:80;;:::i;:::-;1134:30501:75;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;1134:30501:75;;;3185:8:79;1134:30501:75;;;;;;;;3424:46:79;3420:124;;1134:30501:75;;;3185:8:79;1134:30501:75;;-1:-1:-1;;;;;1134:30501:75;;;;3869:25:79;1134:30501:75;;3855:10:79;:39;3851:129;;1134:30501:75;;7801:215;1134:30501;;;4150:38:79;1134:30501:75;;;3185:8:79;1134:30501:75;;;;;;;;;7737:16;;;;;:::i;:::-;7887:22;;;:::i;:::-;1134:30501;;;;;;;;;;;;;;;7801:215;1134:30501;;;;;4150:38:79;1134:30501:75;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;1134:30501:75;;3185:8:79;1134:30501:75;;;;6723:32:79;1134:30501:75;;;6723:32:79;1134:30501:75;;;;;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1134:30501:75;15698:22:8;;;15694:91;;735:10:14;1134:30501:75;;15794:18:8;1134:30501:75;;;;;;-1:-1:-1;1134:30501:75;;;;-1:-1:-1;1134:30501:75;;;;;;;;;;;;;;;;15855:41:8;1134:30501:75;735:10:14;15855:41:8;;1134:30501:75;15694:91:8;15743:31;;1134:30501:75;15743:31:8;1134:30501:75;;;;15743:31:8;1134:30501:75;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;2597:7:8;1134:30501:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;2597:7:8;1134:30501:75;;;;;;;;;;;;-1:-1:-1;1134:30501:75;;-1:-1:-1;1134:30501:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1134:30501:75;;-1:-1:-1;1134:30501:75;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;1134:30501:75;;3185:8:79;1134:30501:75;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1134:30501:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1134:30501:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1134:30501:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1134:30501:75;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;:::i;:::-;519:76:80;;:::i;:::-;1134:30501:75;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;1134:30501:75;;;3185:8:79;1134:30501:75;;-1:-1:-1;;;;;1134:30501:75;;;;3869:25:79;1134:30501:75;;3855:10:79;:39;3851:129;;11474:6:75;;1134:30501;11474:6;4150:38:79;11474:6:75;;:::i;1134:30501::-;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;1134:30501:75;;3185:8:79;1134:30501:75;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;4897:30:75;1134:30501;4897:30;;:::i;1134:30501::-;;;;;-1:-1:-1;;1134:30501:75;;;;;;;-1:-1:-1;;;;;1134:30501:75;;;;;;;-1:-1:-1;;;;;1134:30501:75;;;908:10:77;899:19;;895:116;;1134:30501:75;9725:13:79;1134:30501:75;;;;;;;9725:13:79;1134:30501:75;-1:-1:-1;;;;;1134:30501:75;;;;;;;;;;9845:171:79;1134:30501:75;908:10:77;9845:171:79;;10136:12;1134:30501:75;-1:-1:-1;;1134:30501:75;;;;;;;;10085:70:79;1134:30501:75;;;;10121:1:79;1134:30501:75;;;;;;10085:70:79;1134:30501:75;;;;;;-1:-1:-1;;1134:30501:75;;;;;-1:-1:-1;;;;;1134:30501:75;;:::i;:::-;;;;4599:16:79;1134:30501:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;4641:20:79;1134:30501:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1134:30501:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1134:30501:75;;;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1134:30501:75;;908:10:77;899:19;;895:116;;1134:30501:75;-1:-1:-1;;;;;1134:30501:75;;;;;;;;;;908:10:77;1484:70;1134:30501:75;1484:70:77;;1134:30501:75;;;;;;-1:-1:-1;;1134:30501:75;;;;;-1:-1:-1;;;;;1134:30501:75;;:::i;:::-;;2006:19:8;;2002:87;;1134:30501:75;;;;;;;;;;;;;;;;2002:87:8;2048:30;1134:30501:75;2048:30:8;1134:30501:75;;;;;2048:30:8;1134:30501:75;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;1134:30501:75;;5799:7:8;1134:30501:75;;;-1:-1:-1;;;;;1134:30501:75;;;;;;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1134:30501:75;;;908:10:77;899:19;;895:116;;1134:30501:75;-1:-1:-1;;;;;1134:30501:75;;;;;;9113:30:79;;9137:4;1134:30501:75;9113:30:79;;1134:30501:75;;9113:30:79;1134:30501:75;9113:30:79;;;;;;;;1134:30501:75;9113:30:79;;;1134:30501:75;9113:56:79;1134:30501:75;;;;;9146:16:79;1134:30501:75;;;;;;9113:56:79;;:::i;:::-;9233:12;;;9229:99;;9431:7;;9455:39;9431:7;;9455:39;9431:7;;:::i;:::-;1134:30501:75;;908:10:77;;;;9455:39:79;;1134:30501:75;;;;;;-1:-1:-1;;;;;1134:30501:75;;;;;;;;;;9455:39:79;;;;1134:30501:75;9229:99:79;9268:49;;1134:30501:75;9268:49:79;1134:30501:75;;;;9268:49:79;9113:30;;1134:30501:75;9113:30:79;;1134:30501:75;9113:30:79;;;;;;1134:30501:75;9113:30:79;;;:::i;:::-;;;1134:30501:75;;;;9113:56:79;1134:30501:75;;9113:30:79;;;;;-1:-1:-1;9113:30:79;;1134:30501:75;;;;;-1:-1:-1;;1134:30501:75;;;;;;2274:22:8;1134:30501:75;;2274:22:8;:::i;:::-;-1:-1:-1;;;;;1134:30501:75;;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;-1:-1:-1;;;;;1134:30501:75;;:::i;:::-;;;;1444:72:79;1134:30501:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;519:76:80;;:::i;:::-;1134:30501:75;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;1134:30501:75;;;3185:8:79;1134:30501:75;;;;;;;3618:27:79;1134:30501:75;;;;3614:105:79;;1134:30501:75;;;3185:8:79;1134:30501:75;;-1:-1:-1;;;;;1134:30501:75;;;;25532:25;1134:30501;;25518:10;:39;;:88;;;1134:30501;25514:200;;1134:30501;25749:26;;4150:38:79;25749:26:75;;:::i;:::-;25859:19;;;25922:30;;;:::i;:::-;25970:21;25966:198;;25855:679;;;1134:30501;;;;3185:8:79;1134:30501:75;;;;;;26589:31;1134:30501;;;;26630:15;1134:30501;;;;;;;;;;3185:8:79;1134:30501:75;;;;;;;;;;;;;;3185:8:79;1134:30501:75;;;;;;26810:27;1134:30501;;;;;;;;;;;3185:8:79;1134:30501:75;;-1:-1:-1;;;;;1134:30501:75;;;;26966:25;1134:30501;;;;;5799:7:8;1134:30501:75;;;26885:286;1134:30501;-1:-1:-1;;;;;1134:30501:75;;;;;27094:22;;;;:::i;:::-;1134:30501;;;25518:10;;1134:30501;;;;;;;;;;26885:286;1134:30501;;;;;4150:38:79;1134:30501:75;25966:198;1134:30501;;;3185:8:79;1134:30501:75;;26091:58;:37;1134:30501;;;26091:37;1134:30501;;;26091:58;:::i;:::-;1134:30501;;25966:198;;;25855:679;1134:30501;;;3185:8:79;1134:30501:75;;26420:103;1134:30501;;;;;;;;;3185:8:79;1134:30501:75;;;26488:32;1134:30501;;;26488:32;1134:30501;;;;26420:103;;:::i;:::-;1134:30501;;;3185:8:79;1134:30501:75;;26364:37;1134:30501;;;26364:37;1134:30501;25855:679;;25514:200;25629:74;1134:30501;25629:74;1134:30501;;25518:10;1134:30501;;;;25629:74;25518:88;25562:44;;;;:::i;:::-;25561:45;25518:88;;3614:105:79;3668:40;1134:30501:75;3668:40:79;1134:30501:75;;;;3668:40:79;1134:30501:75;;;;;-1:-1:-1;;1134:30501:75;;;;;;8396:62;1134:30501;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;519:76:80;;;:::i;1134:30501:75:-;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;1134:30501:75;;3185:8:79;1134:30501:75;;;;;;;;7517:27:79;1134:30501:75;;;;;;;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;1134:30501:75;;3185:8:79;1134:30501:75;;;5842:37:79;1134:30501:75;;;5842:37:79;1134:30501:75;;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;-1:-1:-1;;;;;1638:48:79;1134:30501:75;;;;;;;;;;;;4873:39:8;1134:30501:75;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;4873:39:8;:::i;1134:30501:75:-;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;:::i;:::-;519:76:80;;:::i;:::-;1134:30501:75;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;1134:30501:75;;;3185:8:79;1134:30501:75;;;;;;;;3424:46:79;3420:124;;1134:30501:75;;;3185:8:79;1134:30501:75;;-1:-1:-1;;;;;1134:30501:75;;;;3869:25:79;1134:30501:75;;3855:10:79;:39;3851:129;;11874:6:75;;1134:30501;11874:6;4150:38:79;11874:6:75;;:::i;1134:30501::-;;;;;-1:-1:-1;;1134:30501:75;;;;;;;:::i;:::-;-1:-1:-1;;;;;1134:30501:75;;;;;;2106:70:79;1134:30501:75;;;;;;;2106:70:79;;;;;1134:30501:75;2106:70:79;;;;:::i;:::-;1134:30501:75;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;:::i;:::-;;;:::i;:::-;519:76:80;;;:::i;:::-;1134:30501:75;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;1134:30501:75;;;3185:8:79;1134:30501:75;;;;;;;3618:27:79;1134:30501:75;;;;3614:105:79;;1134:30501:75;;;3185:8:79;1134:30501:75;;-1:-1:-1;;;;;1134:30501:75;;;;3869:25:79;1134:30501:75;;3855:10:79;:39;3851:129;;12814:13:75;12923:6;1134:30501;12814:13;;4150:38:79;12814:13:75;;;:::i;3851:129:79:-;3917:52;;1134:30501:75;3917:52:79;1134:30501:75;;3855:10:79;1134:30501:75;;;;3917:52:79;3614:105;3668:40;;1134:30501:75;3668:40:79;1134:30501:75;;;;3668:40:79;1134:30501:75;;;;;-1:-1:-1;;1134:30501:75;;;;;;1559:36:79;1134:30501:75;;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:13:78;1134:30501:75;;;;;;;789:227:78;820:3;809:9;;;;;;1134:30501:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:36:78;885:4;;877:36;;;;:::i;:::-;931:8;;927:79;;820:3;1134:30501:75;;794:13:78;;927:79;1134:30501:75;;;;966:25:78;;;;;;1134:30501:75;;966:25:78;;1134:30501:75;;;;;;:::i;:::-;966:25:78;;;1134:30501:75;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;1134:30501:75;;3185:8:79;1134:30501:75;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;5167:29:75;1134:30501;5167:29;;:::i;1134:30501::-;;;;;-1:-1:-1;;1134:30501:75;;;;;;;519:76:80;;:::i;:::-;1134:30501:75;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;1134:30501:75;;;3185:8:79;1134:30501:75;;;;;;;;3424:46:79;3420:124;;1134:30501:75;;;3185:8:79;1134:30501:75;;-1:-1:-1;;;;;1134:30501:75;;;;3869:25:79;1134:30501:75;;3855:10:79;:39;3851:129;;1134:30501:75;11108:8;;4150:38:79;11108:8:75;;:::i;1134:30501::-;;;;;-1:-1:-1;;1134:30501:75;;;;;-1:-1:-1;;;;;1134:30501:75;;:::i;:::-;;;;1836:72:79;1134:30501:75;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;:::i;:::-;;;14943:22:8;;;:::i;:::-;735:10:14;15093:18:8;;:35;;;1134:30501:75;15093:69:8;;;1134:30501:75;15089:142:8;;1134:30501:75;;-1:-1:-1;;;;;1134:30501:75;;;;;15283:28:8;1134:30501:75;15283:28:8;;1134:30501:75;;15346:15:8;1134:30501:75;;-1:-1:-1;;;;;1134:30501:75;;;;;;;;;;;;;;;15089:142:8;15189:27;1134:30501:75;15189:27:8;735:10:14;1134:30501:75;;;;15189:27:8;15093:69;1134:30501:75;-1:-1:-1;;;;;1134:30501:75;;;;4039:18:8;1134:30501:75;;;;;-1:-1:-1;;;;;735:10:14;1134:30501:75;-1:-1:-1;1134:30501:75;;;;;-1:-1:-1;1134:30501:75;;;15132:30:8;15093:69;;:35;735:10:14;;-1:-1:-1;;;;;1134:30501:75;;15115:13:8;;15093:35;;1134:30501:75;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;;3185:8:79;1134:30501:75;;;;;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;6472:22:75;1134:30501;6472:22;;:::i;1134:30501::-;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;2442:5:8;1134:30501:75;;2442:5:8;1134:30501:75;;2442:5:8;1134:30501:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;2442:5:8;1134:30501:75;;;;;;;;;;;;-1:-1:-1;1134:30501:75;;-1:-1:-1;1134:30501:75;;;;;;;;;;2442:5:8;1134:30501:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;;;;;;;;1698:40:8;1713:25;1134:30501:75;1698:40:8;;:104;;;;;1134:30501:75;1698:156:8;;;;1134:30501:75;;;;;;;1698:156:8;876:25:16;861:40;;;1698:156:8;;;:104;1769:33;1754:48;;;-1:-1:-1;1698:104:8;;1134:30501:75;;;;;;;;-1:-1:-1;;1134:30501:75;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1134:30501:75;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1134:30501:75;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1134:30501:75;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1134:30501:75;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;-1:-1:-1;;1134:30501:75;;;;;;;;-1:-1:-1;;;;;1134:30501:75;;;;;;;;;-1:-1:-1;;;;;1134:30501:75;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;1134:30501:75;;-1:-1:-1;1134:30501:75;;;-1:-1:-1;1134:30501:75;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;3497:154:8:-;3583:22;;;:::i;:::-;;-1:-1:-1;1134:30501:75;6034:15:8;1134:30501:75;;-1:-1:-1;;;;;1134:30501:75;-1:-1:-1;1134:30501:75;;;3497:154:8;:::o;1134:30501:75:-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;1134:30501:75;;;;:::o;:::-;;;:::o;4143:578:8:-;;;-1:-1:-1;;;;;1134:30501:75;4237:16:8;;;4233:87;;1134:30501:75;4251:1:8;1134:30501:75;5799:7:8;1134:30501:75;;-1:-1:-1;;;;;1134:30501:75;4251:1:8;1134:30501:75;;;12923:18:79;;:56;;;4143:578:8;12919:141:79;;1134:30501:75;4251:1:8;1134:30501:75;5799:7:8;1134:30501:75;;-1:-1:-1;;;;;1134:30501:75;4251:1:8;1134:30501:75;;;735:10:14;;9035:18:8;;9031:86;;;4143:578;9161:18;;4150:38:79;1134:30501:75;-1:-1:-1;;;;;9161:18:8;;9157:256;;4143:578;1134:30501:75;4251:1:8;1134:30501:75;9487:9:8;1134:30501:75;;;4251:1:8;1134:30501:75;9427:16:8;1134:30501:75;;;;;;4251:1:8;1134:30501:75;5799:7:8;1134:30501:75;;;4251:1:8;1134:30501:75;;;;;;;;;;;;9577:27:8;;;4251:1;9577:27;;1134:30501:75;;;4150:38:79;1134:30501:75;4610:21:8;;;4606:109;;4143:578;;;:::o;4606:109::-;4654:50;4251:1;4654:50;9487:9;1134:30501:75;;;;;;4251:1:8;4654:50;9157:256;9319:5;;1134:30501:75;;15346:15:8;1134:30501:75;;;;;;;;;;;14720:662:8;9319:5;1134:30501:75;4251:1:8;1134:30501:75;9368:9:8;1134:30501:75;;;4251:1:8;1134:30501:75;-1:-1:-1;;1134:30501:75;;;;;9157:256:8;;9031:86;6514:127;;;9031:86;7193:39;7189:255;;9031:86;;;7189:255;7252:19;;1134:30501:75;;7298:31:8;4251:1;7298:31;;1134:30501:75;;4251:1:8;7298:31;7248:186;7375:44;4251:1;7375:44;735:10:14;7375:44:8;1134:30501:75;;;;4251:1:8;7375:44;6514:127;735:10:14;;6552:16:8;;:52;;;;6514:127;6552:88;6514:127;6552:88;1134:30501:75;;4251:1:8;1134:30501:75;6034:15:8;1134:30501:75;;735:10:14;-1:-1:-1;;;;;1134:30501:75;4251:1:8;1134:30501:75;;;6608:32:8;6514:127;;6552:52;1134:30501:75;;4251:1:8;1134:30501:75;4039:18:8;1134:30501:75;;;4251:1:8;1134:30501:75;-1:-1:-1;;;;;735:10:14;1134:30501:75;4251:1:8;1134:30501:75;;;;;4251:1:8;1134:30501:75;;;6552:52:8;;12919:141:79;13002:47;;4251:1:8;13002:47:79;;1134:30501:75;;4251:1:8;13002:47:79;12923:56;1134:30501:75;;4251:1:8;1134:30501:75;12946:8:79;1134:30501:75;;;12946:33:79;1134:30501:75;4251:1:8;1134:30501:75;12946:33:79;1134:30501:75;;;;12945:34:79;12923:56;;4233:87:8;4276:33;4251:1;4276:33;4251:1;4276:33;1134:30501:75;;4251:1:8;4276:33;3135:160:79;1134:30501:75;;;3185:8:79;1134:30501:75;;;3185:27:79;1134:30501:75;;;3185:27:79;1134:30501:75;;;;3184:28:79;3180:98;;2403:24:75;;;:::i;:::-;3135:160:79;:::o;1134:30501:75:-;;;;;;;;;;:::o;5241:1063::-;1134:30501;-1:-1:-1;1134:30501:75;5401:8;1134:30501;;;5401:27;1134:30501;-1:-1:-1;1134:30501:75;5401:27;1134:30501;;;;5397:83;;5559:26;;;:::i;:::-;:30;;1134:30501;-1:-1:-1;1134:30501:75;5401:8;1134:30501;;;-1:-1:-1;1134:30501:75;;;;5604:46;5600:382;;6082:76;;-1:-1:-1;5241:1063:75;:::o;6082:76::-;5401:27;6109:38;:::o;5600:382::-;5754:81;;5945:26;5938:33;:::o;5754:81::-;5792:28;5785:35;:::o;5397:83::-;5444:25;5451:18;5444:25;:::o;4985:208:8:-;;5121:7;;;;;:::i;:::-;17034:14;;17030:664;;4985:208;;;;;:::o;17030:664::-;1134:30501:75;;;-1:-1:-1;;;;;1134:30501:75;;;;;;17072:71:8;;;;;1134:30501:75;17072:71:8;;735:10:14;17072:71:8;;;1134:30501:75;;;;;;;;;;;;;;;;;;;;:::i;:::-;17072:71:8;;17051:1;17072:71;;;17051:1;;17072:71;;;17030:664;-1:-1:-1;17068:616:8;;17331:353;;;:::i;:::-;1134:30501:75;;;17381:18:8;;;17430:25;;17051:1;17430:25;17072:71;1134:30501:75;;17051:1:8;17430:25;17377:293;1134:30501:75;17557:95:8;;17068:616;1134:30501:75;;;;17190:51:8;17186:130;;17068:616;17030:664;;;;;;17186:130;17272:25;17051:1;17272:25;17072:71;1134:30501:75;;17051:1:8;17272:25;17072:71;;;;1134:30501:75;17072:71:8;;1134:30501:75;17072:71:8;;;;;;1134:30501:75;17072:71:8;;;:::i;:::-;;;1134:30501:75;;;;;;;;;;;;17072:71:8;;;;;;;-1:-1:-1;17072:71:8;;1134:30501:75;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;2472:2189;1134:30501;-1:-1:-1;1134:30501:75;2688:8;1134:30501;;;;-1:-1:-1;1134:30501:75;;;2784:12;;;2780:51;;1134:30501;-1:-1:-1;1134:30501:75;2688:8;1134:30501;;2929:65;1134:30501;2863:32;1134:30501;-1:-1:-1;1134:30501:75;2863:32;1134:30501;;;;2929:65;;;:::i;:::-;1134:30501;;-1:-1:-1;1134:30501:75;2688:8;1134:30501;;3261:59;3033:37;1134:30501;-1:-1:-1;1134:30501:75;3033:37;1134:30501;3261:59;;:::i;:::-;3415:30;3394:51;3415:30;;;:::i;:::-;3394:51;;:::i;:::-;3449:28;;;;:::i;:::-;-1:-1:-1;3394:83:75;3390:122;;1134:30501;-1:-1:-1;1134:30501:75;2688:8;1134:30501;;;-1:-1:-1;1134:30501:75;;;;;;;4158:30;;;;;:::i;:::-;1134:30501;;;;;;;;-1:-1:-1;1134:30501:75;2688:8;1134:30501;;;3291:1;1134:30501;-1:-1:-1;1134:30501:75;4346:31;1134:30501;;;;;4271:374;2472:2189::o;4271:374::-;1134:30501;3291:1;1134:30501;-1:-1:-1;1134:30501:75;2688:8;1134:30501;;;;;-1:-1:-1;1134:30501:75;4578:31;1134:30501;;;;;;4271:374;2472:2189::o;3390:122::-;3493:8;;;;-1:-1:-1;3493:8:75;:::o;2780:51::-;2812:8;;-1:-1:-1;2812:8:75;:::o;16138:241:8:-;1134:30501:75;-1:-1:-1;1134:30501:75;5799:7:8;1134:30501:75;;-1:-1:-1;;;;;1134:30501:75;-1:-1:-1;1134:30501:75;;;16267:19:8;;;16263:88;;16360:12;16138:241;:::o;16263:88::-;16309:31;-1:-1:-1;16309:31:8;;1134:30501:75;;-1:-1:-1;16309:31:8;16649:296:75;16844:94;16649:296;16757:70;:30;;;:::i;:::-;1134:30501;-1:-1:-1;1134:30501:75;16790:8;1134:30501;;16790:37;1134:30501;-1:-1:-1;1134:30501:75;16790:37;1134:30501;16757:70;;:::i;:::-;1134:30501;-1:-1:-1;1134:30501:75;16790:8;1134:30501;;;16903:32;1134:30501;-1:-1:-1;1134:30501:75;16903:32;1134:30501;;;;16844:94;;:::i;1115:145:80:-;-1:-1:-1;;;;;1191:8:80;1134:30501:75;1182:4:80;1174:25;1170:84;;1115:145::o;1170:84::-;1222:21;;;;;;22615:384:75;1134:30501;22737:1;1134:30501;18356:8;1134:30501;;;22737:1;1134:30501;;;;18327:70;18323:179;;18540:30;;;:::i;:::-;18658:21;18654:159;;22615:384;-1:-1:-1;22737:1:75;1134:30501;;;18356:8;1134:30501;;;;;;;;18868:31;;;1134:30501;;;18909:15;1134:30501;;;;;;;;;;;;;;;;;5799:7:8;1134:30501:75;;;;;-1:-1:-1;;;;;1134:30501:75;;;;;;;;22784:208;;22959:22;1134:30501;22959:22;:::i;:::-;1134:30501;;;;;22784:208;22615:384::o;18654:159::-;1134:30501;22737:1;1134:30501;18356:8;1134:30501;;18744:58;:37;1134:30501;22737:1;1134:30501;18744:37;1134:30501;;;18744:58;:::i;:::-;1134:30501;;18654:159;;;18323:179;18420:71;22737:1;18420:71;;1134:30501;22737:1;1134:30501;;;22737:1;18420:71;1134:30501;;;;;;;;;;;;;;;:::o;16318:156::-;16414:53;16318:156;1134:30501;-1:-1:-1;1134:30501:75;16414:8;1134:30501;;16443:24;1134:30501;;-1:-1:-1;1134:30501:75;;;16443:24;;:::i;:::-;16414:53;;:::i;24723:534::-;1134:30501;-1:-1:-1;1134:30501:75;24849:8;1134:30501;;;-1:-1:-1;1134:30501:75;;;;24845:127;;25124:13;;;;:::i;:::-;1134:30501;;;;;;;25184:66;1134:30501;25224:10;25184:66;;24723:534::o;24845:127::-;24918:43;-1:-1:-1;24918:43:75;;1134:30501;;-1:-1:-1;24918:43:75;21056:762;;1134:30501;;21181:11;;;21177:94;;21191:1;1134:30501;;;21296:8;1134:30501;;;;;21296:24;;;1134:30501;;;;;;;;;;-1:-1:-1;;;;;1134:30501:75;;;;;;21600:78;1134:30501;;;;;;;;;;;;;21191:1;1134:30501;21501:16;1134:30501;;;21191:1;1134:30501;;;;;;;21655:4;21631:10;;21600:78;;:::i;:::-;1134:30501;;;;;21722:89;1134:30501;21631:10;21722:89;;21056:762::o;21177:94::-;21215:45;21191:1;21215:45;;1134:30501;;21191:1;21215:45;23104:1514;1134:30501;;;23227:11;;23223:93;;1134:30501;23397:29;;;:::i;:::-;1134:30501;23520:25;;;23516:131;;1134:30501;23237:1;1134:30501;23828:8;1134:30501;;;;23237:1;1134:30501;;;-1:-1:-1;23805:165:75;;1134:30501;24553:58;1134:30501;;23237:1;1134:30501;23828:8;1134:30501;;24461:49;1134:30501;-1:-1:-1;;;;;23997:25:75;1134:30501;23237:1;1134:30501;23997:25;1134:30501;;;;;23237:1;1134:30501;23828:8;1134:30501;;-1:-1:-1;;;;;24047:24:75;1134:30501;23237:1;1134:30501;24047:24;1134:30501;;;;23237:1;1134:30501;23828:8;1134:30501;;;;;23237:1;1134:30501;;;;;;;;;;;;;;;;;23237:1;1134:30501;24354:16;1134:30501;;;23237:1;1134:30501;;;;;;;24461:49;:::i;:::-;1134:30501;;;;;24553:58;23104:1514::o;23805:165::-;1134:30501;;23237:1;1134:30501;23828:8;1134:30501;;;;23237:1;1134:30501;;;23877:82;;23237:1;23877:82;;1134:30501;;;;;;23237:1;23877:82;23516:131;23568:68;;23237:1;23568:68;;1134:30501;;;;;;23237:1;23568:68;23223:93;23261:44;;23237:1;23261:44;;1134:30501;;23237:1;23261:44;14540:619;1134:30501;;;14642:8;1134:30501;;;;;;;;14731:12;;;14727:51;;14808:22;;;:::i;:::-;14946:19;;;14942:64;;15131:21;;;;:::i;14942:64::-;14981:14;;:::o;19147:1804::-;-1:-1:-1;;;;;19147:1804:75;;;;;;;1134:30501;19425:20;;;19421:95;;-1:-1:-1;;;;;1134:30501:75;;;;;19548:41;;;;;;;;;;;;;19443:1;19548:41;;;19147:1804;1134:30501;;;;19666:18;19682:2;19666:18;;19662:110;;19824:12;1134:30501;;;;;;;;;;:::i;:::-;19443:1;1134:30501;;19548:41;19906:370;;1134:30501;;;;;;;;19906:370;;1134:30501;;;;19906:370;;;20181:15;;1134:30501;;;;19906:370;;;19966:4;1134:30501;;19906:370;;;1134:30501;;;;;;;19906:370;;;1134:30501;19443:1;1134:30501;;;19906:370;;1134:30501;;;19906:370;;;1134:30501;;;19906:370;;;1134:30501;19443:1;1134:30501;;19443:1;1134:30501;19885:8;19548:41;1134:30501;;19443:1;1134:30501;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19966:4;1134:30501;;;;;;;;;;;;;-1:-1:-1;;;;;1134:30501:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1134:30501:75;-1:-1:-1;;;;;1134:30501:75;;;;;;;;;;;;19906:370;1134:30501;;;;;;;;;;;;;;;19443:1;1134:30501;20286:16;19548:41;1134:30501;;19443:1;1134:30501;;;;;;;;;;;;;;19966:4;-1:-1:-1;;;;;1134:30501:75;;;;;:::i;:::-;;;;;;;-1:-1:-1;;1134:30501:75;;;;;;;;;;19966:4;1134:30501;;19824:12;1134:30501;;10022:16:8;;;10018:87;;1134:30501:75;19443:1;1134:30501;;19548:41;1134:30501;-1:-1:-1;;;;;1134:30501:75;19443:1;1134:30501;;;12923:18:79;;:56;;;19147:1804:75;12919:141:79;;1134:30501:75;19443:1;1134:30501;;19548:41;1134:30501;-1:-1:-1;;;;;1134:30501:75;19443:1;1134:30501;;;4150:38:79;19548:41:75;9161:18:8;;;9157:256;;;;19147:1804:75;1134:30501;19443:1;1134:30501;19548:41;1134:30501;;;19443:1;1134:30501;19966:4;1134:30501;;;;;;19443:1;1134:30501;;;;;19443:1;1134:30501;;;;;;;;;;;9577:27:8;;;;;19443:1:75;9577:27:8;;1134:30501:75;;;;4150:38:79;10180:96:8;;20702:242:75;1134:30501;19906:370;1134:30501;;;;;;;19548:41;1134:30501;;;;;;;20702:242;19147:1804::o;10180:96:8:-;10234:31;19443:1:75;10234:31:8;19443:1:75;19548:41;1134:30501;;19443:1;10234:31:8;9157:256;9319:5;;1134:30501:75;;15346:15:8;1134:30501:75;;;;;;;;;;;14720:662:8;9319:5;1134:30501:75;19443:1;1134:30501;19548:41;1134:30501;;;19443:1;1134:30501;-1:-1:-1;;1134:30501:75;;;;;9157:256:8;;12919:141:79;13002:47;;19443:1:75;13002:47:79;19548:41:75;1134:30501;;19443:1;13002:47:79;12923:56;1134:30501:75;;19443:1;1134:30501;19885:8;19548:41;1134:30501;;19966:4;1134:30501;19443:1;1134:30501;12946:33:79;1134:30501:75;;;;12945:34:79;12923:56;;19662:110:75;19707:54;;19443:1;19707:54;19548:41;1134:30501;;19443:1;19707:54;19548:41;;;;;;;;;;;;;;;;:::i;:::-;;;1134:30501;;;;;;;;;;;;;19548:41;;;;;;-1:-1:-1;19548:41:75;;19421:95;19468:37;19443:1;19468:37;;19443:1;19468:37;1303:160:7;1134:30501:75;;;1412:43:7;;;;-1:-1:-1;;;;;1134:30501:75;;;;1412:43:7;;;1134:30501:75;;;;;;;;;1412:43:7;;;;;;1134:30501:75;;1412:43:7;:::i;:::-;;:::i;:::-;1303:160::o;15375:890:75:-;1134:30501;;;;15538:8;1134:30501;;;;;15538:31;;;1134:30501;;;;;;;;;;15766:18;;:52;;;;15375:890;15762:91;;15490:15;;1134:30501;;;;;;;;;15490:15;;1134:30501;;;;;15375:890;:::o;15766:52::-;15490:15;;;15788:30;;15766:52;;18141:901;;;1134:30501;;;;;-1:-1:-1;1134:30501:75;18356:8;1134:30501;;;-1:-1:-1;1134:30501:75;;;;18327:70;;18323:179;;18984:51;18540:30;;;;;;:::i;:::-;18658:21;18654:159;;18141:901;-1:-1:-1;;1134:30501:75;;;18356:8;1134:30501;;;;;18868:31;;;1134:30501;;;18909:15;1134:30501;;;;;;;;;;;;;;;;;;;;;;;;;;;;18654:159;1134:30501;-1:-1:-1;1134:30501:75;18356:8;1134:30501;;18744:58;:37;1134:30501;-1:-1:-1;1134:30501:75;18744:37;1134:30501;;;18744:58;:::i;:::-;1134:30501;;18654:159;;;18323:179;18420:71;;;-1:-1:-1;18420:71:75;;1134:30501;;;;-1:-1:-1;18420:71:75;16995:315;1134:30501;;;17099:8;1134:30501;;17156:22;1134:30501;;;;;;17156:22;;:::i;:::-;17193:19;;;;;;;17235;;;:::i;17406:408::-;;1134:30501;-1:-1:-1;1134:30501:75;17535:8;1134:30501;;-1:-1:-1;;;;;1134:30501:75;17535:25;1134:30501;-1:-1:-1;1134:30501:75;17535:25;1134:30501;;;;17525:35;;;17521:141;;1134:30501;;-1:-1:-1;1134:30501:75;5799:7:8;1134:30501:75;;-1:-1:-1;;;;;1134:30501:75;;-1:-1:-1;1134:30501:75;;;;;17676:31;;;17672:136;;17406:408;;:::o;17672:136::-;-1:-1:-1;1134:30501:75;5799:7:8;1134:30501:75;;-1:-1:-1;;;;;1134:30501:75;-1:-1:-1;1134:30501:75;;;17730:67;;-1:-1:-1;17730:67:75;;1134:30501;;;;-1:-1:-1;17730:67:75;17521:141;1134:30501;-1:-1:-1;1134:30501:75;17535:8;1134:30501;;-1:-1:-1;;;;;17535:25:75;1134:30501;-1:-1:-1;1134:30501:75;17625:25;1134:30501;;17583:68;;-1:-1:-1;17583:68:75;;1134:30501;;;;-1:-1:-1;17583:68:75;2338:357:86;2449:2;1134:30501:75;;;2437:14:86;2433:58;;2449:2;1134:30501:75;;;2616:2:86;1134:30501:75;;2338:357:86:o;2433:58::-;2467:13;3291:1:75;2467:13:86;:::o;2338:357::-;;2449:2;1134:30501:75;;;2437:14:86;2433:58;;2449:2;1134:30501:75;;;2616:2:86;1134:30501:75;;;2338:357:86:o;27283:4350:75:-;1134:30501;;27283:4350;;1134:30501;;;;27533:11;;27529:95;;-1:-1:-1;;;;;1134:30501:75;;27692:16;;;27688:103;;1134:30501;;;5799:7:8;1134:30501:75;;-1:-1:-1;;;;;1134:30501:75;;;;;27956:24;;;:73;;;27283:4350;27952:210;;1134:30501;;;28194:8;1134:30501;;;28194:32;1134:30501;;;28194:32;1134:30501;;;;28300:30;:70;:30;;;:::i;:::-;1134:30501;;;28194:8;1134:30501;;5799:7:8;1134:30501:75;;;28333:37;1134:30501;28300:70;;:::i;:::-;28400:53;;;;:::i;:::-;1134:30501;;;;28194:8;1134:30501;;;;;;;;28564:26;28605:19;;;28601:326;28605:19;;;1134:30501;28746:28;28601:326;1134:30501;29024:27;;;29020:129;;29222:42;;;;;:::i;:::-;1134:30501;;;;28194:8;1134:30501;;5799:7:8;1134:30501:75;;;29574:37;1134:30501;29558:53;;;29554:569;5799:7:8;;;1134:30501:75;;;;28194:8;1134:30501;;5799:7:8;1134:30501:75;;;29631:37;1134:30501;;;;;;29554:569;1134:30501;;;;28194:8;1134:30501;;;;;;;;;;;;;;;;;;;;;;;;;28194:32;30300:24;1134:30501;-1:-1:-1;;;;;1134:30501:75;;;;30356:11;1134:30501;;;;;;;;;;;30385:458;;29554:569;1134:30501;31255:36;31217:34;1134:30501;;31037:45;1134:30501;;;;;;;;30930:16;1134:30501;;;;;;;;;;;31037:45;;:::i;:::-;31229:22;;;:::i;:::-;31217:34;;:::i;:::-;1134:30501;;;;28194:8;1134:30501;;;;;;;;31255:36;;:::i;:::-;1134:30501;31217:74;1909:15:47;;;31339:242:75;1134:30501;;;31474:10;;1134:30501;;;1909:15:47;;1134:30501:75;;;;;1909:15:47;;1134:30501:75;31339:242;31592:34;27283:4350;:::o;1909:15:47:-;;1134:30501:75;1909:15:47;;;;;1134:30501:75;1909:15:47;30385:458:75;31217:34;30531:74;;;31255:36;30531:74;1134:30501;30531:74;;;:::i;:::-;30501:104;;;;;1134:30501;;;30775:15;1134:30501;;;;;;;;;;;;1909:15:47;1134:30501:75;;;;;;;;;30385:458;;;;;29554:569;1134:30501;;;;28194:8;1134:30501;;;;;;;;5799:7:8;29911:37:75;;1134:30501;30051:31;;1134:30501;;;;30092:15;1134:30501;;;;;;;29554:569;;29020:129;29074:64;;;1134:30501;29074:64;;1134:30501;;;;;;;29074:64;28601:326;1134:30501;28895:21;;;:::i;:::-;28601:326;;27952:210;28052:99;;1134:30501;28052:99;;1134:30501;28130:10;1134:30501;;;;;;28052:99;27956:73;27985:44;;;;:::i;:::-;27984:45;27956:73;;27688:103;27731:49;;1134:30501;27731:49;;1134:30501;;;27731:49;27529:95;27567:46;1134:30501;27567:46;;1134:30501;;;27567:46;1936:290:86;;2049:2;1134:30501:75;;;2037:14:86;2033:58;;1134:30501:75;;2189:20:86;1134:30501:75;2049:2:86;1134:30501:75;;2147:2:86;1134:30501:75;2189:20:86;;:::i;1702:188:7:-;;;;-1:-1:-1;;;;;1829:53:7;1702:188;1134:30501:75;;;1829:53:7;1134:30501:75;1829:53:7;;;;1134:30501:75;1829:53:7;;;1134:30501:75;;;;;;;;;;;1829:53:7;;;;;;:::i;9259:218:19:-;1134:30501:75;9339:25:19;;9335:105;;1134:30501:75;;9259:218:19;:::o;9335:105::-;9387:42;;;9418:3;9387:42;1134:30501:75;;;;9387:42:19;;11428:301:79;1134:30501:75;-1:-1:-1;1134:30501:75;5799:7:8;1134:30501:75;;-1:-1:-1;;;;;1134:30501:75;-1:-1:-1;1134:30501:75;;;11584:10:79;;;:23;:87;;;;;11428:301;11584:138;;;;;11577:145;11428:301;:::o;11584:138::-;:10;;-1:-1:-1;;;;;11687:21:79;11584:10;11687:21;;:::i;:::-;1134:30501:75;11687:35:79;11428:301;:::o;11584:87::-;1134:30501:75;;;-1:-1:-1;1134:30501:75;4039:18:8;1134:30501:75;;;-1:-1:-1;1134:30501:75;-1:-1:-1;;;;;11584:10:79;1134:30501:75;-1:-1:-1;1134:30501:75;;;;;-1:-1:-1;1134:30501:75;;;11584:87:79;;;;4059:629:7;2847:1:12;4059:629:7;-1:-1:-1;;;;;3510:55:12;4059:629:7;1134:30501:75;3462:31:12;;;;;;;;;;;;:::i;:::-;3510:55;;;:::i;:::-;1134:30501:75;;4551:22:7;;;;:57;;;;4059:629;4547:135;;;;4059:629;:::o;4547:135::-;4631:40;2847:1:12;4631:40:7;;1134:30501:75;;2847:1:12;4631:40:7;4551:57;4578:30;;;;3462:31:12;4578:30:7;;;1134:30501:75;;;;3462:31:12;4578:30:7;1134:30501:75;;;;;;;;;4551:57:7;;;;445:441:86;;;18999:39:51;445:441:86;1134:30501:75;;;18999:39:51;:::i;:::-;1134:30501:75;2953:19:46;;2949:102;;1134:30501:75;856:23:86;1134:30501:75;;856:23:86;;;:::i;2949:102:46:-;2991:53;-1:-1:-1;2991:53:46;;1134:30501:75;;-1:-1:-1;2991:53:46;19680:819:21;;;;-1:-1:-1;;19794:150:21;;;;;;;;;;;;;;;;;19954:10;;19950:86;;1605:4;20046:13;;;20042:74;;20145:352;;;1605:4;20145:352;;;;;;;;;;;;;;;;19680:819;:::o;20042:74::-;20078:31;;;1134:30501:75;20078:31:21;;1134:30501:75;1605:4:21;1134:30501:75;1605:4:21;1134:30501:75;20078:31:21;19950:86;-1:-1:-1;;1605:4:21;1134:30501:75;;;-1:-1:-1;20000:19:21:o;4625:582:12:-;;4797:8;;-1:-1:-1;1134:30501:75;;5874:21:12;:17;;6046:142;;;;;;5870:383;6225:17;5894:1;6225:17;;5894:1;6225:17;4793:408;1134:30501:75;;5045:22:12;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;-1:-1:-1;;;;;5121:24:12;;5066:1;5121:24;1134:30501:75;5121:24:12;1134:30501:75;;5066:1:12;5121:24;5045:49;5071:18;;;:23;5045:49;",
    "linkReferences": {},
    "immutableReferences": { "59959": [{ "start": 12877, "length": 32 }] }
  },
  "methodIdentifiers": {
    "MAX_FEE()": "bc063e1a",
    "adjustRatePerSecond(uint256,uint128)": "a8a482a6",
    "admin()": "f851a440",
    "aggregateBalance(address)": "5f553152",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "batch(bytes[])": "1e897afb",
    "collectProtocolRevenue(address,address)": "ffe3d9f8",
    "coveredDebtOf(uint256)": "42e3e23d",
    "create(address,address,uint128,address,bool)": "597150fa",
    "createAndDeposit(address,address,uint128,address,bool,uint128)": "fbf2777e",
    "depletionTimeOf(uint256)": "d4b80884",
    "deposit(uint256,uint128,address,address)": "b61f7583",
    "depositAndPause(uint256,uint128)": "bcbd019e",
    "depositViaBroker(uint256,uint128,address,address,(address,uint256))": "c2f8e750",
    "getApproved(uint256)": "081812fc",
    "getBalance(uint256)": "1e010439",
    "getRatePerSecond(uint256)": "80448da3",
    "getRecipient(uint256)": "6d0cee75",
    "getSender(uint256)": "b971302a",
    "getSnapshotDebtScaled(uint256)": "450ac908",
    "getSnapshotTime(uint256)": "eb5710d8",
    "getStream(uint256)": "894e9a0d",
    "getStreamsBySender(address)": "7c7e10af",
    "getToken(uint256)": "e4b50cb8",
    "getTokenDecimals(uint256)": "a7de07cd",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isPaused(uint256)": "bdf2a43c",
    "isStream(uint256)": "b8a3be66",
    "isTransferable(uint256)": "b2564569",
    "isVoided(uint256)": "569f4c59",
    "name()": "06fdde03",
    "nextStreamId()": "1e99d569",
    "nftDescriptor()": "44267570",
    "ongoingDebtScaledOf(uint256)": "7ddf9228",
    "ownerOf(uint256)": "6352211e",
    "pause(uint256)": "136439dd",
    "protocolFee(address)": "b62b31e4",
    "protocolRevenue(address)": "0c5fd195",
    "recover(address,address)": "648bf774",
    "refund(uint256,uint128)": "81632a86",
    "refundAndPause(uint256,uint128)": "379d871a",
    "refundableAmountOf(uint256)": "1400ecec",
    "restart(uint256,uint128)": "ebb6f79a",
    "restartAndDeposit(uint256,uint128,uint128)": "1f0cce58",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "senderToStreamId(address,uint256)": "24903ac4",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setNFTDescriptor(address)": "7cad6cd1",
    "setProtocolFee(address,uint256)": "b5b3ca2c",
    "statusOf(uint256)": "ad35efd4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalDebtOf(uint256)": "08b87923",
    "transferAdmin(address)": "75829def",
    "transferFrom(address,address,uint256)": "23b872dd",
    "uncoveredDebtOf(uint256)": "bc7a2d6c",
    "void(uint256)": "5ea2145b",
    "withdraw(uint256,address,uint128)": "fdd46d60",
    "withdrawMax(uint256,address)": "ea5ead19",
    "withdrawableAmountOf(uint256)": "d975dfed"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAdmin\",\"type\":\"address\"},{\"internalType\":\"contract IFlowNFTDescriptor\",\"name\":\"initialNFTDescriptor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"errorData\",\"type\":\"bytes\"}],\"name\":\"BatchError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"CallerNotAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"DebtStreamBase_NoProtocolRevenue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"DebtStreamBase_NotTransferable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"UD60x18\",\"name\":\"newProtocolFee\",\"type\":\"uint256\"},{\"internalType\":\"UD60x18\",\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"DebtStreamBase_ProtocolFeeTooHigh\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"DebtStreamBase_SurplusZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DebtStream_BrokerAddressZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"UD60x18\",\"name\":\"brokerFee\",\"type\":\"uint256\"},{\"internalType\":\"UD60x18\",\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"DebtStream_BrokerFeeTooHigh\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"DebtStream_DepositAmountZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"availableAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"DebtStream_InvalidCalculation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"DebtStream_InvalidTokenDecimals\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"streamRecipient\",\"type\":\"address\"}],\"name\":\"DebtStream_NotStreamRecipient\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"streamSender\",\"type\":\"address\"}],\"name\":\"DebtStream_NotStreamSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"DebtStream_Null\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"withdrawableAmount\",\"type\":\"uint128\"}],\"name\":\"DebtStream_Overdraw\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"UD21x18\",\"name\":\"ratePerSecond\",\"type\":\"uint128\"}],\"name\":\"DebtStream_RatePerSecondNotDifferent\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"DebtStream_RefundAmountZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"refundAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"refundableAmount\",\"type\":\"uint128\"}],\"name\":\"DebtStream_RefundOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DebtStream_SenderZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"DebtStream_StreamNotPaused\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"DebtStream_StreamPaused\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"DebtStream_StreamVoided\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"DebtStream_Unauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"DebtStream_WithdrawAmountZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"DebtStream_WithdrawToZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"DebtStream_WithdrawalAddressNotRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DelegateCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"}],\"name\":\"PRBMath_MulDiv18_Overflow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"UD60x18\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"PRBMath_UD60x18_IntoUint128_Overflow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDebt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"UD21x18\",\"name\":\"oldRatePerSecond\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"UD21x18\",\"name\":\"newRatePerSecond\",\"type\":\"uint128\"}],\"name\":\"AdjustFlowStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"revenue\",\"type\":\"uint128\"}],\"name\":\"CollectProtocolRevenue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"UD21x18\",\"name\":\"ratePerSecond\",\"type\":\"uint128\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"}],\"name\":\"CreateFlowStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"DepositFlowStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDebt\",\"type\":\"uint256\"}],\"name\":\"PauseFlowStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"surplus\",\"type\":\"uint256\"}],\"name\":\"Recover\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"RefundFromFlowStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"UD21x18\",\"name\":\"ratePerSecond\",\"type\":\"uint128\"}],\"name\":\"RestartFlowStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IFlowNFTDescriptor\",\"name\":\"oldNFTDescriptor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IFlowNFTDescriptor\",\"name\":\"newNFTDescriptor\",\"type\":\"address\"}],\"name\":\"SetNFTDescriptor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"UD60x18\",\"name\":\"oldProtocolFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"UD60x18\",\"name\":\"newProtocolFee\",\"type\":\"uint256\"}],\"name\":\"SetProtocolFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"TransferAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalDebt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"writtenOffDebt\",\"type\":\"uint256\"}],\"name\":\"VoidFlowStream\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"withdrawAmount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"protocolFeeAmount\",\"type\":\"uint128\"}],\"name\":\"WithdrawFromFlowStream\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"UD60x18\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"UD21x18\",\"name\":\"newRatePerSecond\",\"type\":\"uint128\"}],\"name\":\"adjustRatePerSecond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"aggregateBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"calls\",\"type\":\"bytes[]\"}],\"name\":\"batch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"collectProtocolRevenue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"coveredDebtOf\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"coveredDebt\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"UD21x18\",\"name\":\"ratePerSecond\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"UD21x18\",\"name\":\"ratePerSecond\",\"type\":\"uint128\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"createAndDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"depletionTimeOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"depletionTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"depositAndPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"totalAmount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct Broker\",\"name\":\"broker\",\"type\":\"tuple\"}],\"name\":\"depositViaBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"balance\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getRatePerSecond\",\"outputs\":[{\"internalType\":\"UD21x18\",\"name\":\"ratePerSecond\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getSnapshotDebtScaled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotDebtScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getSnapshotTime\",\"outputs\":[{\"internalType\":\"uint40\",\"name\":\"snapshotTime\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getStream\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"balance\",\"type\":\"uint128\"},{\"internalType\":\"UD21x18\",\"name\":\"ratePerSecond\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint40\",\"name\":\"snapshotTime\",\"type\":\"uint40\"},{\"internalType\":\"bool\",\"name\":\"isStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isTransferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isVoided\",\"type\":\"bool\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"snapshotDebtScaled\",\"type\":\"uint256\"}],\"internalType\":\"struct Flow.Stream\",\"name\":\"stream\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"getStreamsBySender\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"streamIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"getTokenDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"isStream\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"isTransferable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"isVoided\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextStreamId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftDescriptor\",\"outputs\":[{\"internalType\":\"contract IFlowNFTDescriptor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"ongoingDebtScaledOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ongoingDebtScaled\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"protocolFee\",\"outputs\":[{\"internalType\":\"UD60x18\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"protocolRevenue\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"revenue\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"recover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"refundAndPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"refundableAmountOf\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"refundableAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"UD21x18\",\"name\":\"ratePerSecond\",\"type\":\"uint128\"}],\"name\":\"restart\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"UD21x18\",\"name\":\"ratePerSecond\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"restartAndDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"senderToStreamId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"streamIds\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IFlowNFTDescriptor\",\"name\":\"newNFTDescriptor\",\"type\":\"address\"}],\"name\":\"setNFTDescriptor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"UD60x18\",\"name\":\"newProtocolFee\",\"type\":\"uint256\"}],\"name\":\"setProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"statusOf\",\"outputs\":[{\"internalType\":\"enum Flow.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"totalDebtOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"uncoveredDebtOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"uncoveredDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"void\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"withdrawnAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"protocolFeeAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawMax\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"withdrawnAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"protocolFeeAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"}],\"name\":\"withdrawableAmountOf\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"withdrawableAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"AdjustFlowStream(uint256,uint256,uint128,uint128)\":{\"params\":{\"newRatePerSecond\":\"The new rate per second, denoted as a fixed-point number where 1e18 is 1 token per second.\",\"oldRatePerSecond\":\"The old rate per second, denoted as a fixed-point number where 1e18 is 1 token per second.\",\"streamId\":\"The ID of the stream.\",\"totalDebt\":\"The total debt at the time of the update, denoted in token's decimals.\"}},\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"CollectProtocolRevenue(address,address,address,uint128)\":{\"params\":{\"admin\":\"The address of the contract admin.\",\"revenue\":\"The amount of protocol revenue collected.\",\"to\":\"The address the protocol revenue has been sent to.\",\"token\":\"The address of the ERC-20 token the protocol revenue has been collected for.\"}},\"CreateFlowStream(uint256,address,address,uint128,address,bool)\":{\"params\":{\"ratePerSecond\":\"The amount by which the debt is increasing every second, denoted as a fixed-point number where 1e18 is 1 token per second.\",\"recipient\":\"The address receiving the tokens, as well as the NFT owner.\",\"sender\":\"The address streaming the tokens, which is able to adjust and pause the stream.\",\"streamId\":\"The ID of the newly created stream.\",\"token\":\"The contract address of the ERC-20 token to be streamed.\",\"transferable\":\"Boolean indicating whether the stream NFT is transferable or not.\"}},\"DepositFlowStream(uint256,address,uint128)\":{\"params\":{\"amount\":\"The amount of tokens deposited into the stream, denoted in token's decimals.\",\"funder\":\"The address that made the deposit.\",\"streamId\":\"The ID of the stream.\"}},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"PauseFlowStream(uint256,address,address,uint256)\":{\"params\":{\"recipient\":\"The stream's recipient address.\",\"sender\":\"The stream's sender address.\",\"streamId\":\"The ID of the stream.\",\"totalDebt\":\"The amount of tokens owed by the sender to the recipient, denoted in token's decimals.\"}},\"Recover(address,address,address,uint256)\":{\"params\":{\"admin\":\"The address of the contract admin.\",\"surplus\":\"The amount of surplus tokens recovered.\",\"to\":\"The address the surplus amount has been sent to.\",\"token\":\"The address of the ERC-20 token the surplus amount has been recovered for.\"}},\"RefundFromFlowStream(uint256,address,uint128)\":{\"params\":{\"amount\":\"The amount of tokens refunded to the sender, denoted in token's decimals.\",\"sender\":\"The stream's sender address.\",\"streamId\":\"The ID of the stream.\"}},\"RestartFlowStream(uint256,address,uint128)\":{\"params\":{\"ratePerSecond\":\"The amount by which the debt is increasing every second, denoted as a fixed-point number where 1e18 is 1 token per second.\",\"sender\":\"The stream's sender address.\",\"streamId\":\"The ID of the stream.\"}},\"SetNFTDescriptor(address,address,address)\":{\"params\":{\"admin\":\"The address of the contract admin.\",\"newNFTDescriptor\":\"The address of the new NFT descriptor contract.\",\"oldNFTDescriptor\":\"The address of the old NFT descriptor contract.\"}},\"SetProtocolFee(address,address,uint256,uint256)\":{\"params\":{\"admin\":\"The address of the contract admin.\",\"newProtocolFee\":\"The new protocol fee, denoted as a fixed-point percentage.\",\"oldProtocolFee\":\"The old protocol fee, denoted as a fixed-point percentage.\",\"token\":\"The address of the ERC-20 token the new protocol fee has been set for.\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"TransferAdmin(address,address)\":{\"params\":{\"newAdmin\":\"The address of the new admin.\",\"oldAdmin\":\"The address of the old admin.\"}},\"VoidFlowStream(uint256,address,address,address,uint256,uint256)\":{\"params\":{\"caller\":\"The address that performed the void, which can be the sender, recipient or an approved operator.\",\"newTotalDebt\":\"The new total debt, denoted in token's decimals.\",\"recipient\":\"The stream's recipient address.\",\"sender\":\"The stream's sender address.\",\"streamId\":\"The ID of the stream.\",\"writtenOffDebt\":\"The amount of debt written off by the caller, denoted in token's decimals.\"}},\"WithdrawFromFlowStream(uint256,address,address,address,uint128,uint128)\":{\"params\":{\"caller\":\"The address that performed the withdrawal, which can be the recipient or an approved operator.\",\"protocolFeeAmount\":\"The amount of protocol fee deducted from the withdrawn amount, denoted in token's decimals.\",\"streamId\":\"The ID of the stream.\",\"to\":\"The address that received the withdrawn tokens.\",\"token\":\"The contract address of the ERC-20 token that was withdrawn.\",\"withdrawAmount\":\"The amount withdrawn to the recipient after subtracting the protocol fee, denoted in token's decimals.\"}}},\"kind\":\"dev\",\"methods\":{\"adjustRatePerSecond(uint256,uint128)\":{\"details\":\"Emits {AdjustFlowStream} and {MetadataUpdate} events. Notes: - Performs a debt snapshot. Requirements: - Must not be delegate called. - `streamId` must not reference a null or a paused stream. - `msg.sender` must be the stream's sender. - `newRatePerSecond` must not equal to the current rate per second.\",\"params\":{\"newRatePerSecond\":\"The new rate per second, denoted as a fixed-point number where 1e18 is 1 token per second.\",\"streamId\":\"The ID of the stream to adjust.\"}},\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"batch(bytes[])\":{\"params\":{\"calls\":\"An array of inputs for each call.\"}},\"collectProtocolRevenue(address,address)\":{\"details\":\"Emits {CollectProtocolRevenue} event. Requirements: - `msg.sender` must be the contract admin. - The accrued protocol revenue must be greater than zero.\",\"params\":{\"to\":\"The address to send the protocol revenue.\",\"token\":\"The contract address of the ERC-20 token for which to claim protocol revenue.\"}},\"constructor\":{\"details\":\"Emits {TransferAdmin} event.\",\"params\":{\"initialAdmin\":\"The address of the initial contract admin.\",\"initialNFTDescriptor\":\"The address of the initial NFT descriptor.\"}},\"coveredDebtOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"create(address,address,uint128,address,bool)\":{\"details\":\"Emits {CreateFlowStream} event. Requirements: - Must not be delegate called. - `sender` must not be the zero address. - `recipient` must not be the zero address. - The `token`'s decimals must be less than or equal to 18.\",\"params\":{\"ratePerSecond\":\"The amount by which the debt is increasing every second, denoted as a fixed-point number where 1e18 is 1 token per second.\",\"recipient\":\"The address receiving the tokens.\",\"sender\":\"The address streaming the tokens, which is able to adjust and pause the stream. It doesn't have to be the same as `msg.sender`.\",\"token\":\"The contract address of the ERC-20 token to be streamed.\",\"transferable\":\"Boolean indicating if the stream NFT is transferable.\"},\"returns\":{\"streamId\":\"The ID of the newly created stream.\"}},\"createAndDeposit(address,address,uint128,address,bool,uint128)\":{\"details\":\"Emits {Transfer}, {CreateFlowStream}, and {DepositFlowStream} events. Notes: - Refer to the notes in {deposit}. Requirements: - Refer to the requirements in {create} and {deposit}.\",\"params\":{\"amount\":\"The deposit amount, denoted in token's decimals.\",\"ratePerSecond\":\"The amount by which the debt is increasing every second, denoted as a fixed-point number where 1e18 is 1 token per second.\",\"recipient\":\"The address receiving the tokens.\",\"sender\":\"The address streaming the tokens. It doesn't have to be the same as `msg.sender`.\",\"token\":\"The contract address of the ERC-20 token to be streamed.\",\"transferable\":\"Boolean indicating if the stream NFT is transferable.\"},\"returns\":{\"streamId\":\"The ID of the newly created stream.\"}},\"depletionTimeOf(uint256)\":{\"details\":\"Reverts if `streamId` references a paused or a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"deposit(uint256,uint128,address,address)\":{\"details\":\"Emits {Transfer} and {DepositFlowStream} events. Requirements: - Must not be delegate called. - `streamId` must not reference a null or a voided stream. - `amount` must be greater than zero. - `sender` and `recipient` must match the stream's sender and recipient addresses.\",\"params\":{\"amount\":\"The deposit amount, denoted in token's decimals.\",\"recipient\":\"The stream's recipient address.\",\"sender\":\"The stream's sender address.\",\"streamId\":\"The ID of the stream to deposit to.\"}},\"depositAndPause(uint256,uint128)\":{\"details\":\"Emits {Transfer}, {DepositFlowStream} and {PauseFlowStream} events. Notes: - Refer to the notes in {deposit} and {pause}. Requirements: - Refer to the requirements in {deposit} and {pause}.\",\"params\":{\"amount\":\"The deposit amount, denoted in token's decimals.\",\"streamId\":\"The ID of the stream to deposit to, and then pause.\"}},\"depositViaBroker(uint256,uint128,address,address,(address,uint256))\":{\"details\":\"Emits {Transfer} and {DepositFlowStream} events. Notes: - Refer to the notes in {deposit}. Requirements: - Must not be delegate called. - `streamId` must not reference a null stream. - `totalAmount` must be greater than zero. Otherwise it will revert inside {deposit}. - `broker.account` must not be 0 address. - `broker.fee` must not be greater than `MAX_FEE`. It can be zero.\",\"params\":{\"broker\":\"Struct encapsulating (i) the address of the broker assisting in creating the stream, and (ii) the percentage fee paid to the broker from `totalAmount`, denoted as a fixed-point percentage.\",\"recipient\":\"The stream's recipient address.\",\"sender\":\"The stream's sender address.\",\"streamId\":\"The ID of the stream to deposit on.\",\"totalAmount\":\"The total amount, including the deposit and any broker fee, denoted in token's decimals.\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getBalance(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getRatePerSecond(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The ID of the stream to make the query for.\"}},\"getRecipient(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getSender(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getSnapshotDebtScaled(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getSnapshotTime(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The ID of the stream to make the query for.\"}},\"getStream(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"getStreamsBySender(address)\":{\"details\":\"Returns the stream ID of the stream owned by `sender`.\"},\"getToken(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The ID of the stream to make the query for.\"}},\"getTokenDecimals(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The ID of the stream to make the query for.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isPaused(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"isStream(uint256)\":{\"details\":\"Does not revert if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"isTransferable(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"isVoided(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ongoingDebtScaledOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"pause(uint256)\":{\"details\":\"Emits {PauseFlowStream} event. Notes: - It does not set the snapshot time to the current block timestamp. - It updates the snapshot debt by adding up ongoing debt. - It sets the rate per second to zero. Requirements: - Must not be delegate called. - `streamId` must not reference a null or an already paused stream. - `msg.sender` must be the stream's sender.\",\"params\":{\"streamId\":\"The ID of the stream to pause.\"}},\"recover(address,address)\":{\"details\":\"Emits {Recover} event. Notes: - The surplus amount is defined as the difference between the total balance of the contract for the provided ERC-20 token and the sum of balances of all streams created using the same ERC-20 token. Requirements: - `msg.sender` must be the contract admin. - The surplus amount must be greater than zero.\",\"params\":{\"to\":\"The address to send the surplus amount.\",\"token\":\"The contract address of the ERC-20 token to recover for.\"}},\"refund(uint256,uint128)\":{\"details\":\"Emits {Transfer} and {RefundFromFlowStream} events. Requirements: - Must not be delegate called. - `streamId` must not reference a null stream. - `msg.sender` must be the sender. - `amount` must be greater than zero and must not exceed the refundable amount.\",\"params\":{\"amount\":\"The amount to refund, denoted in token's decimals.\",\"streamId\":\"The ID of the stream to refund from.\"}},\"refundAndPause(uint256,uint128)\":{\"details\":\"Emits {Transfer}, {RefundFromFlowStream} and {PauseFlowStream} events. Notes: - Refer to the notes in {pause}. Requirements: - Refer to the requirements in {refund} and {pause}.\",\"params\":{\"amount\":\"The amount to refund, denoted in token's decimals.\",\"streamId\":\"The ID of the stream to refund from and then pause.\"}},\"refundableAmountOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"restart(uint256,uint128)\":{\"details\":\"Emits {RestartFlowStream} event. - This function updates stream's `snapshotTime` to the current block timestamp. Notes: - It sets the snapshot time to the current block timestamp. Requirements: - Must not be delegate called. - `streamId` must not reference a null, or a voided stream. - `msg.sender` must be the stream's sender. - `ratePerSecond` must be greater than zero.\",\"params\":{\"ratePerSecond\":\"The amount by which the debt is increasing every second, denoted as a fixed-point number where 1e18 is 1 token per second.\",\"streamId\":\"The ID of the stream to restart.\"}},\"restartAndDeposit(uint256,uint128,uint128)\":{\"details\":\"Emits {RestartFlowStream}, {Transfer}, and {DepositFlowStream} events. Notes: - Refer to the notes in {restart} and {deposit}. Requirements: - `amount` must be greater than zero. - Refer to the requirements in {restart}.\",\"params\":{\"amount\":\"The deposit amount, denoted in token's decimals.\",\"ratePerSecond\":\"The amount by which the debt is increasing every second, denoted as a fixed-point number where 1e18 is 1 token per second.\",\"streamId\":\"The ID of the stream to restart.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setNFTDescriptor(address)\":{\"details\":\"Emits {SetNFTDescriptor} and {BatchMetadataUpdate} events. Notes: - Does not revert if the NFT descriptor is the same. Requirements: - `msg.sender` must be the contract admin.\",\"params\":{\"newNFTDescriptor\":\"The address of the new NFT descriptor contract.\"}},\"setProtocolFee(address,uint256)\":{\"details\":\"Emits {SetProtocolFee} and {BatchMetadataUpdate} events. Notes: - Does not revert if the fee is the same. - It can be zero. Requirements: - `msg.sender` must be the contract admin. - `newProtocolFee` must not be greater than `MAX_FEE`.\",\"params\":{\"newProtocolFee\":\"The new protocol fee, denoted as a fixed-point percentage where 1e18 is 100%.\",\"token\":\"The contract address of the ERC-20 token to update the fee for.\"}},\"statusOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalDebtOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"transferAdmin(address)\":{\"details\":\"Notes: - Does not revert if the admin is the same. - This function can potentially leave the contract without an admin, thereby removing any functionality that is only available to the admin. Requirements: - `msg.sender` must be the contract admin.\",\"params\":{\"newAdmin\":\"The address of the new admin.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"uncoveredDebtOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"}},\"void(uint256)\":{\"details\":\"Emits {VoidFlowStream} event. Notes: - It sets snapshot time to the `block.timestamp` - Voiding an insolvent stream sets the snapshot debt to the stream's balance making the uncovered debt to become zero. - Voiding a solvent stream updates the snapshot debt by adding up ongoing debt. - It sets the rate per second to zero. - A voided stream cannot be restarted. Requirements: - Must not be delegate called. - `streamId` must not reference a null or a voided stream. - `msg.sender` must either be the stream's sender, recipient or an approved third party.\",\"params\":{\"streamId\":\"The ID of the stream to void.\"}},\"withdraw(uint256,address,uint128)\":{\"details\":\"Emits {Transfer} and {WithdrawFromFlowStream} events. Notes: - It sets the snapshot time to the `block.timestamp` if `amount` is greater than snapshot debt. - A protocol fee may be charged on the withdrawn amount if the protocol fee is enabled for the streaming token. Requirements: - Must not be delegate called. - `streamId` must not reference a null stream. - `to` must not be the zero address. - `to` must be the recipient if `msg.sender` is not the stream's recipient. - `amount` must  be greater than zero and must not exceed the withdrawable amount.\",\"params\":{\"amount\":\"The amount to withdraw, denoted in token's decimals.\",\"streamId\":\"The ID of the stream to withdraw from.\",\"to\":\"The address receiving the withdrawn tokens.\"},\"returns\":{\"protocolFeeAmount\":\"The protocol fee amount, denoted in the token's decimals.\",\"withdrawnAmount\":\"The amount withdrawn to the recipient, denoted in token's decimals. This is input amount minus the protocol fee.\"}},\"withdrawMax(uint256,address)\":{\"details\":\"Emits {Transfer} and {WithdrawFromFlowStream} events. Notes: - Refer to the notes in {withdraw}. Requirements: - Refer to the requirements in {withdraw}.\",\"params\":{\"streamId\":\"The ID of the stream to withdraw from.\",\"to\":\"The address receiving the withdrawn tokens.\"},\"returns\":{\"protocolFeeAmount\":\"The protocol fee amount, denoted in the token's decimals.\",\"withdrawnAmount\":\"The amount withdrawn to the recipient, denoted in token's decimals.\"}},\"withdrawableAmountOf(uint256)\":{\"details\":\"Reverts if `streamId` references a null stream.\",\"params\":{\"streamId\":\"The stream ID for the query.\"},\"returns\":{\"withdrawableAmount\":\"The amount that the recipient can withdraw.\"}}},\"title\":\"DebtStream\",\"version\":1},\"userdoc\":{\"errors\":{\"BatchError(bytes)\":[{\"notice\":\"Thrown when an unexpected error occurs during a batch call.\"}],\"CallerNotAdmin(address,address)\":[{\"notice\":\"Thrown when `msg.sender` is not the admin.\"}],\"DebtStreamBase_NoProtocolRevenue(address)\":[{\"notice\":\"Thrown when trying to claim protocol revenue when the accrued amount is zero.\"}],\"DebtStreamBase_NotTransferable(uint256)\":[{\"notice\":\"Thrown when trying to transfer Stream NFT when transferability is disabled.\"}],\"DebtStreamBase_ProtocolFeeTooHigh(uint256,uint256)\":[{\"notice\":\"Thrown when trying to set protocol fee more than the allowed.\"}],\"DebtStreamBase_SurplusZero(address)\":[{\"notice\":\"Thrown when trying to recover for a token with zero surplus.\"}],\"DebtStream_BrokerAddressZero()\":[{\"notice\":\"Thrown when trying to create a stream with a broker recipient address as zero.\"}],\"DebtStream_BrokerFeeTooHigh(uint256,uint256)\":[{\"notice\":\"Thrown when trying to create a stream with a broker fee more than the allowed.\"}],\"DebtStream_DepositAmountZero(uint256)\":[{\"notice\":\"Thrown when trying to create a stream with a zero deposit amount.\"}],\"DebtStream_InvalidCalculation(uint256,uint128,uint128)\":[{\"notice\":\"Thrown when an unexpected error occurs during the calculation of an amount.\"}],\"DebtStream_InvalidTokenDecimals(address)\":[{\"notice\":\"Thrown when trying to create a stream with an token with no decimals.\"}],\"DebtStream_NotStreamRecipient(address,address)\":[{\"notice\":\"Thrown when the recipient address does not match the stream's recipient.\"}],\"DebtStream_NotStreamSender(address,address)\":[{\"notice\":\"Thrown when the sender address does not match the stream's sender.\"}],\"DebtStream_Null(uint256)\":[{\"notice\":\"Thrown when the ID references a null stream.\"}],\"DebtStream_Overdraw(uint256,uint128,uint128)\":[{\"notice\":\"Thrown when trying to withdraw an amount greater than the withdrawable amount.\"}],\"DebtStream_RatePerSecondNotDifferent(uint256,uint128)\":[{\"notice\":\"Thrown when trying to change the rate per second with the same rate per second.\"}],\"DebtStream_RefundAmountZero(uint256)\":[{\"notice\":\"Thrown when trying to refund zero tokens from a stream.\"}],\"DebtStream_RefundOverflow(uint256,uint128,uint128)\":[{\"notice\":\"Thrown when trying to refund an amount greater than the refundable amount.\"}],\"DebtStream_SenderZeroAddress()\":[{\"notice\":\"Thrown when trying to create a stream with the sender as the zero address.\"}],\"DebtStream_StreamNotPaused(uint256)\":[{\"notice\":\"Thrown when trying to restart a stream that is not paused.\"}],\"DebtStream_StreamPaused(uint256)\":[{\"notice\":\"Thrown when trying to perform an action with a paused stream.\"}],\"DebtStream_StreamVoided(uint256)\":[{\"notice\":\"Thrown when trying to perform an action with a voided stream.\"}],\"DebtStream_Unauthorized(uint256,address)\":[{\"notice\":\"Thrown when `msg.sender` lacks authorization to perform an action.\"}],\"DebtStream_WithdrawAmountZero(uint256)\":[{\"notice\":\"Thrown when trying to withdraw zero tokens from a stream.\"}],\"DebtStream_WithdrawToZeroAddress(uint256)\":[{\"notice\":\"Thrown when trying to withdraw to the zero address.\"}],\"DebtStream_WithdrawalAddressNotRecipient(uint256,address,address)\":[{\"notice\":\"Thrown when trying to withdraw to an address other than the recipient's.\"}],\"DelegateCall()\":[{\"notice\":\"Thrown when trying to delegate call to a function that disallows delegate calls.\"}],\"PRBMath_MulDiv18_Overflow(uint256,uint256)\":[{\"notice\":\"Thrown when the resultant value in {mulDiv18} overflows uint256.\"}],\"PRBMath_UD60x18_IntoUint128_Overflow(uint256)\":[{\"notice\":\"Thrown when trying to cast a UD60x18 number that doesn't fit in uint128.\"}]},\"events\":{\"AdjustFlowStream(uint256,uint256,uint128,uint128)\":{\"notice\":\"Emitted when the rate per second is updated by the sender.\"},\"CollectProtocolRevenue(address,address,address,uint128)\":{\"notice\":\"Emitted when the contract admin collects protocol revenue accrued.\"},\"CreateFlowStream(uint256,address,address,uint128,address,bool)\":{\"notice\":\"Emitted when a Flow stream is created.\"},\"DepositFlowStream(uint256,address,uint128)\":{\"notice\":\"Emitted when a stream is funded.\"},\"PauseFlowStream(uint256,address,address,uint256)\":{\"notice\":\"Emitted when a stream is paused by the sender.\"},\"Recover(address,address,address,uint256)\":{\"notice\":\"Emitted when the contract admin recovers the surplus amount of token.\"},\"RefundFromFlowStream(uint256,address,uint128)\":{\"notice\":\"Emitted when a sender is refunded from a stream.\"},\"RestartFlowStream(uint256,address,uint128)\":{\"notice\":\"Emitted when a stream is restarted by the sender.\"},\"SetNFTDescriptor(address,address,address)\":{\"notice\":\"Emitted when the contract admin sets a new NFT descriptor contract.\"},\"SetProtocolFee(address,address,uint256,uint256)\":{\"notice\":\"Emitted when the contract admin sets a new protocol fee for the provided ERC-20 token.\"},\"TransferAdmin(address,address)\":{\"notice\":\"Emitted when the admin is transferred.\"},\"VoidFlowStream(uint256,address,address,address,uint256,uint256)\":{\"notice\":\"Emitted when a stream is voided by the sender, recipient or an approved operator.\"},\"WithdrawFromFlowStream(uint256,address,address,address,uint128,uint128)\":{\"notice\":\"Emitted when tokens are withdrawn from a stream by a recipient or an approved operator.\"}},\"kind\":\"user\",\"methods\":{\"MAX_FEE()\":{\"notice\":\"Retrieves the maximum fee that can be charged by the broker and the protocol, denoted as a fixed-point percentage where 1e18 is 100%.\"},\"adjustRatePerSecond(uint256,uint128)\":{\"notice\":\"Changes the stream's rate per second.\"},\"admin()\":{\"notice\":\"The address of the admin account or contract.\"},\"aggregateBalance(address)\":{\"notice\":\"Retrieves the sum of balances of all streams.\"},\"batch(bytes[])\":{\"notice\":\"Allows batched call to self, `this` contract.\"},\"collectProtocolRevenue(address,address)\":{\"notice\":\"Collect the protocol revenue accrued for the provided ERC-20 token.\"},\"coveredDebtOf(uint256)\":{\"notice\":\"Returns the amount of debt covered by the stream balance, denoted in token's decimals.\"},\"create(address,address,uint128,address,bool)\":{\"notice\":\"Creates a new Flow stream by setting the snapshot time to `block.timestamp` and leaving the balance to zero. The stream is wrapped in an ERC-721 NFT.\"},\"createAndDeposit(address,address,uint128,address,bool,uint128)\":{\"notice\":\"Creates a new Flow stream by setting the snapshot time to `block.timestamp` and the balance to `amount`. The stream is wrapped in an ERC-721 NFT.\"},\"depletionTimeOf(uint256)\":{\"notice\":\"Returns the time at which the total debt exceeds stream balance. If the total debt is less than or equal to stream balance, it returns 0.\"},\"deposit(uint256,uint128,address,address)\":{\"notice\":\"Makes a deposit in a stream.\"},\"depositAndPause(uint256,uint128)\":{\"notice\":\"Deposits tokens in a stream and pauses it.\"},\"depositViaBroker(uint256,uint128,address,address,(address,uint256))\":{\"notice\":\"Deposits tokens in a stream.\"},\"getBalance(uint256)\":{\"notice\":\"Retrieves the balance of the stream, i.e. the total deposited amounts subtracted by the total withdrawn amounts, denoted in token's decimals.\"},\"getRatePerSecond(uint256)\":{\"notice\":\"Retrieves the rate per second of the stream, denoted as a fixed-point number where 1e18 is 1 token per second.\"},\"getRecipient(uint256)\":{\"notice\":\"Retrieves the stream's recipient.\"},\"getSender(uint256)\":{\"notice\":\"Retrieves the stream's sender.\"},\"getSnapshotDebtScaled(uint256)\":{\"notice\":\"Retrieves the snapshot debt of the stream, denoted as a fixed-point number where 1e18 is 1 token.\"},\"getSnapshotTime(uint256)\":{\"notice\":\"Retrieves the snapshot time of the stream, which is a Unix timestamp.\"},\"getStream(uint256)\":{\"notice\":\"Retrieves the stream entity.\"},\"getToken(uint256)\":{\"notice\":\"Retrieves the token of the stream.\"},\"getTokenDecimals(uint256)\":{\"notice\":\"Retrieves the token decimals of the stream.\"},\"isPaused(uint256)\":{\"notice\":\"Returns whether a stream is paused.\"},\"isStream(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream exists.\"},\"isTransferable(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream NFT is transferable.\"},\"isVoided(uint256)\":{\"notice\":\"Retrieves a flag indicating whether the stream is voided.\"},\"nextStreamId()\":{\"notice\":\"Counter for stream ids.\"},\"nftDescriptor()\":{\"notice\":\"Contract that generates the non-fungible token URI.\"},\"ongoingDebtScaledOf(uint256)\":{\"notice\":\"Returns the amount of debt accrued since the snapshot time until now, denoted as a fixed-point number where 1e18 is 1 token.\"},\"pause(uint256)\":{\"notice\":\"Pauses the stream.\"},\"protocolFee(address)\":{\"notice\":\"Protocol fee for the provided ERC-20 token, denoted as a fixed-point percentage where 1e18 is 100%.\"},\"protocolRevenue(address)\":{\"notice\":\"Protocol revenue accrued for the provided ERC-20 token, denoted in token's decimals.\"},\"recover(address,address)\":{\"notice\":\"Recover the surplus amount of tokens.\"},\"refund(uint256,uint128)\":{\"notice\":\"Refunds the provided amount of tokens from the stream to the sender's address.\"},\"refundAndPause(uint256,uint128)\":{\"notice\":\"Refunds the provided amount of tokens from the stream to the sender's address.\"},\"refundableAmountOf(uint256)\":{\"notice\":\"Returns the amount that the sender can be refunded from the stream, denoted in token's decimals.\"},\"restart(uint256,uint128)\":{\"notice\":\"Restarts the stream with the provided rate per second.\"},\"restartAndDeposit(uint256,uint128,uint128)\":{\"notice\":\"Restarts the stream with the provided rate per second, and makes a deposit.\"},\"setNFTDescriptor(address)\":{\"notice\":\"Sets a new NFT descriptor contract, which produces the URI describing the DebtStream stream NFTs.\"},\"setProtocolFee(address,uint256)\":{\"notice\":\"Sets a new protocol fee that will be charged on all the withdrawals from streams created with the provided ERC-20 token.\"},\"statusOf(uint256)\":{\"notice\":\"Returns the stream's status.\"},\"totalDebtOf(uint256)\":{\"notice\":\"Returns the total amount owed by the sender to the recipient, denoted in token's decimals.\"},\"transferAdmin(address)\":{\"notice\":\"Transfers the contract admin to a new address.\"},\"uncoveredDebtOf(uint256)\":{\"notice\":\"Returns the amount of debt not covered by the stream balance, denoted in token's decimals.\"},\"void(uint256)\":{\"notice\":\"Voids a stream.\"},\"withdraw(uint256,address,uint128)\":{\"notice\":\"Withdraws the provided `amount` minus the protocol fee to the provided `to` address.\"},\"withdrawMax(uint256,address)\":{\"notice\":\"Withdraws the entire withdrawable amount minus the protocol fee to the provided `to` address.\"},\"withdrawableAmountOf(uint256)\":{\"notice\":\"Calculates the amount that the recipient can withdraw from the stream, denoted in token decimals. This is an alias for `coveredDebtOf`.\"}},\"notice\":\"See the documentation in {IDebtStream}.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/DebtStream.sol\":\"DebtStream\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@prb/math/=node_modules/@prb/math/\",\":forge-std/=node_modules/forge-std/\",\":solady/=node_modules/solady/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"node_modules/@prb/math/src/Common.sol\":{\"keccak256\":\"0x8225a3898d2f11f585da1fb82234800e9717fa080dbe53d450fd429a3a632e99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dcbf39ca575f68f32f0d1c66391de94082424956e7585e849813966f8c0fc05\",\"dweb:/ipfs/QmYvk8vXFDUJHrmqbtutYXfoLomLBosYLyBzuPoYBxsQ42\"]},\"node_modules/@prb/math/src/UD21x18.sol\":{\"keccak256\":\"0xb0176747ae9c9f329bce39730d4d315b839e73a815494ddf2de2094aa9056957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://534a82fe091627f9d01e665ac763daf56981b30b3976269f8e5c33a84a2dbebc\",\"dweb:/ipfs/QmYiiGJNr4S4ypYB4KGBPMTMiNskert8Cp4s6uf1CU3k73\"]},\"node_modules/@prb/math/src/UD60x18.sol\":{\"keccak256\":\"0xb98c6f74275914d279e8af6c502c2b1f50d5f6e1ed418d3b0153f5a193206c48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a750edde2955f160806a51083a12185fb04e20efca0e3a7ebd127dc1acc049a9\",\"dweb:/ipfs/QmeAre3mThopoQPB9mSXZq6jck59QZ7JbDFR83urd2SLvp\"]},\"node_modules/@prb/math/src/sd1x18/Casting.sol\":{\"keccak256\":\"0x5d365f655f01598926c5d4fe5cda277f2cc7736fe38f943c11a32009077ddd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56b378bd6039819bc12e5f17dabd9492e1410b3281f9df496cf8210539101a11\",\"dweb:/ipfs/QmcMaE64ZWMg9cFhYxdTuG8nfzeDdNuTRHMMoFXi6tSZGu\"]},\"node_modules/@prb/math/src/sd1x18/Constants.sol\":{\"keccak256\":\"0xc14cc32061863d83912f9616de86f3c34f1ac58614b7d504c6ce07ee8efdb8e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22483b1282dda6a556b0232f008a5a3296bbfd76b1886e6b72bf351b7c554fab\",\"dweb:/ipfs/QmYX9cYkrFxBbhZNKsb6uUxtrc2chmAj7vuc7UKRPGMwos\"]},\"node_modules/@prb/math/src/sd1x18/Errors.sol\":{\"keccak256\":\"0xc3c8b1ab3d19889c356c222a3a2186d45dfc1d3a17b9ad88159bb64ee457baa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84fbe57569246403f778330bd7723018dfcb5f0ec50d7b1d82cc983c94a54bca\",\"dweb:/ipfs/QmWssAAnovc2EVjt58rTnxraE9B1RMivwTvYCYgpnr6oSE\"]},\"node_modules/@prb/math/src/sd1x18/ValueType.sol\":{\"keccak256\":\"0xaa9dc7b562faf45264390d80e2ea10c5295bb8a4f10d76261a3f9c04363734c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6ca36acd15f5cb47cf124ddec289f84e1011f2d29056159e4570435629a3353\",\"dweb:/ipfs/QmUKdiLmZpAkNCq2TKxrPbQPUhiRFXGfjGSnY1VeHVu4y6\"]},\"node_modules/@prb/math/src/sd21x18/Casting.sol\":{\"keccak256\":\"0x4a16adddb9ab1f6939dd4567c77205015a11081cb840029b84bbb6fdaf78ee36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5003b2f4cd2fc1413da36bc63107c6e83a88d29693e8f97b54f300fa78f9c6d2\",\"dweb:/ipfs/QmaNJn91NLrZmeeGqnFQV1FTrLVSW852zHyWTrWJ5pf1pd\"]},\"node_modules/@prb/math/src/sd21x18/Constants.sol\":{\"keccak256\":\"0x501c2d5cfdea9450422182059c8df1cb6a859901a07bd59631c3fa24edcc79d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4669a65001c92919671fd879d33ce0e5030b602a7ba4d36bd2308128d8d1f396\",\"dweb:/ipfs/QmUC3bJ3qdkCmLMw3WHBcEqvuC4tExT2LXzUhgu5KQ3vi3\"]},\"node_modules/@prb/math/src/sd21x18/Errors.sol\":{\"keccak256\":\"0xc5422ee47eb139274e538e758fb40177a1ba22c2113ef3b3446102f0150bfe0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1981e052e9e86e1b0e4e55a057a7af4739aedd4ead2d60e3eaa40fb703594ee\",\"dweb:/ipfs/QmPK5qSujnyk1R8ues4RhDMy1tRKKyjQ31YJTviTKq7GML\"]},\"node_modules/@prb/math/src/sd21x18/ValueType.sol\":{\"keccak256\":\"0x532bba888370bed393464412f4ef3462d654802e71c953ad02d078e3d2701092\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://922a4e8dd813602f72d165aa1dfdf2c29b971a2abe73bebca7cd81a32ee2c880\",\"dweb:/ipfs/QmTBAJnx1r3sZpbQAuTgQtsTtvjZbpDwhCJRzkhzUumbdf\"]},\"node_modules/@prb/math/src/sd59x18/Casting.sol\":{\"keccak256\":\"0xdf70d8e70c6d6325f3f7eb028c484bc7189ef902f1d4b5b220af2e550bb5fc39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b15bcd36129c5cb163d57a117435afb171182018dd6d1e766a5f49cf1f4b63d\",\"dweb:/ipfs/QmbjzkMBH4FM2rdxGbx9LQ65wVERijNcu7R9C8dQmH3y4n\"]},\"node_modules/@prb/math/src/sd59x18/Constants.sol\":{\"keccak256\":\"0x9bcb8dd6b3e886d140ad1c32747a4f6d29a492529ceb835be878ae837aa6cc3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4045c633e3618e7e90a768d92415b2f20f781fe129b4f4e26fa88f7dbf9201f\",\"dweb:/ipfs/Qmbet95pizwPno82cJ383wJtgQRSQKESmhVZ1vDrgAu7Si\"]},\"node_modules/@prb/math/src/sd59x18/Errors.sol\":{\"keccak256\":\"0x0a79c28c85fc8a450b0801ff2e66114eac4ec565819f5d1d8738904658fe33e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e0d4fd3c998019fb8555d9e26c03bec42a8513bdf4185aeac2da3a000abaebf\",\"dweb:/ipfs/QmahFJHXcX4RwPxaQbUf6LVZEk8NSpjCV3Eif7i9iqC6Mk\"]},\"node_modules/@prb/math/src/sd59x18/Helpers.sol\":{\"keccak256\":\"0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed\",\"dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD\"]},\"node_modules/@prb/math/src/sd59x18/Math.sol\":{\"keccak256\":\"0xd8e8b51db9b3e2fa31a60f6b8ce4ea0112c3364442ede5992aa0aa7a2c925c84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c56913970e34ee7b142047b21f1856a511cbdc3473b7c50418a8490e19cd462\",\"dweb:/ipfs/QmfG1F9CBDjPYD7NXora9awFfdpvBMY9SCg5pMLCFRv9tD\"]},\"node_modules/@prb/math/src/sd59x18/ValueType.sol\":{\"keccak256\":\"0x76597ba64d37d66e0178512bc9bbc1a031a7634c45e5d5c6e9da87f46952dc9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36148899ad874814e9292636fb974d2eec61f1bcc0875ec39cf444d70ba40919\",\"dweb:/ipfs/QmadUe4kH2FPcdxvhCKy8yiezCvPWor4VcPzqLYSAaGDDb\"]},\"node_modules/@prb/math/src/ud21x18/Casting.sol\":{\"keccak256\":\"0x3821aa57604f6e5b7c9c5c5cc97a6d71116e673cf3fee5f76fcd42b4cefded65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a80399c6b38ab45cc10d0a6683d50340cd89d9a085b6d0dcfb81e7c4e5b3ce09\",\"dweb:/ipfs/QmWNW2YD2LMkqrpAtJYeeuHN329Rx7mvfmrjsCo1p6akTL\"]},\"node_modules/@prb/math/src/ud21x18/Constants.sol\":{\"keccak256\":\"0x0997574a1ced6c43bde6d9c9175edc5ad64cbb920a0969a9db68eea543747601\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c09f03345a6779b002b38ffc3954258accbb2b1d0d5506d42c3bd7f117304f60\",\"dweb:/ipfs/QmTeBXRCE7H2HpqKUNsZN7Nk3rdBnFmbAUFom3E1PJeGuV\"]},\"node_modules/@prb/math/src/ud21x18/Errors.sol\":{\"keccak256\":\"0x35a1fb789b90f8c90865884d3023deb17fcca5c7146b5ddef823496d835a5415\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0af359d07ba25bdc90de7c05ed6216833932caa75d4a02fcfc51ceeaba5a4e80\",\"dweb:/ipfs/QmavBFw73Xfp1qJiN6P1gk2Dfr8ByWo3dyCPVgDHtko2gq\"]},\"node_modules/@prb/math/src/ud21x18/ValueType.sol\":{\"keccak256\":\"0x24838b2b1da371b9259d8ee21534a9f0cb5796aba75a4efca2374627952bee25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://897e6b79308651671c7f3c91a0069e778b47356c9ba3f86e238398ab7f2623af\",\"dweb:/ipfs/QmZbLw3tJVRZFQnV9jWQUmF43gna841adSG2TAiwDAifGU\"]},\"node_modules/@prb/math/src/ud2x18/Casting.sol\":{\"keccak256\":\"0x0f3141ed054e7c29dbe1acb4b88b18eb05d60e998fba6b4e503a6799faa356d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1e2468fc4c458082aaf4aa2e35af9ba3702f207e3c8533dd1e7da11ad605eae\",\"dweb:/ipfs/QmSm7iRH1eo4cJCwcAiiXWRH9Hn1urSS4tMdbaFbFGuTyL\"]},\"node_modules/@prb/math/src/ud2x18/Constants.sol\":{\"keccak256\":\"0x29b0e050c865899e1fb9022b460a7829cdee248c44c4299f068ba80695eec3fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbaef16b662fac235349bcf97bc980dd0cba15d4e6230caae61224cdac8ea6d9\",\"dweb:/ipfs/QmZQa5XBhi7k3yhtCd8wVpnwW8htfU4sjXxWhxRypMBYkC\"]},\"node_modules/@prb/math/src/ud2x18/Errors.sol\":{\"keccak256\":\"0x3b27e2a57438cd30d9c130f84aace24d547e5ed58e8689691d7d92ad2db38ddd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841cf9fb45443899c6b659300bbf503c3fd2c1a1e83b7f0e28620eed457f7437\",\"dweb:/ipfs/QmUqg8WscP5yQPw3UMUCWaB9RLU6nryGzseuyhAjNnDc1i\"]},\"node_modules/@prb/math/src/ud2x18/ValueType.sol\":{\"keccak256\":\"0x975a2e69b48f34a4c0bd80e8a5609ac67b7264c91992c0944f9ebe7b9e3fc9d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65d012521c475295d7e70b7d526fcc0911d0f238ea938719d77251bba00c9b41\",\"dweb:/ipfs/QmexEvTQCCBPYRWAYnomZX5M7C2EkXQRAXqEYMNUZfazCs\"]},\"node_modules/@prb/math/src/ud60x18/Casting.sol\":{\"keccak256\":\"0x0803318ddc98b4ba8fbfe70e5ee08d78387fe6ae00982b9960518085a751d7b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e68a2f780b2e33fa5416eb60f9daa81f014c2591119f4b67bed1217d5530780\",\"dweb:/ipfs/QmZe7JTWvbfKqMnu4sxUwWCtLcCay9hH71VZUpoFCdENcr\"]},\"node_modules/@prb/math/src/ud60x18/Constants.sol\":{\"keccak256\":\"0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b\",\"dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5\"]},\"node_modules/@prb/math/src/ud60x18/Conversions.sol\":{\"keccak256\":\"0xd486ecca97abe69acdb28230088f4c7097fbdae5b36c5ae45d5be2faac4c33f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6080870ec6955ff0f5278f9c480b218a68714daf5f2ee42da0276d08d7b82932\",\"dweb:/ipfs/QmQ1SERHdemJgPrt4USwY8j5r63jZ8fQuJAm1knjMEEQEY\"]},\"node_modules/@prb/math/src/ud60x18/Errors.sol\":{\"keccak256\":\"0xbab6b0e303d32f3a9d9e2fe881f0392b8c59a73051a4d34f21a403b3961b3044\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86a019bcf2510d0691287329dc057479cc0abc48a5e15f245e7f15c03052d2c8\",\"dweb:/ipfs/QmeXe5pbpDHvN5DZ8puXmH2RJ25zDHj55wpiStWtNQPvq6\"]},\"node_modules/@prb/math/src/ud60x18/Helpers.sol\":{\"keccak256\":\"0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5\",\"dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr\"]},\"node_modules/@prb/math/src/ud60x18/Math.sol\":{\"keccak256\":\"0xc4e51dfd9af62938e277e90fa724099f239d33727a35909ed48c292a76faf2fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d731537cbc50b852c21d28625aeb2c329729afc23a7b86ff9d8ee5878f47e9d6\",\"dweb:/ipfs/QmS7Cj4pAdPZcTp7RqYXyxBc9EYX92CT8icfkNigktUsLr\"]},\"node_modules/@prb/math/src/ud60x18/ValueType.sol\":{\"keccak256\":\"0x1b200baf25d01a8b91b97b42114248636f742b5b7028487ef4daef6621e378a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5708ed017206bda2197654e80bea9f37b3a9993434bb066c903c2865e028f47\",\"dweb:/ipfs/QmTyotZk2J5YvWkNvB2qhXBMgRGWW2UgPqR4JPocrXSr8n\"]},\"src/DebtStream.sol\":{\"keccak256\":\"0xbaecf3c74f94ff58a2516de834c5af61f8a5d9db2fc46d603c98d0f268c1b351\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://29cd61808826e63ca3cac2bfe8a51d1eb9512a2e4baba8992360cd43d2d10dc9\",\"dweb:/ipfs/QmdgHfga9hbT2NZDtUE2Y9TrVzzrqCwjBkT6fZ29iGGJYm\"]},\"src/abstracts/Adminable.sol\":{\"keccak256\":\"0xdbcb26718ab7e57e1df94fd9ecd7de1345b839e6fb4925dc1a1182da770651b6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://02d559eaa018921cb60d10eb015d1d12e5a3ebe35c68afbbb8fb58370238dd37\",\"dweb:/ipfs/QmTKaj3GqGssMXiNjno8NvzkKrCLHwx3dsDdsoFajCDf5c\"]},\"src/abstracts/Batch.sol\":{\"keccak256\":\"0xd37246623947e8e8fc13c5746037f2b25e19c4f15d5d38642be8c9fe0556a3d6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://87c1baa5320ce5c6c6f44eaef8d84206855793b7e662c1904a86d511601d9608\",\"dweb:/ipfs/QmWBc8HreqVttbUtGAatJ4LWot8JTihfjD8CXXWtBUMowQ\"]},\"src/abstracts/DebtStreamBase.sol\":{\"keccak256\":\"0x75eb27700ed0676b6bdc1adf08bc0ee01dc1bb237dbb10715860b7eb5586b153\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4c822db3c20124455e6fe4e8f974a4d774baa6029705c87a0b3cd4773a518fff\",\"dweb:/ipfs/QmQFafEK1xjaZ5pWwQN9FuqkeFdLxAUCzNGNdGfok1kvLQ\"]},\"src/abstracts/NoDelegateCall.sol\":{\"keccak256\":\"0x6c9e22ca1303c5953ee5574c1605515bab67dc71e9325605087557c7faf71059\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8f3de9954d1dfb54e6be6a082c2732b3bd5f4b88549e2d1b29ed5527fef13fc0\",\"dweb:/ipfs/QmfRzCfJRr2StpLTG93Qp6rvfMWfbRRoo7DKoy6yPDizwP\"]},\"src/interfaces/IAdminable.sol\":{\"keccak256\":\"0xa279c49e51228b571329164e36250e82b2c1378e8b549194ab7dd90fca9c3b2b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b0af605b82e64679db7039fb378fc206c4a000f8cd24b3ff17b019e27b81be8f\",\"dweb:/ipfs/QmUSr73cbnG7K79mVE9Nwcou5nJZEK2ZGekt3KpkfpxL4Z\"]},\"src/interfaces/IDebtStream.sol\":{\"keccak256\":\"0x28d3320ec104c3ed2d406f7f59395290ec19ea2dbbbb7aa8dbd6805d82c3e1c2\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://19e2d26f2f9f0e5c2f53d50f44949b52f39c94e6c737ab19d9fe5f8bfbb32bcc\",\"dweb:/ipfs/QmPmmDYTcDoK8g8SEZ2yXshLczaXX8jtGExymfC1HCWAEj\"]},\"src/interfaces/IDebtStreamBase.sol\":{\"keccak256\":\"0xa0c39afd497102d773db0c9ea83c33ece21154f7fd2a32e80f5e6d462241e6f0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c24007e926404d4d95a019144c907c45a0617d03760d8be6569cd9fdce58faf7\",\"dweb:/ipfs/QmT8RFH5jwaKwbyGUtRjRfnQpszfUncDE27nsdZzzXhHRc\"]},\"src/interfaces/IFlowNFTDescriptor.sol\":{\"keccak256\":\"0x231028cd85886e1417278a3770d61f68653e0c14a3a6854dbd2fd5e26f24fe47\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8acb425aa62953b689dc0d25cc1294f539469eab5a3b5f65d19db904499c2494\",\"dweb:/ipfs/QmRvtw5jgJGp22EJeNouqqkGcMUiizp2TnhnkCmGfvB5en\"]},\"src/libraries/Errors.sol\":{\"keccak256\":\"0x70e2e60533e212bf5b64d60a4c4e64294ffc823b68c9e5d9a778d53ea7079639\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f7a4806128c028fef15f1eb0fdbeca9b1a106931f7f492965050577888d584e5\",\"dweb:/ipfs/QmPJNLgjPc3johPdh7N52GAGVoAtC4XWw9AVxq5PgFzNbP\"]},\"src/libraries/Helpers.sol\":{\"keccak256\":\"0x195a3855d409ac7c8bca0714101e7c12a785c1d50359948f8ee1a7d3e8e30c3e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2611624626cc51b1af688616447568419d7d73eb35b59e212a756bad9665bc2e\",\"dweb:/ipfs/QmRKmQJfu6YrjDEe17wqrrR4oVmub6vBR2yLri6bSWmHJj\"]},\"src/types/DataTypes.sol\":{\"keccak256\":\"0xaaa5b90094cfafd31ec968c769c88ff91b27677d6dcea172b0d4672a537f0a10\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://16b34fa9fa2fa7b791631c6a819b554692b8aeb8bb89c671fb0f6179c9e88e9d\",\"dweb:/ipfs/Qmcg91DDt8AjjnGrgHnDQogsq4Us8YPCfCHVG4DJVDNSB6\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.26+commit.8a97fa7a" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialAdmin",
              "type": "address"
            },
            {
              "internalType": "contract IFlowNFTDescriptor",
              "name": "initialNFTDescriptor",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address" }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "type": "error",
          "name": "AddressInsufficientBalance"
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "errorData", "type": "bytes" }
          ],
          "type": "error",
          "name": "BatchError"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "admin", "type": "address" },
            { "internalType": "address", "name": "caller", "type": "address" }
          ],
          "type": "error",
          "name": "CallerNotAdmin"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "type": "error",
          "name": "DebtStreamBase_NoProtocolRevenue"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "type": "error",
          "name": "DebtStreamBase_NotTransferable"
        },
        {
          "inputs": [
            {
              "internalType": "UD60x18",
              "name": "newProtocolFee",
              "type": "uint256"
            },
            { "internalType": "UD60x18", "name": "maxFee", "type": "uint256" }
          ],
          "type": "error",
          "name": "DebtStreamBase_ProtocolFeeTooHigh"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "type": "error",
          "name": "DebtStreamBase_SurplusZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DebtStream_BrokerAddressZero"
        },
        {
          "inputs": [
            {
              "internalType": "UD60x18",
              "name": "brokerFee",
              "type": "uint256"
            },
            { "internalType": "UD60x18", "name": "maxFee", "type": "uint256" }
          ],
          "type": "error",
          "name": "DebtStream_BrokerFeeTooHigh"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "type": "error",
          "name": "DebtStream_DepositAmountZero"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "availableAmount",
              "type": "uint128"
            },
            { "internalType": "uint128", "name": "amount", "type": "uint128" }
          ],
          "type": "error",
          "name": "DebtStream_InvalidCalculation"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "type": "error",
          "name": "DebtStream_InvalidTokenDecimals"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "streamRecipient",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "DebtStream_NotStreamRecipient"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            {
              "internalType": "address",
              "name": "streamSender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "DebtStream_NotStreamSender"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "type": "error",
          "name": "DebtStream_Null"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            },
            { "internalType": "uint128", "name": "amount", "type": "uint128" },
            {
              "internalType": "uint128",
              "name": "withdrawableAmount",
              "type": "uint128"
            }
          ],
          "type": "error",
          "name": "DebtStream_Overdraw"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            },
            {
              "internalType": "UD21x18",
              "name": "ratePerSecond",
              "type": "uint128"
            }
          ],
          "type": "error",
          "name": "DebtStream_RatePerSecondNotDifferent"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "type": "error",
          "name": "DebtStream_RefundAmountZero"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "refundAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "refundableAmount",
              "type": "uint128"
            }
          ],
          "type": "error",
          "name": "DebtStream_RefundOverflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DebtStream_SenderZeroAddress"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "type": "error",
          "name": "DebtStream_StreamNotPaused"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "type": "error",
          "name": "DebtStream_StreamPaused"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "type": "error",
          "name": "DebtStream_StreamVoided"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            },
            { "internalType": "address", "name": "caller", "type": "address" }
          ],
          "type": "error",
          "name": "DebtStream_Unauthorized"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "type": "error",
          "name": "DebtStream_WithdrawAmountZero"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "type": "error",
          "name": "DebtStream_WithdrawToZeroAddress"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            },
            { "internalType": "address", "name": "caller", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" }
          ],
          "type": "error",
          "name": "DebtStream_WithdrawalAddressNotRecipient"
        },
        { "inputs": [], "type": "error", "name": "DelegateCall" },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" },
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721IncorrectOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC721InsufficientApproval"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "approver", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721InvalidApprover"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "operator", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721InvalidOperator"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721InvalidOwner"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "receiver", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721InvalidReceiver"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" }
          ],
          "type": "error",
          "name": "ERC721InvalidSender"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC721NonexistentToken"
        },
        { "inputs": [], "type": "error", "name": "FailedInnerCall" },
        {
          "inputs": [
            { "internalType": "uint256", "name": "x", "type": "uint256" },
            { "internalType": "uint256", "name": "y", "type": "uint256" }
          ],
          "type": "error",
          "name": "PRBMath_MulDiv18_Overflow"
        },
        {
          "inputs": [
            { "internalType": "UD60x18", "name": "x", "type": "uint256" }
          ],
          "type": "error",
          "name": "PRBMath_UD60x18_IntoUint128_Overflow"
        },
        {
          "inputs": [
            { "internalType": "uint8", "name": "bits", "type": "uint8" },
            { "internalType": "uint256", "name": "value", "type": "uint256" }
          ],
          "type": "error",
          "name": "SafeCastOverflowedUintDowncast"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "totalDebt",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "UD21x18",
              "name": "oldRatePerSecond",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "UD21x18",
              "name": "newRatePerSecond",
              "type": "uint128",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdjustFlowStream",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_fromTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_toTokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchMetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "revenue",
              "type": "uint128",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CollectProtocolRevenue",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "UD21x18",
              "name": "ratePerSecond",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "transferable",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CreateFlowStream",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "funder",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DepositFlowStream",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "totalDebt",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PauseFlowStream",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "surplus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Recover",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint128",
              "name": "amount",
              "type": "uint128",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RefundFromFlowStream",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "UD21x18",
              "name": "ratePerSecond",
              "type": "uint128",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RestartFlowStream",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IFlowNFTDescriptor",
              "name": "oldNFTDescriptor",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IFlowNFTDescriptor",
              "name": "newNFTDescriptor",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetNFTDescriptor",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "UD60x18",
              "name": "oldProtocolFee",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "UD60x18",
              "name": "newProtocolFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetProtocolFee",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldAdmin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TransferAdmin",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newTotalDebt",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "writtenOffDebt",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VoidFlowStream",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "withdrawAmount",
              "type": "uint128",
              "indexed": false
            },
            {
              "internalType": "uint128",
              "name": "protocolFeeAmount",
              "type": "uint128",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawFromFlowStream",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_FEE",
          "outputs": [
            { "internalType": "UD60x18", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            },
            {
              "internalType": "UD21x18",
              "name": "newRatePerSecond",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "adjustRatePerSecond"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "aggregateBalance",
          "outputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes[]", "name": "calls", "type": "bytes[]" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batch"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            { "internalType": "address", "name": "to", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectProtocolRevenue"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "coveredDebtOf",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "coveredDebt",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "UD21x18",
              "name": "ratePerSecond",
              "type": "uint128"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            { "internalType": "bool", "name": "transferable", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "create",
          "outputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "UD21x18",
              "name": "ratePerSecond",
              "type": "uint128"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            { "internalType": "bool", "name": "transferable", "type": "bool" },
            { "internalType": "uint128", "name": "amount", "type": "uint128" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createAndDeposit",
          "outputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "depletionTimeOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "depletionTime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            },
            { "internalType": "uint128", "name": "amount", "type": "uint128" },
            { "internalType": "address", "name": "sender", "type": "address" },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            },
            { "internalType": "uint128", "name": "amount", "type": "uint128" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositAndPause"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "totalAmount",
              "type": "uint128"
            },
            { "internalType": "address", "name": "sender", "type": "address" },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "struct Broker",
              "name": "broker",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                { "internalType": "UD60x18", "name": "fee", "type": "uint256" }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositViaBroker"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBalance",
          "outputs": [
            { "internalType": "uint128", "name": "balance", "type": "uint128" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRatePerSecond",
          "outputs": [
            {
              "internalType": "UD21x18",
              "name": "ratePerSecond",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSender",
          "outputs": [
            { "internalType": "address", "name": "sender", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSnapshotDebtScaled",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "snapshotDebtScaled",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSnapshotTime",
          "outputs": [
            {
              "internalType": "uint40",
              "name": "snapshotTime",
              "type": "uint40"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStream",
          "outputs": [
            {
              "internalType": "struct Flow.Stream",
              "name": "stream",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "balance",
                  "type": "uint128"
                },
                {
                  "internalType": "UD21x18",
                  "name": "ratePerSecond",
                  "type": "uint128"
                },
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint40",
                  "name": "snapshotTime",
                  "type": "uint40"
                },
                { "internalType": "bool", "name": "isStream", "type": "bool" },
                {
                  "internalType": "bool",
                  "name": "isTransferable",
                  "type": "bool"
                },
                { "internalType": "bool", "name": "isVoided", "type": "bool" },
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "tokenDecimals",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "snapshotDebtScaled",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStreamsBySender",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "streamIds",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenDecimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "tokenDecimals",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "address", "name": "operator", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isPaused",
          "outputs": [
            { "internalType": "bool", "name": "result", "type": "bool" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isStream",
          "outputs": [
            { "internalType": "bool", "name": "result", "type": "bool" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTransferable",
          "outputs": [
            { "internalType": "bool", "name": "result", "type": "bool" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isVoided",
          "outputs": [
            { "internalType": "bool", "name": "result", "type": "bool" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nextStreamId",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nftDescriptor",
          "outputs": [
            {
              "internalType": "contract IFlowNFTDescriptor",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ongoingDebtScaledOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "ongoingDebtScaled",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolFee",
          "outputs": [
            { "internalType": "UD60x18", "name": "fee", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "protocolRevenue",
          "outputs": [
            { "internalType": "uint128", "name": "revenue", "type": "uint128" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            { "internalType": "address", "name": "to", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "recover"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            },
            { "internalType": "uint128", "name": "amount", "type": "uint128" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "refund"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            },
            { "internalType": "uint128", "name": "amount", "type": "uint128" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "refundAndPause"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "refundableAmountOf",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "refundableAmount",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            },
            {
              "internalType": "UD21x18",
              "name": "ratePerSecond",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "restart"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            },
            {
              "internalType": "UD21x18",
              "name": "ratePerSecond",
              "type": "uint128"
            },
            { "internalType": "uint128", "name": "amount", "type": "uint128" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "restartAndDeposit"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "senderToStreamId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "streamIds",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            { "internalType": "bool", "name": "approved", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "contract IFlowNFTDescriptor",
              "name": "newNFTDescriptor",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setNFTDescriptor"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "UD60x18",
              "name": "newProtocolFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setProtocolFee"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "statusOf",
          "outputs": [
            {
              "internalType": "enum Flow.Status",
              "name": "status",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            { "internalType": "string", "name": "uri", "type": "string" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalDebtOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "totalDebt",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "newAdmin", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAdmin"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "uncoveredDebtOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "uncoveredDebt",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "void"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint128", "name": "amount", "type": "uint128" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "withdrawnAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "protocolFeeAmount",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "streamId",
              "type": "uint256"
            },
            { "internalType": "address", "name": "to", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawMax",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "withdrawnAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "protocolFeeAmount",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "streamId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawableAmountOf",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "withdrawableAmount",
              "type": "uint128"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "adjustRatePerSecond(uint256,uint128)": {
            "details": "Emits {AdjustFlowStream} and {MetadataUpdate} events. Notes: - Performs a debt snapshot. Requirements: - Must not be delegate called. - `streamId` must not reference a null or a paused stream. - `msg.sender` must be the stream's sender. - `newRatePerSecond` must not equal to the current rate per second.",
            "params": {
              "newRatePerSecond": "The new rate per second, denoted as a fixed-point number where 1e18 is 1 token per second.",
              "streamId": "The ID of the stream to adjust."
            }
          },
          "approve(address,uint256)": { "details": "See {IERC721-approve}." },
          "balanceOf(address)": { "details": "See {IERC721-balanceOf}." },
          "batch(bytes[])": {
            "params": { "calls": "An array of inputs for each call." }
          },
          "collectProtocolRevenue(address,address)": {
            "details": "Emits {CollectProtocolRevenue} event. Requirements: - `msg.sender` must be the contract admin. - The accrued protocol revenue must be greater than zero.",
            "params": {
              "to": "The address to send the protocol revenue.",
              "token": "The contract address of the ERC-20 token for which to claim protocol revenue."
            }
          },
          "constructor": {
            "details": "Emits {TransferAdmin} event.",
            "params": {
              "initialAdmin": "The address of the initial contract admin.",
              "initialNFTDescriptor": "The address of the initial NFT descriptor."
            }
          },
          "coveredDebtOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "create(address,address,uint128,address,bool)": {
            "details": "Emits {CreateFlowStream} event. Requirements: - Must not be delegate called. - `sender` must not be the zero address. - `recipient` must not be the zero address. - The `token`'s decimals must be less than or equal to 18.",
            "params": {
              "ratePerSecond": "The amount by which the debt is increasing every second, denoted as a fixed-point number where 1e18 is 1 token per second.",
              "recipient": "The address receiving the tokens.",
              "sender": "The address streaming the tokens, which is able to adjust and pause the stream. It doesn't have to be the same as `msg.sender`.",
              "token": "The contract address of the ERC-20 token to be streamed.",
              "transferable": "Boolean indicating if the stream NFT is transferable."
            },
            "returns": { "streamId": "The ID of the newly created stream." }
          },
          "createAndDeposit(address,address,uint128,address,bool,uint128)": {
            "details": "Emits {Transfer}, {CreateFlowStream}, and {DepositFlowStream} events. Notes: - Refer to the notes in {deposit}. Requirements: - Refer to the requirements in {create} and {deposit}.",
            "params": {
              "amount": "The deposit amount, denoted in token's decimals.",
              "ratePerSecond": "The amount by which the debt is increasing every second, denoted as a fixed-point number where 1e18 is 1 token per second.",
              "recipient": "The address receiving the tokens.",
              "sender": "The address streaming the tokens. It doesn't have to be the same as `msg.sender`.",
              "token": "The contract address of the ERC-20 token to be streamed.",
              "transferable": "Boolean indicating if the stream NFT is transferable."
            },
            "returns": { "streamId": "The ID of the newly created stream." }
          },
          "depletionTimeOf(uint256)": {
            "details": "Reverts if `streamId` references a paused or a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "deposit(uint256,uint128,address,address)": {
            "details": "Emits {Transfer} and {DepositFlowStream} events. Requirements: - Must not be delegate called. - `streamId` must not reference a null or a voided stream. - `amount` must be greater than zero. - `sender` and `recipient` must match the stream's sender and recipient addresses.",
            "params": {
              "amount": "The deposit amount, denoted in token's decimals.",
              "recipient": "The stream's recipient address.",
              "sender": "The stream's sender address.",
              "streamId": "The ID of the stream to deposit to."
            }
          },
          "depositAndPause(uint256,uint128)": {
            "details": "Emits {Transfer}, {DepositFlowStream} and {PauseFlowStream} events. Notes: - Refer to the notes in {deposit} and {pause}. Requirements: - Refer to the requirements in {deposit} and {pause}.",
            "params": {
              "amount": "The deposit amount, denoted in token's decimals.",
              "streamId": "The ID of the stream to deposit to, and then pause."
            }
          },
          "depositViaBroker(uint256,uint128,address,address,(address,uint256))": {
            "details": "Emits {Transfer} and {DepositFlowStream} events. Notes: - Refer to the notes in {deposit}. Requirements: - Must not be delegate called. - `streamId` must not reference a null stream. - `totalAmount` must be greater than zero. Otherwise it will revert inside {deposit}. - `broker.account` must not be 0 address. - `broker.fee` must not be greater than `MAX_FEE`. It can be zero.",
            "params": {
              "broker": "Struct encapsulating (i) the address of the broker assisting in creating the stream, and (ii) the percentage fee paid to the broker from `totalAmount`, denoted as a fixed-point percentage.",
              "recipient": "The stream's recipient address.",
              "sender": "The stream's sender address.",
              "streamId": "The ID of the stream to deposit on.",
              "totalAmount": "The total amount, including the deposit and any broker fee, denoted in token's decimals."
            }
          },
          "getApproved(uint256)": { "details": "See {IERC721-getApproved}." },
          "getBalance(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getRatePerSecond(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": {
              "streamId": "The ID of the stream to make the query for."
            }
          },
          "getRecipient(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getSender(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getSnapshotDebtScaled(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getSnapshotTime(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": {
              "streamId": "The ID of the stream to make the query for."
            }
          },
          "getStream(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "getStreamsBySender(address)": {
            "details": "Returns the stream ID of the stream owned by `sender`."
          },
          "getToken(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": {
              "streamId": "The ID of the stream to make the query for."
            }
          },
          "getTokenDecimals(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": {
              "streamId": "The ID of the stream to make the query for."
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "isPaused(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "isStream(uint256)": {
            "details": "Does not revert if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "isTransferable(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "isVoided(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "name()": { "details": "See {IERC721Metadata-name}." },
          "ongoingDebtScaledOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "ownerOf(uint256)": { "details": "See {IERC721-ownerOf}." },
          "pause(uint256)": {
            "details": "Emits {PauseFlowStream} event. Notes: - It does not set the snapshot time to the current block timestamp. - It updates the snapshot debt by adding up ongoing debt. - It sets the rate per second to zero. Requirements: - Must not be delegate called. - `streamId` must not reference a null or an already paused stream. - `msg.sender` must be the stream's sender.",
            "params": { "streamId": "The ID of the stream to pause." }
          },
          "recover(address,address)": {
            "details": "Emits {Recover} event. Notes: - The surplus amount is defined as the difference between the total balance of the contract for the provided ERC-20 token and the sum of balances of all streams created using the same ERC-20 token. Requirements: - `msg.sender` must be the contract admin. - The surplus amount must be greater than zero.",
            "params": {
              "to": "The address to send the surplus amount.",
              "token": "The contract address of the ERC-20 token to recover for."
            }
          },
          "refund(uint256,uint128)": {
            "details": "Emits {Transfer} and {RefundFromFlowStream} events. Requirements: - Must not be delegate called. - `streamId` must not reference a null stream. - `msg.sender` must be the sender. - `amount` must be greater than zero and must not exceed the refundable amount.",
            "params": {
              "amount": "The amount to refund, denoted in token's decimals.",
              "streamId": "The ID of the stream to refund from."
            }
          },
          "refundAndPause(uint256,uint128)": {
            "details": "Emits {Transfer}, {RefundFromFlowStream} and {PauseFlowStream} events. Notes: - Refer to the notes in {pause}. Requirements: - Refer to the requirements in {refund} and {pause}.",
            "params": {
              "amount": "The amount to refund, denoted in token's decimals.",
              "streamId": "The ID of the stream to refund from and then pause."
            }
          },
          "refundableAmountOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "restart(uint256,uint128)": {
            "details": "Emits {RestartFlowStream} event. - This function updates stream's `snapshotTime` to the current block timestamp. Notes: - It sets the snapshot time to the current block timestamp. Requirements: - Must not be delegate called. - `streamId` must not reference a null, or a voided stream. - `msg.sender` must be the stream's sender. - `ratePerSecond` must be greater than zero.",
            "params": {
              "ratePerSecond": "The amount by which the debt is increasing every second, denoted as a fixed-point number where 1e18 is 1 token per second.",
              "streamId": "The ID of the stream to restart."
            }
          },
          "restartAndDeposit(uint256,uint128,uint128)": {
            "details": "Emits {RestartFlowStream}, {Transfer}, and {DepositFlowStream} events. Notes: - Refer to the notes in {restart} and {deposit}. Requirements: - `amount` must be greater than zero. - Refer to the requirements in {restart}.",
            "params": {
              "amount": "The deposit amount, denoted in token's decimals.",
              "ratePerSecond": "The amount by which the debt is increasing every second, denoted as a fixed-point number where 1e18 is 1 token per second.",
              "streamId": "The ID of the stream to restart."
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "setNFTDescriptor(address)": {
            "details": "Emits {SetNFTDescriptor} and {BatchMetadataUpdate} events. Notes: - Does not revert if the NFT descriptor is the same. Requirements: - `msg.sender` must be the contract admin.",
            "params": {
              "newNFTDescriptor": "The address of the new NFT descriptor contract."
            }
          },
          "setProtocolFee(address,uint256)": {
            "details": "Emits {SetProtocolFee} and {BatchMetadataUpdate} events. Notes: - Does not revert if the fee is the same. - It can be zero. Requirements: - `msg.sender` must be the contract admin. - `newProtocolFee` must not be greater than `MAX_FEE`.",
            "params": {
              "newProtocolFee": "The new protocol fee, denoted as a fixed-point percentage where 1e18 is 100%.",
              "token": "The contract address of the ERC-20 token to update the fee for."
            }
          },
          "statusOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": { "details": "See {IERC721Metadata-symbol}." },
          "tokenURI(uint256)": { "details": "See {IERC721Metadata-tokenURI}." },
          "totalDebtOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "transferAdmin(address)": {
            "details": "Notes: - Does not revert if the admin is the same. - This function can potentially leave the contract without an admin, thereby removing any functionality that is only available to the admin. Requirements: - `msg.sender` must be the contract admin.",
            "params": { "newAdmin": "The address of the new admin." }
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "uncoveredDebtOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." }
          },
          "void(uint256)": {
            "details": "Emits {VoidFlowStream} event. Notes: - It sets snapshot time to the `block.timestamp` - Voiding an insolvent stream sets the snapshot debt to the stream's balance making the uncovered debt to become zero. - Voiding a solvent stream updates the snapshot debt by adding up ongoing debt. - It sets the rate per second to zero. - A voided stream cannot be restarted. Requirements: - Must not be delegate called. - `streamId` must not reference a null or a voided stream. - `msg.sender` must either be the stream's sender, recipient or an approved third party.",
            "params": { "streamId": "The ID of the stream to void." }
          },
          "withdraw(uint256,address,uint128)": {
            "details": "Emits {Transfer} and {WithdrawFromFlowStream} events. Notes: - It sets the snapshot time to the `block.timestamp` if `amount` is greater than snapshot debt. - A protocol fee may be charged on the withdrawn amount if the protocol fee is enabled for the streaming token. Requirements: - Must not be delegate called. - `streamId` must not reference a null stream. - `to` must not be the zero address. - `to` must be the recipient if `msg.sender` is not the stream's recipient. - `amount` must  be greater than zero and must not exceed the withdrawable amount.",
            "params": {
              "amount": "The amount to withdraw, denoted in token's decimals.",
              "streamId": "The ID of the stream to withdraw from.",
              "to": "The address receiving the withdrawn tokens."
            },
            "returns": {
              "protocolFeeAmount": "The protocol fee amount, denoted in the token's decimals.",
              "withdrawnAmount": "The amount withdrawn to the recipient, denoted in token's decimals. This is input amount minus the protocol fee."
            }
          },
          "withdrawMax(uint256,address)": {
            "details": "Emits {Transfer} and {WithdrawFromFlowStream} events. Notes: - Refer to the notes in {withdraw}. Requirements: - Refer to the requirements in {withdraw}.",
            "params": {
              "streamId": "The ID of the stream to withdraw from.",
              "to": "The address receiving the withdrawn tokens."
            },
            "returns": {
              "protocolFeeAmount": "The protocol fee amount, denoted in the token's decimals.",
              "withdrawnAmount": "The amount withdrawn to the recipient, denoted in token's decimals."
            }
          },
          "withdrawableAmountOf(uint256)": {
            "details": "Reverts if `streamId` references a null stream.",
            "params": { "streamId": "The stream ID for the query." },
            "returns": {
              "withdrawableAmount": "The amount that the recipient can withdraw."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MAX_FEE()": {
            "notice": "Retrieves the maximum fee that can be charged by the broker and the protocol, denoted as a fixed-point percentage where 1e18 is 100%."
          },
          "adjustRatePerSecond(uint256,uint128)": {
            "notice": "Changes the stream's rate per second."
          },
          "admin()": {
            "notice": "The address of the admin account or contract."
          },
          "aggregateBalance(address)": {
            "notice": "Retrieves the sum of balances of all streams."
          },
          "batch(bytes[])": {
            "notice": "Allows batched call to self, `this` contract."
          },
          "collectProtocolRevenue(address,address)": {
            "notice": "Collect the protocol revenue accrued for the provided ERC-20 token."
          },
          "coveredDebtOf(uint256)": {
            "notice": "Returns the amount of debt covered by the stream balance, denoted in token's decimals."
          },
          "create(address,address,uint128,address,bool)": {
            "notice": "Creates a new Flow stream by setting the snapshot time to `block.timestamp` and leaving the balance to zero. The stream is wrapped in an ERC-721 NFT."
          },
          "createAndDeposit(address,address,uint128,address,bool,uint128)": {
            "notice": "Creates a new Flow stream by setting the snapshot time to `block.timestamp` and the balance to `amount`. The stream is wrapped in an ERC-721 NFT."
          },
          "depletionTimeOf(uint256)": {
            "notice": "Returns the time at which the total debt exceeds stream balance. If the total debt is less than or equal to stream balance, it returns 0."
          },
          "deposit(uint256,uint128,address,address)": {
            "notice": "Makes a deposit in a stream."
          },
          "depositAndPause(uint256,uint128)": {
            "notice": "Deposits tokens in a stream and pauses it."
          },
          "depositViaBroker(uint256,uint128,address,address,(address,uint256))": {
            "notice": "Deposits tokens in a stream."
          },
          "getBalance(uint256)": {
            "notice": "Retrieves the balance of the stream, i.e. the total deposited amounts subtracted by the total withdrawn amounts, denoted in token's decimals."
          },
          "getRatePerSecond(uint256)": {
            "notice": "Retrieves the rate per second of the stream, denoted as a fixed-point number where 1e18 is 1 token per second."
          },
          "getRecipient(uint256)": {
            "notice": "Retrieves the stream's recipient."
          },
          "getSender(uint256)": { "notice": "Retrieves the stream's sender." },
          "getSnapshotDebtScaled(uint256)": {
            "notice": "Retrieves the snapshot debt of the stream, denoted as a fixed-point number where 1e18 is 1 token."
          },
          "getSnapshotTime(uint256)": {
            "notice": "Retrieves the snapshot time of the stream, which is a Unix timestamp."
          },
          "getStream(uint256)": { "notice": "Retrieves the stream entity." },
          "getToken(uint256)": {
            "notice": "Retrieves the token of the stream."
          },
          "getTokenDecimals(uint256)": {
            "notice": "Retrieves the token decimals of the stream."
          },
          "isPaused(uint256)": {
            "notice": "Returns whether a stream is paused."
          },
          "isStream(uint256)": {
            "notice": "Retrieves a flag indicating whether the stream exists."
          },
          "isTransferable(uint256)": {
            "notice": "Retrieves a flag indicating whether the stream NFT is transferable."
          },
          "isVoided(uint256)": {
            "notice": "Retrieves a flag indicating whether the stream is voided."
          },
          "nextStreamId()": { "notice": "Counter for stream ids." },
          "nftDescriptor()": {
            "notice": "Contract that generates the non-fungible token URI."
          },
          "ongoingDebtScaledOf(uint256)": {
            "notice": "Returns the amount of debt accrued since the snapshot time until now, denoted as a fixed-point number where 1e18 is 1 token."
          },
          "pause(uint256)": { "notice": "Pauses the stream." },
          "protocolFee(address)": {
            "notice": "Protocol fee for the provided ERC-20 token, denoted as a fixed-point percentage where 1e18 is 100%."
          },
          "protocolRevenue(address)": {
            "notice": "Protocol revenue accrued for the provided ERC-20 token, denoted in token's decimals."
          },
          "recover(address,address)": {
            "notice": "Recover the surplus amount of tokens."
          },
          "refund(uint256,uint128)": {
            "notice": "Refunds the provided amount of tokens from the stream to the sender's address."
          },
          "refundAndPause(uint256,uint128)": {
            "notice": "Refunds the provided amount of tokens from the stream to the sender's address."
          },
          "refundableAmountOf(uint256)": {
            "notice": "Returns the amount that the sender can be refunded from the stream, denoted in token's decimals."
          },
          "restart(uint256,uint128)": {
            "notice": "Restarts the stream with the provided rate per second."
          },
          "restartAndDeposit(uint256,uint128,uint128)": {
            "notice": "Restarts the stream with the provided rate per second, and makes a deposit."
          },
          "setNFTDescriptor(address)": {
            "notice": "Sets a new NFT descriptor contract, which produces the URI describing the DebtStream stream NFTs."
          },
          "setProtocolFee(address,uint256)": {
            "notice": "Sets a new protocol fee that will be charged on all the withdrawals from streams created with the provided ERC-20 token."
          },
          "statusOf(uint256)": { "notice": "Returns the stream's status." },
          "totalDebtOf(uint256)": {
            "notice": "Returns the total amount owed by the sender to the recipient, denoted in token's decimals."
          },
          "transferAdmin(address)": {
            "notice": "Transfers the contract admin to a new address."
          },
          "uncoveredDebtOf(uint256)": {
            "notice": "Returns the amount of debt not covered by the stream balance, denoted in token's decimals."
          },
          "void(uint256)": { "notice": "Voids a stream." },
          "withdraw(uint256,address,uint128)": {
            "notice": "Withdraws the provided `amount` minus the protocol fee to the provided `to` address."
          },
          "withdrawMax(uint256,address)": {
            "notice": "Withdraws the entire withdrawable amount minus the protocol fee to the provided `to` address."
          },
          "withdrawableAmountOf(uint256)": {
            "notice": "Calculates the amount that the recipient can withdraw from the stream, denoted in token decimals. This is an alias for `coveredDebtOf`."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@prb/math/=node_modules/@prb/math/",
        "forge-std/=node_modules/forge-std/",
        "solady/=node_modules/solady/"
      ],
      "optimizer": { "enabled": true, "runs": 10000 },
      "metadata": { "bytecodeHash": "none" },
      "compilationTarget": { "src/DebtStream.sol": "DebtStream" },
      "evmVersion": "shanghai",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol": {
        "keccak256": "0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44",
        "urls": [
          "bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd",
          "dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol": {
        "keccak256": "0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d",
        "urls": [
          "bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b",
          "dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
        "urls": [
          "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
          "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
        "urls": [
          "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
          "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784",
        "urls": [
          "bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd",
          "dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4",
        "urls": [
          "bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7",
          "dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49",
        "urls": [
          "bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22",
          "dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1",
        "urls": [
          "bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02",
          "dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
        "urls": [
          "bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
          "dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133",
        "urls": [
          "bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8",
          "dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
        "urls": [
          "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
          "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe",
        "urls": [
          "bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c",
          "dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
        "urls": [
          "bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
          "dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/Common.sol": {
        "keccak256": "0x8225a3898d2f11f585da1fb82234800e9717fa080dbe53d450fd429a3a632e99",
        "urls": [
          "bzz-raw://2dcbf39ca575f68f32f0d1c66391de94082424956e7585e849813966f8c0fc05",
          "dweb:/ipfs/QmYvk8vXFDUJHrmqbtutYXfoLomLBosYLyBzuPoYBxsQ42"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/UD21x18.sol": {
        "keccak256": "0xb0176747ae9c9f329bce39730d4d315b839e73a815494ddf2de2094aa9056957",
        "urls": [
          "bzz-raw://534a82fe091627f9d01e665ac763daf56981b30b3976269f8e5c33a84a2dbebc",
          "dweb:/ipfs/QmYiiGJNr4S4ypYB4KGBPMTMiNskert8Cp4s6uf1CU3k73"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/UD60x18.sol": {
        "keccak256": "0xb98c6f74275914d279e8af6c502c2b1f50d5f6e1ed418d3b0153f5a193206c48",
        "urls": [
          "bzz-raw://a750edde2955f160806a51083a12185fb04e20efca0e3a7ebd127dc1acc049a9",
          "dweb:/ipfs/QmeAre3mThopoQPB9mSXZq6jck59QZ7JbDFR83urd2SLvp"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Casting.sol": {
        "keccak256": "0x5d365f655f01598926c5d4fe5cda277f2cc7736fe38f943c11a32009077ddd5c",
        "urls": [
          "bzz-raw://56b378bd6039819bc12e5f17dabd9492e1410b3281f9df496cf8210539101a11",
          "dweb:/ipfs/QmcMaE64ZWMg9cFhYxdTuG8nfzeDdNuTRHMMoFXi6tSZGu"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Constants.sol": {
        "keccak256": "0xc14cc32061863d83912f9616de86f3c34f1ac58614b7d504c6ce07ee8efdb8e8",
        "urls": [
          "bzz-raw://22483b1282dda6a556b0232f008a5a3296bbfd76b1886e6b72bf351b7c554fab",
          "dweb:/ipfs/QmYX9cYkrFxBbhZNKsb6uUxtrc2chmAj7vuc7UKRPGMwos"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/Errors.sol": {
        "keccak256": "0xc3c8b1ab3d19889c356c222a3a2186d45dfc1d3a17b9ad88159bb64ee457baa6",
        "urls": [
          "bzz-raw://84fbe57569246403f778330bd7723018dfcb5f0ec50d7b1d82cc983c94a54bca",
          "dweb:/ipfs/QmWssAAnovc2EVjt58rTnxraE9B1RMivwTvYCYgpnr6oSE"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd1x18/ValueType.sol": {
        "keccak256": "0xaa9dc7b562faf45264390d80e2ea10c5295bb8a4f10d76261a3f9c04363734c0",
        "urls": [
          "bzz-raw://c6ca36acd15f5cb47cf124ddec289f84e1011f2d29056159e4570435629a3353",
          "dweb:/ipfs/QmUKdiLmZpAkNCq2TKxrPbQPUhiRFXGfjGSnY1VeHVu4y6"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd21x18/Casting.sol": {
        "keccak256": "0x4a16adddb9ab1f6939dd4567c77205015a11081cb840029b84bbb6fdaf78ee36",
        "urls": [
          "bzz-raw://5003b2f4cd2fc1413da36bc63107c6e83a88d29693e8f97b54f300fa78f9c6d2",
          "dweb:/ipfs/QmaNJn91NLrZmeeGqnFQV1FTrLVSW852zHyWTrWJ5pf1pd"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd21x18/Constants.sol": {
        "keccak256": "0x501c2d5cfdea9450422182059c8df1cb6a859901a07bd59631c3fa24edcc79d4",
        "urls": [
          "bzz-raw://4669a65001c92919671fd879d33ce0e5030b602a7ba4d36bd2308128d8d1f396",
          "dweb:/ipfs/QmUC3bJ3qdkCmLMw3WHBcEqvuC4tExT2LXzUhgu5KQ3vi3"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd21x18/Errors.sol": {
        "keccak256": "0xc5422ee47eb139274e538e758fb40177a1ba22c2113ef3b3446102f0150bfe0a",
        "urls": [
          "bzz-raw://a1981e052e9e86e1b0e4e55a057a7af4739aedd4ead2d60e3eaa40fb703594ee",
          "dweb:/ipfs/QmPK5qSujnyk1R8ues4RhDMy1tRKKyjQ31YJTviTKq7GML"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd21x18/ValueType.sol": {
        "keccak256": "0x532bba888370bed393464412f4ef3462d654802e71c953ad02d078e3d2701092",
        "urls": [
          "bzz-raw://922a4e8dd813602f72d165aa1dfdf2c29b971a2abe73bebca7cd81a32ee2c880",
          "dweb:/ipfs/QmTBAJnx1r3sZpbQAuTgQtsTtvjZbpDwhCJRzkhzUumbdf"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Casting.sol": {
        "keccak256": "0xdf70d8e70c6d6325f3f7eb028c484bc7189ef902f1d4b5b220af2e550bb5fc39",
        "urls": [
          "bzz-raw://0b15bcd36129c5cb163d57a117435afb171182018dd6d1e766a5f49cf1f4b63d",
          "dweb:/ipfs/QmbjzkMBH4FM2rdxGbx9LQ65wVERijNcu7R9C8dQmH3y4n"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Constants.sol": {
        "keccak256": "0x9bcb8dd6b3e886d140ad1c32747a4f6d29a492529ceb835be878ae837aa6cc3a",
        "urls": [
          "bzz-raw://c4045c633e3618e7e90a768d92415b2f20f781fe129b4f4e26fa88f7dbf9201f",
          "dweb:/ipfs/Qmbet95pizwPno82cJ383wJtgQRSQKESmhVZ1vDrgAu7Si"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Errors.sol": {
        "keccak256": "0x0a79c28c85fc8a450b0801ff2e66114eac4ec565819f5d1d8738904658fe33e2",
        "urls": [
          "bzz-raw://9e0d4fd3c998019fb8555d9e26c03bec42a8513bdf4185aeac2da3a000abaebf",
          "dweb:/ipfs/QmahFJHXcX4RwPxaQbUf6LVZEk8NSpjCV3Eif7i9iqC6Mk"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Helpers.sol": {
        "keccak256": "0x208570f1657cf730cb6c3d81aa14030e0d45cf906cdedea5059369d7df4bb716",
        "urls": [
          "bzz-raw://4c78ca900edafa9338d4e3649a55ab0c84f76468d8a22fb945ba6d01e70f8fed",
          "dweb:/ipfs/QmeP4hQYfNxcATd1FsasdD4ebyu2vrC9K1N68swxUJzzZD"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/Math.sol": {
        "keccak256": "0xd8e8b51db9b3e2fa31a60f6b8ce4ea0112c3364442ede5992aa0aa7a2c925c84",
        "urls": [
          "bzz-raw://3c56913970e34ee7b142047b21f1856a511cbdc3473b7c50418a8490e19cd462",
          "dweb:/ipfs/QmfG1F9CBDjPYD7NXora9awFfdpvBMY9SCg5pMLCFRv9tD"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/sd59x18/ValueType.sol": {
        "keccak256": "0x76597ba64d37d66e0178512bc9bbc1a031a7634c45e5d5c6e9da87f46952dc9d",
        "urls": [
          "bzz-raw://36148899ad874814e9292636fb974d2eec61f1bcc0875ec39cf444d70ba40919",
          "dweb:/ipfs/QmadUe4kH2FPcdxvhCKy8yiezCvPWor4VcPzqLYSAaGDDb"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud21x18/Casting.sol": {
        "keccak256": "0x3821aa57604f6e5b7c9c5c5cc97a6d71116e673cf3fee5f76fcd42b4cefded65",
        "urls": [
          "bzz-raw://a80399c6b38ab45cc10d0a6683d50340cd89d9a085b6d0dcfb81e7c4e5b3ce09",
          "dweb:/ipfs/QmWNW2YD2LMkqrpAtJYeeuHN329Rx7mvfmrjsCo1p6akTL"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud21x18/Constants.sol": {
        "keccak256": "0x0997574a1ced6c43bde6d9c9175edc5ad64cbb920a0969a9db68eea543747601",
        "urls": [
          "bzz-raw://c09f03345a6779b002b38ffc3954258accbb2b1d0d5506d42c3bd7f117304f60",
          "dweb:/ipfs/QmTeBXRCE7H2HpqKUNsZN7Nk3rdBnFmbAUFom3E1PJeGuV"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud21x18/Errors.sol": {
        "keccak256": "0x35a1fb789b90f8c90865884d3023deb17fcca5c7146b5ddef823496d835a5415",
        "urls": [
          "bzz-raw://0af359d07ba25bdc90de7c05ed6216833932caa75d4a02fcfc51ceeaba5a4e80",
          "dweb:/ipfs/QmavBFw73Xfp1qJiN6P1gk2Dfr8ByWo3dyCPVgDHtko2gq"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud21x18/ValueType.sol": {
        "keccak256": "0x24838b2b1da371b9259d8ee21534a9f0cb5796aba75a4efca2374627952bee25",
        "urls": [
          "bzz-raw://897e6b79308651671c7f3c91a0069e778b47356c9ba3f86e238398ab7f2623af",
          "dweb:/ipfs/QmZbLw3tJVRZFQnV9jWQUmF43gna841adSG2TAiwDAifGU"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Casting.sol": {
        "keccak256": "0x0f3141ed054e7c29dbe1acb4b88b18eb05d60e998fba6b4e503a6799faa356d6",
        "urls": [
          "bzz-raw://b1e2468fc4c458082aaf4aa2e35af9ba3702f207e3c8533dd1e7da11ad605eae",
          "dweb:/ipfs/QmSm7iRH1eo4cJCwcAiiXWRH9Hn1urSS4tMdbaFbFGuTyL"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Constants.sol": {
        "keccak256": "0x29b0e050c865899e1fb9022b460a7829cdee248c44c4299f068ba80695eec3fc",
        "urls": [
          "bzz-raw://cbaef16b662fac235349bcf97bc980dd0cba15d4e6230caae61224cdac8ea6d9",
          "dweb:/ipfs/QmZQa5XBhi7k3yhtCd8wVpnwW8htfU4sjXxWhxRypMBYkC"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/Errors.sol": {
        "keccak256": "0x3b27e2a57438cd30d9c130f84aace24d547e5ed58e8689691d7d92ad2db38ddd",
        "urls": [
          "bzz-raw://841cf9fb45443899c6b659300bbf503c3fd2c1a1e83b7f0e28620eed457f7437",
          "dweb:/ipfs/QmUqg8WscP5yQPw3UMUCWaB9RLU6nryGzseuyhAjNnDc1i"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud2x18/ValueType.sol": {
        "keccak256": "0x975a2e69b48f34a4c0bd80e8a5609ac67b7264c91992c0944f9ebe7b9e3fc9d0",
        "urls": [
          "bzz-raw://65d012521c475295d7e70b7d526fcc0911d0f238ea938719d77251bba00c9b41",
          "dweb:/ipfs/QmexEvTQCCBPYRWAYnomZX5M7C2EkXQRAXqEYMNUZfazCs"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Casting.sol": {
        "keccak256": "0x0803318ddc98b4ba8fbfe70e5ee08d78387fe6ae00982b9960518085a751d7b6",
        "urls": [
          "bzz-raw://2e68a2f780b2e33fa5416eb60f9daa81f014c2591119f4b67bed1217d5530780",
          "dweb:/ipfs/QmZe7JTWvbfKqMnu4sxUwWCtLcCay9hH71VZUpoFCdENcr"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Constants.sol": {
        "keccak256": "0x2b80d26153d3fdcfb3a9ca772d9309d31ed1275f5b8b54c3ffb54d3652b37d90",
        "urls": [
          "bzz-raw://7e3a6673a156f635db94dc176baaa7274db8f9bec4461cd1152596253550ee3b",
          "dweb:/ipfs/Qmc9zT4kNSbMYaXcnbxNVqmb3P3m46ieaQxkwxqLwsvRA5"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Conversions.sol": {
        "keccak256": "0xd486ecca97abe69acdb28230088f4c7097fbdae5b36c5ae45d5be2faac4c33f2",
        "urls": [
          "bzz-raw://6080870ec6955ff0f5278f9c480b218a68714daf5f2ee42da0276d08d7b82932",
          "dweb:/ipfs/QmQ1SERHdemJgPrt4USwY8j5r63jZ8fQuJAm1knjMEEQEY"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Errors.sol": {
        "keccak256": "0xbab6b0e303d32f3a9d9e2fe881f0392b8c59a73051a4d34f21a403b3961b3044",
        "urls": [
          "bzz-raw://86a019bcf2510d0691287329dc057479cc0abc48a5e15f245e7f15c03052d2c8",
          "dweb:/ipfs/QmeXe5pbpDHvN5DZ8puXmH2RJ25zDHj55wpiStWtNQPvq6"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Helpers.sol": {
        "keccak256": "0xf5faff881391d2c060029499a666cc5f0bea90a213150bb476fae8f02a5df268",
        "urls": [
          "bzz-raw://76105fa22bb1b5f1fa99abf9c4fbc9577a02c7bc204f271754c407f0d75489f5",
          "dweb:/ipfs/QmVNGZSTniDuZus5DdbFubqJXCLtTaZit7YPm4ntjr5Lgr"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/Math.sol": {
        "keccak256": "0xc4e51dfd9af62938e277e90fa724099f239d33727a35909ed48c292a76faf2fc",
        "urls": [
          "bzz-raw://d731537cbc50b852c21d28625aeb2c329729afc23a7b86ff9d8ee5878f47e9d6",
          "dweb:/ipfs/QmS7Cj4pAdPZcTp7RqYXyxBc9EYX92CT8icfkNigktUsLr"
        ],
        "license": "MIT"
      },
      "node_modules/@prb/math/src/ud60x18/ValueType.sol": {
        "keccak256": "0x1b200baf25d01a8b91b97b42114248636f742b5b7028487ef4daef6621e378a3",
        "urls": [
          "bzz-raw://b5708ed017206bda2197654e80bea9f37b3a9993434bb066c903c2865e028f47",
          "dweb:/ipfs/QmTyotZk2J5YvWkNvB2qhXBMgRGWW2UgPqR4JPocrXSr8n"
        ],
        "license": "MIT"
      },
      "src/DebtStream.sol": {
        "keccak256": "0xbaecf3c74f94ff58a2516de834c5af61f8a5d9db2fc46d603c98d0f268c1b351",
        "urls": [
          "bzz-raw://29cd61808826e63ca3cac2bfe8a51d1eb9512a2e4baba8992360cd43d2d10dc9",
          "dweb:/ipfs/QmdgHfga9hbT2NZDtUE2Y9TrVzzrqCwjBkT6fZ29iGGJYm"
        ],
        "license": "BUSL-1.1"
      },
      "src/abstracts/Adminable.sol": {
        "keccak256": "0xdbcb26718ab7e57e1df94fd9ecd7de1345b839e6fb4925dc1a1182da770651b6",
        "urls": [
          "bzz-raw://02d559eaa018921cb60d10eb015d1d12e5a3ebe35c68afbbb8fb58370238dd37",
          "dweb:/ipfs/QmTKaj3GqGssMXiNjno8NvzkKrCLHwx3dsDdsoFajCDf5c"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/abstracts/Batch.sol": {
        "keccak256": "0xd37246623947e8e8fc13c5746037f2b25e19c4f15d5d38642be8c9fe0556a3d6",
        "urls": [
          "bzz-raw://87c1baa5320ce5c6c6f44eaef8d84206855793b7e662c1904a86d511601d9608",
          "dweb:/ipfs/QmWBc8HreqVttbUtGAatJ4LWot8JTihfjD8CXXWtBUMowQ"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/abstracts/DebtStreamBase.sol": {
        "keccak256": "0x75eb27700ed0676b6bdc1adf08bc0ee01dc1bb237dbb10715860b7eb5586b153",
        "urls": [
          "bzz-raw://4c822db3c20124455e6fe4e8f974a4d774baa6029705c87a0b3cd4773a518fff",
          "dweb:/ipfs/QmQFafEK1xjaZ5pWwQN9FuqkeFdLxAUCzNGNdGfok1kvLQ"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/abstracts/NoDelegateCall.sol": {
        "keccak256": "0x6c9e22ca1303c5953ee5574c1605515bab67dc71e9325605087557c7faf71059",
        "urls": [
          "bzz-raw://8f3de9954d1dfb54e6be6a082c2732b3bd5f4b88549e2d1b29ed5527fef13fc0",
          "dweb:/ipfs/QmfRzCfJRr2StpLTG93Qp6rvfMWfbRRoo7DKoy6yPDizwP"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/IAdminable.sol": {
        "keccak256": "0xa279c49e51228b571329164e36250e82b2c1378e8b549194ab7dd90fca9c3b2b",
        "urls": [
          "bzz-raw://b0af605b82e64679db7039fb378fc206c4a000f8cd24b3ff17b019e27b81be8f",
          "dweb:/ipfs/QmUSr73cbnG7K79mVE9Nwcou5nJZEK2ZGekt3KpkfpxL4Z"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/IDebtStream.sol": {
        "keccak256": "0x28d3320ec104c3ed2d406f7f59395290ec19ea2dbbbb7aa8dbd6805d82c3e1c2",
        "urls": [
          "bzz-raw://19e2d26f2f9f0e5c2f53d50f44949b52f39c94e6c737ab19d9fe5f8bfbb32bcc",
          "dweb:/ipfs/QmPmmDYTcDoK8g8SEZ2yXshLczaXX8jtGExymfC1HCWAEj"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/IDebtStreamBase.sol": {
        "keccak256": "0xa0c39afd497102d773db0c9ea83c33ece21154f7fd2a32e80f5e6d462241e6f0",
        "urls": [
          "bzz-raw://c24007e926404d4d95a019144c907c45a0617d03760d8be6569cd9fdce58faf7",
          "dweb:/ipfs/QmT8RFH5jwaKwbyGUtRjRfnQpszfUncDE27nsdZzzXhHRc"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/IFlowNFTDescriptor.sol": {
        "keccak256": "0x231028cd85886e1417278a3770d61f68653e0c14a3a6854dbd2fd5e26f24fe47",
        "urls": [
          "bzz-raw://8acb425aa62953b689dc0d25cc1294f539469eab5a3b5f65d19db904499c2494",
          "dweb:/ipfs/QmRvtw5jgJGp22EJeNouqqkGcMUiizp2TnhnkCmGfvB5en"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/libraries/Errors.sol": {
        "keccak256": "0x70e2e60533e212bf5b64d60a4c4e64294ffc823b68c9e5d9a778d53ea7079639",
        "urls": [
          "bzz-raw://f7a4806128c028fef15f1eb0fdbeca9b1a106931f7f492965050577888d584e5",
          "dweb:/ipfs/QmPJNLgjPc3johPdh7N52GAGVoAtC4XWw9AVxq5PgFzNbP"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/libraries/Helpers.sol": {
        "keccak256": "0x195a3855d409ac7c8bca0714101e7c12a785c1d50359948f8ee1a7d3e8e30c3e",
        "urls": [
          "bzz-raw://2611624626cc51b1af688616447568419d7d73eb35b59e212a756bad9665bc2e",
          "dweb:/ipfs/QmRKmQJfu6YrjDEe17wqrrR4oVmub6vBR2yLri6bSWmHJj"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/types/DataTypes.sol": {
        "keccak256": "0xaaa5b90094cfafd31ec968c769c88ff91b27677d6dcea172b0d4672a537f0a10",
        "urls": [
          "bzz-raw://16b34fa9fa2fa7b791631c6a819b554692b8aeb8bb89c671fb0f6179c9e88e9d",
          "dweb:/ipfs/Qmcg91DDt8AjjnGrgHnDQogsq4Us8YPCfCHVG4DJVDNSB6"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "id": 75
}
